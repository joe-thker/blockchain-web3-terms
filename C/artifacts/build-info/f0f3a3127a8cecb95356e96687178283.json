{
	"id": "f0f3a3127a8cecb95356e96687178283",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"C/collateral1.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// Import OpenZeppelin libraries for security and token operations\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract CollateralManager is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // Mapping to keep track of allowed ERC20 tokens for collateral\n    mapping(address => bool) public allowedTokens;\n    // Nested mapping to track user collateral balances: user => token => amount\n    mapping(address => mapping(address => uint256)) public collateralBalances;\n\n    // Events for transparency and off-chain tracking\n    event CollateralDeposited(address indexed user, address indexed token, uint256 amount);\n    event CollateralWithdrawn(address indexed user, address indexed token, uint256 amount);\n    event AllowedTokenAdded(address indexed token);\n    event AllowedTokenRemoved(address indexed token);\n\n    // Modifier to ensure the token is allowed for collateral operations\n    modifier onlyAllowedToken(address token) {\n        require(allowedTokens[token], \"Token not allowed\");\n        _;\n    }\n\n    /// @notice Constructor initializes the contract owner\n    constructor() Ownable(msg.sender) {}\n\n    /// @notice Owner can add an ERC20 token to the allowed list\n    /// @param token The address of the ERC20 token to allow\n    function addAllowedToken(address token) external onlyOwner {\n        require(token != address(0), \"Invalid token address\");\n        allowedTokens[token] = true;\n        emit AllowedTokenAdded(token);\n    }\n\n    /// @notice Owner can remove an ERC20 token from the allowed list\n    /// @param token The address of the ERC20 token to remove\n    function removeAllowedToken(address token) external onlyOwner {\n        require(allowedTokens[token], \"Token not allowed\");\n        allowedTokens[token] = false;\n        emit AllowedTokenRemoved(token);\n    }\n\n    /// @notice Allows a user to deposit a specified amount of an allowed token as collateral\n    /// @param token The address of the ERC20 token to deposit\n    /// @param amount The amount of tokens to deposit\n    function depositCollateral(address token, uint256 amount)\n        external\n        nonReentrant\n        onlyAllowedToken(token)\n    {\n        require(amount > 0, \"Amount must be > 0\");\n        // Safe transfer from the user to this contract\n        IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\n        collateralBalances[msg.sender][token] += amount;\n        emit CollateralDeposited(msg.sender, token, amount);\n    }\n\n    /// @notice Allows a user to withdraw a specified amount of their collateral\n    /// @param token The address of the ERC20 token to withdraw\n    /// @param amount The amount of tokens to withdraw\n    function withdrawCollateral(address token, uint256 amount)\n        external\n        nonReentrant\n        onlyAllowedToken(token)\n    {\n        require(amount > 0, \"Amount must be > 0\");\n        require(collateralBalances[msg.sender][token] >= amount, \"Insufficient collateral\");\n        collateralBalances[msg.sender][token] -= amount;\n        // Safe transfer from this contract back to the user\n        IERC20(token).safeTransfer(msg.sender, amount);\n        emit CollateralWithdrawn(msg.sender, token, amount);\n    }\n\n    /// @notice Returns the collateral balance for a given user and token\n    /// @param user The address of the user\n    /// @param token The address of the ERC20 token\n    /// @return The amount of collateral the user has deposited for the token\n    function getCollateralBalance(address user, address token)\n        external\n        view\n        returns (uint256)\n    {\n        return collateralBalances[user][token];\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID OR SUB 0xD RJUMP 0x556F PUSH8 0xAEDC1EA4BF304AC0 CREATE 0xDB 0xC9 MOD 0xA7 0x27 PUSH15 0x479159E0692A32ED7F64736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "698:8692:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID OR SUB 0xD RJUMP 0x556F PUSH8 0xAEDC1EA4BF304AC0 CREATE 0xDB 0xC9 MOD 0xA7 0x27 PUSH15 0x479159E0692A32ED7F64736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "698:8692:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"C/collateral1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"C/collateral1.sol": {
				"CollateralManager": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "AllowedTokenAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "AllowedTokenRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CollateralDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CollateralWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "addAllowedToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowedTokens",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "collateralBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getCollateralBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "removeAllowedToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addAllowedToken(address)": {
								"params": {
									"token": "The address of the ERC20 token to allow"
								}
							},
							"depositCollateral(address,uint256)": {
								"params": {
									"amount": "The amount of tokens to deposit",
									"token": "The address of the ERC20 token to deposit"
								}
							},
							"getCollateralBalance(address,address)": {
								"params": {
									"token": "The address of the ERC20 token",
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The amount of collateral the user has deposited for the token"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeAllowedToken(address)": {
								"params": {
									"token": "The address of the ERC20 token to remove"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawCollateral(address,uint256)": {
								"params": {
									"amount": "The amount of tokens to withdraw",
									"token": "The address of the ERC20 token to withdraw"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"C/collateral1.sol\":307:3813  contract CollateralManager is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"C/collateral1.sol\":1283:1319  constructor() Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"C/collateral1.sol\":1305:1315  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"C/collateral1.sol\":307:3813  contract CollateralManager is Ownable, ReentrancyGuard {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_15:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_16:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_21\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_17:\n    /* \"#utility.yul\":328:352   */\n  tag_23\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_16\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_8:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_25\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"C/collateral1.sol\":307:3813  contract CollateralManager is Ownable, ReentrancyGuard {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"C/collateral1.sol\":307:3813  contract CollateralManager is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x90469a9d\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x90469a9d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa5d5db0c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb7d5820b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe744092e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x350c35e9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x39ecf9ba\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4178617f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"C/collateral1.sol\":2864:3383  function withdrawCollateral(address token, uint256 amount)... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"C/collateral1.sol\":601:674  mapping(address => mapping(address => uint256)) public collateralBalances */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/collateral1.sol\":1451:1656  function addAllowedToken(address token) external onlyOwner {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/collateral1.sol\":1794:2002  function removeAllowedToken(address token) external onlyOwner {... */\n    tag_8:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"C/collateral1.sol\":2219:2658  function depositCollateral(address token, uint256 amount)... */\n    tag_9:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"C/collateral1.sol\":3637:3811  function getCollateralBalance(address user, address token)... */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/collateral1.sol\":469:514  mapping(address => bool) public allowedTokens */\n    tag_11:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"C/collateral1.sol\":2864:3383  function withdrawCollateral(address token, uint256 amount)... */\n    tag_17:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_53\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_54\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_53:\n        /* \"C/collateral1.sol\":2986:2991  token */\n      dup2\n        /* \"C/collateral1.sol\":1158:1171  allowedTokens */\n      0x02\n        /* \"C/collateral1.sol\":1158:1178  allowedTokens[token] */\n      0x00\n        /* \"C/collateral1.sol\":1172:1177  token */\n      dup3\n        /* \"C/collateral1.sol\":1158:1178  allowedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"C/collateral1.sol\":1150:1200  require(allowedTokens[token], \"Token not allowed\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"C/collateral1.sol\":3024:3025  0 */\n      0x00\n        /* \"C/collateral1.sol\":3015:3021  amount */\n      dup3\n        /* \"C/collateral1.sol\":3015:3025  amount > 0 */\n      gt\n        /* \"C/collateral1.sol\":3007:3048  require(amount > 0, \"Amount must be > 0\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"C/collateral1.sol\":3107:3113  amount */\n      dup2\n        /* \"C/collateral1.sol\":3066:3084  collateralBalances */\n      0x03\n        /* \"C/collateral1.sol\":3066:3096  collateralBalances[msg.sender] */\n      0x00\n        /* \"C/collateral1.sol\":3085:3095  msg.sender */\n      caller\n        /* \"C/collateral1.sol\":3066:3096  collateralBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateral1.sol\":3066:3103  collateralBalances[msg.sender][token] */\n      0x00\n        /* \"C/collateral1.sol\":3097:3102  token */\n      dup6\n        /* \"C/collateral1.sol\":3066:3103  collateralBalances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/collateral1.sol\":3066:3113  collateralBalances[msg.sender][token] >= amount */\n      lt\n      iszero\n        /* \"C/collateral1.sol\":3058:3141  require(collateralBalances[msg.sender][token] >= amount, \"Insufficient collateral\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"C/collateral1.sol\":3192:3198  amount */\n      dup2\n        /* \"C/collateral1.sol\":3151:3169  collateralBalances */\n      0x03\n        /* \"C/collateral1.sol\":3151:3181  collateralBalances[msg.sender] */\n      0x00\n        /* \"C/collateral1.sol\":3170:3180  msg.sender */\n      caller\n        /* \"C/collateral1.sol\":3151:3181  collateralBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateral1.sol\":3151:3188  collateralBalances[msg.sender][token] */\n      0x00\n        /* \"C/collateral1.sol\":3182:3187  token */\n      dup6\n        /* \"C/collateral1.sol\":3151:3188  collateralBalances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/collateral1.sol\":3151:3198  collateralBalances[msg.sender][token] -= amount */\n      dup3\n      dup3\n      sload\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/collateral1.sol\":3269:3315  IERC20(token).safeTransfer(msg.sender, amount) */\n      tag_68\n        /* \"C/collateral1.sol\":3296:3306  msg.sender */\n      caller\n        /* \"C/collateral1.sol\":3308:3314  amount */\n      dup4\n        /* \"C/collateral1.sol\":3276:3281  token */\n      dup6\n        /* \"C/collateral1.sol\":3269:3295  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_69\n      swap1\n        /* \"C/collateral1.sol\":3269:3315  IERC20(token).safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_68:\n        /* \"C/collateral1.sol\":3362:3367  token */\n      dup3\n        /* \"C/collateral1.sol\":3330:3376  CollateralWithdrawn(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/collateral1.sol\":3350:3360  msg.sender */\n      caller\n        /* \"C/collateral1.sol\":3330:3376  CollateralWithdrawn(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x45892a46e6cef329bb642da6d69846d324db43d19008edc141ed82382eda1bee\n        /* \"C/collateral1.sol\":3369:3375  amount */\n      dup5\n        /* \"C/collateral1.sol\":3330:3376  CollateralWithdrawn(msg.sender, token, amount) */\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_71\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_71:\n        /* \"C/collateral1.sol\":2864:3383  function withdrawCollateral(address token, uint256 amount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"C/collateral1.sol\":601:674  mapping(address => mapping(address => uint256)) public collateralBalances */\n    tag_21:\n      mstore(0x20, 0x03)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"C/collateral1.sol\":1451:1656  function addAllowedToken(address token) external onlyOwner {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_74:\n        /* \"C/collateral1.sol\":1545:1546  0 */\n      0x00\n        /* \"C/collateral1.sol\":1528:1547  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/collateral1.sol\":1528:1533  token */\n      dup2\n        /* \"C/collateral1.sol\":1528:1547  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"C/collateral1.sol\":1520:1573  require(token != address(0), \"Invalid token address\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"C/collateral1.sol\":1606:1610  true */\n      0x01\n        /* \"C/collateral1.sol\":1583:1596  allowedTokens */\n      0x02\n        /* \"C/collateral1.sol\":1583:1603  allowedTokens[token] */\n      0x00\n        /* \"C/collateral1.sol\":1597:1602  token */\n      dup4\n        /* \"C/collateral1.sol\":1583:1603  allowedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/collateral1.sol\":1583:1610  allowedTokens[token] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"C/collateral1.sol\":1643:1648  token */\n      dup1\n        /* \"C/collateral1.sol\":1625:1649  AllowedTokenAdded(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf849d00bc67e9e4bf072df9680646c59b8c5380160834c2e1d4896ce5ec81f75\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/collateral1.sol\":1451:1656  function addAllowedToken(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"C/collateral1.sol\":1794:2002  function removeAllowedToken(address token) external onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_87:\n        /* \"C/collateral1.sol\":1874:1887  allowedTokens */\n      0x02\n        /* \"C/collateral1.sol\":1874:1894  allowedTokens[token] */\n      0x00\n        /* \"C/collateral1.sol\":1888:1893  token */\n      dup3\n        /* \"C/collateral1.sol\":1874:1894  allowedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"C/collateral1.sol\":1866:1916  require(allowedTokens[token], \"Token not allowed\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_58\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"C/collateral1.sol\":1949:1954  false */\n      0x00\n        /* \"C/collateral1.sol\":1926:1939  allowedTokens */\n      0x02\n        /* \"C/collateral1.sol\":1926:1946  allowedTokens[token] */\n      0x00\n        /* \"C/collateral1.sol\":1940:1945  token */\n      dup4\n        /* \"C/collateral1.sol\":1926:1946  allowedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/collateral1.sol\":1926:1954  allowedTokens[token] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"C/collateral1.sol\":1989:1994  token */\n      dup1\n        /* \"C/collateral1.sol\":1969:1995  AllowedTokenRemoved(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbf996b4fd74f0c7159bb017b1db415b0d9a6f13129f46d0b93309d170b78df31\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/collateral1.sol\":1794:2002  function removeAllowedToken(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"C/collateral1.sol\":2219:2658  function depositCollateral(address token, uint256 amount)... */\n    tag_39:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_92\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_54\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_92:\n        /* \"C/collateral1.sol\":2340:2345  token */\n      dup2\n        /* \"C/collateral1.sol\":1158:1171  allowedTokens */\n      0x02\n        /* \"C/collateral1.sol\":1158:1178  allowedTokens[token] */\n      0x00\n        /* \"C/collateral1.sol\":1172:1177  token */\n      dup3\n        /* \"C/collateral1.sol\":1158:1178  allowedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"C/collateral1.sol\":1150:1200  require(allowedTokens[token], \"Token not allowed\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap1\n      tag_58\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"C/collateral1.sol\":2378:2379  0 */\n      0x00\n        /* \"C/collateral1.sol\":2369:2375  amount */\n      dup3\n        /* \"C/collateral1.sol\":2369:2379  amount > 0 */\n      gt\n        /* \"C/collateral1.sol\":2361:2402  require(amount > 0, \"Amount must be > 0\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_62\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"C/collateral1.sol\":2468:2533  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_99\n        /* \"C/collateral1.sol\":2499:2509  msg.sender */\n      caller\n        /* \"C/collateral1.sol\":2519:2523  this */\n      address\n        /* \"C/collateral1.sol\":2526:2532  amount */\n      dup5\n        /* \"C/collateral1.sol\":2475:2480  token */\n      dup7\n        /* \"C/collateral1.sol\":2468:2498  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_100\n      swap1\n        /* \"C/collateral1.sol\":2468:2533  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_99:\n        /* \"C/collateral1.sol\":2584:2590  amount */\n      dup2\n        /* \"C/collateral1.sol\":2543:2561  collateralBalances */\n      0x03\n        /* \"C/collateral1.sol\":2543:2573  collateralBalances[msg.sender] */\n      0x00\n        /* \"C/collateral1.sol\":2562:2572  msg.sender */\n      caller\n        /* \"C/collateral1.sol\":2543:2573  collateralBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateral1.sol\":2543:2580  collateralBalances[msg.sender][token] */\n      0x00\n        /* \"C/collateral1.sol\":2574:2579  token */\n      dup6\n        /* \"C/collateral1.sol\":2543:2580  collateralBalances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/collateral1.sol\":2543:2590  collateralBalances[msg.sender][token] += amount */\n      dup3\n      dup3\n      sload\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/collateral1.sol\":2637:2642  token */\n      dup3\n        /* \"C/collateral1.sol\":2605:2651  CollateralDeposited(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/collateral1.sol\":2625:2635  msg.sender */\n      caller\n        /* \"C/collateral1.sol\":2605:2651  CollateralDeposited(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf1c0dd7e9b98bbff859029005ef89b127af049cd18df1a8d79f0b7e019911e56\n        /* \"C/collateral1.sol\":2644:2650  amount */\n      dup5\n        /* \"C/collateral1.sol\":2605:2651  CollateralDeposited(msg.sender, token, amount) */\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_104\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_104:\n        /* \"C/collateral1.sol\":2219:2658  function depositCollateral(address token, uint256 amount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"C/collateral1.sol\":3637:3811  function getCollateralBalance(address user, address token)... */\n    tag_42:\n        /* \"C/collateral1.sol\":3743:3750  uint256 */\n      0x00\n        /* \"C/collateral1.sol\":3773:3791  collateralBalances */\n      0x03\n        /* \"C/collateral1.sol\":3773:3797  collateralBalances[user] */\n      0x00\n        /* \"C/collateral1.sol\":3792:3796  user */\n      dup5\n        /* \"C/collateral1.sol\":3773:3797  collateralBalances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateral1.sol\":3773:3804  collateralBalances[user][token] */\n      0x00\n        /* \"C/collateral1.sol\":3798:3803  token */\n      dup4\n        /* \"C/collateral1.sol\":3773:3804  collateralBalances[user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/collateral1.sol\":3766:3804  return collateralBalances[user][token] */\n      swap1\n      pop\n        /* \"C/collateral1.sol\":3637:3811  function getCollateralBalance(address user, address token)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"C/collateral1.sol\":469:514  mapping(address => bool) public allowedTokens */\n    tag_46:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_109\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_118\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_31\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_132\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_136\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_137)\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_142:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_144:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_145:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_173\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_144\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_146:\n        /* \"#utility.yul\":641:665   */\n      tag_175\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_145\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_176:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_147:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_178\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_146\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_148:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_149:\n        /* \"#utility.yul\":997:1021   */\n      tag_181\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_148\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_182:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_150:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_184\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_149\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_16:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      0x00\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_187\n      tag_142\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1290:1409   */\n    tag_186:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_188\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_147\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_189\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_150\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:2151   */\n    tag_20:\n        /* \"#utility.yul\":1745:1751   */\n      0x00\n        /* \"#utility.yul\":1753:1759   */\n      0x00\n        /* \"#utility.yul\":1802:1804   */\n      0x40\n        /* \"#utility.yul\":1790:1799   */\n      dup4\n        /* \"#utility.yul\":1781:1788   */\n      dup6\n        /* \"#utility.yul\":1777:1800   */\n      sub\n        /* \"#utility.yul\":1773:1805   */\n      slt\n        /* \"#utility.yul\":1770:1889   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":1808:1887   */\n      tag_192\n      tag_142\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1770:1889   */\n    tag_191:\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1953:2006   */\n      tag_193\n        /* \"#utility.yul\":1998:2005   */\n      dup6\n        /* \"#utility.yul\":1989:1995   */\n      dup3\n        /* \"#utility.yul\":1978:1987   */\n      dup7\n        /* \"#utility.yul\":1974:1996   */\n      add\n        /* \"#utility.yul\":1953:2006   */\n      tag_147\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":1943:2006   */\n      swap3\n      pop\n        /* \"#utility.yul\":1899:2016   */\n      pop\n        /* \"#utility.yul\":2055:2057   */\n      0x20\n        /* \"#utility.yul\":2081:2134   */\n      tag_194\n        /* \"#utility.yul\":2126:2133   */\n      dup6\n        /* \"#utility.yul\":2117:2123   */\n      dup3\n        /* \"#utility.yul\":2106:2115   */\n      dup7\n        /* \"#utility.yul\":2102:2124   */\n      add\n        /* \"#utility.yul\":2081:2134   */\n      tag_147\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2071:2134   */\n      swap2\n      pop\n        /* \"#utility.yul\":2026:2144   */\n      pop\n        /* \"#utility.yul\":1677:2151   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2157:2275   */\n    tag_151:\n        /* \"#utility.yul\":2244:2268   */\n      tag_196\n        /* \"#utility.yul\":2262:2267   */\n      dup2\n        /* \"#utility.yul\":2244:2268   */\n      tag_148\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2239:2242   */\n      dup3\n        /* \"#utility.yul\":2232:2269   */\n      mstore\n        /* \"#utility.yul\":2157:2275   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2281:2503   */\n    tag_23:\n        /* \"#utility.yul\":2374:2378   */\n      0x00\n        /* \"#utility.yul\":2412:2414   */\n      0x20\n        /* \"#utility.yul\":2401:2410   */\n      dup3\n        /* \"#utility.yul\":2397:2415   */\n      add\n        /* \"#utility.yul\":2389:2415   */\n      swap1\n      pop\n        /* \"#utility.yul\":2425:2496   */\n      tag_198\n        /* \"#utility.yul\":2493:2494   */\n      0x00\n        /* \"#utility.yul\":2482:2491   */\n      dup4\n        /* \"#utility.yul\":2478:2495   */\n      add\n        /* \"#utility.yul\":2469:2475   */\n      dup5\n        /* \"#utility.yul\":2425:2496   */\n      tag_151\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2281:2503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2509:2838   */\n    tag_26:\n        /* \"#utility.yul\":2568:2574   */\n      0x00\n        /* \"#utility.yul\":2617:2619   */\n      0x20\n        /* \"#utility.yul\":2605:2614   */\n      dup3\n        /* \"#utility.yul\":2596:2603   */\n      dup5\n        /* \"#utility.yul\":2592:2615   */\n      sub\n        /* \"#utility.yul\":2588:2620   */\n      slt\n        /* \"#utility.yul\":2585:2704   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":2623:2702   */\n      tag_201\n      tag_142\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2585:2704   */\n    tag_200:\n        /* \"#utility.yul\":2743:2744   */\n      0x00\n        /* \"#utility.yul\":2768:2821   */\n      tag_202\n        /* \"#utility.yul\":2813:2820   */\n      dup5\n        /* \"#utility.yul\":2804:2810   */\n      dup3\n        /* \"#utility.yul\":2793:2802   */\n      dup6\n        /* \"#utility.yul\":2789:2811   */\n      add\n        /* \"#utility.yul\":2768:2821   */\n      tag_147\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2758:2821   */\n      swap2\n      pop\n        /* \"#utility.yul\":2714:2831   */\n      pop\n        /* \"#utility.yul\":2509:2838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2844:2962   */\n    tag_152:\n        /* \"#utility.yul\":2931:2955   */\n      tag_204\n        /* \"#utility.yul\":2949:2954   */\n      dup2\n        /* \"#utility.yul\":2931:2955   */\n      tag_145\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2926:2929   */\n      dup3\n        /* \"#utility.yul\":2919:2956   */\n      mstore\n        /* \"#utility.yul\":2844:2962   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2968:3190   */\n    tag_33:\n        /* \"#utility.yul\":3061:3065   */\n      0x00\n        /* \"#utility.yul\":3099:3101   */\n      0x20\n        /* \"#utility.yul\":3088:3097   */\n      dup3\n        /* \"#utility.yul\":3084:3102   */\n      add\n        /* \"#utility.yul\":3076:3102   */\n      swap1\n      pop\n        /* \"#utility.yul\":3112:3183   */\n      tag_206\n        /* \"#utility.yul\":3180:3181   */\n      0x00\n        /* \"#utility.yul\":3169:3178   */\n      dup4\n        /* \"#utility.yul\":3165:3182   */\n      add\n        /* \"#utility.yul\":3156:3162   */\n      dup5\n        /* \"#utility.yul\":3112:3183   */\n      tag_152\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2968:3190   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3196:3286   */\n    tag_153:\n        /* \"#utility.yul\":3230:3237   */\n      0x00\n        /* \"#utility.yul\":3273:3278   */\n      dup2\n        /* \"#utility.yul\":3266:3279   */\n      iszero\n        /* \"#utility.yul\":3259:3280   */\n      iszero\n        /* \"#utility.yul\":3248:3280   */\n      swap1\n      pop\n        /* \"#utility.yul\":3196:3286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3292:3401   */\n    tag_154:\n        /* \"#utility.yul\":3373:3394   */\n      tag_209\n        /* \"#utility.yul\":3388:3393   */\n      dup2\n        /* \"#utility.yul\":3373:3394   */\n      tag_153\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3368:3371   */\n      dup3\n        /* \"#utility.yul\":3361:3395   */\n      mstore\n        /* \"#utility.yul\":3292:3401   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3407:3617   */\n    tag_48:\n        /* \"#utility.yul\":3494:3498   */\n      0x00\n        /* \"#utility.yul\":3532:3534   */\n      0x20\n        /* \"#utility.yul\":3521:3530   */\n      dup3\n        /* \"#utility.yul\":3517:3535   */\n      add\n        /* \"#utility.yul\":3509:3535   */\n      swap1\n      pop\n        /* \"#utility.yul\":3545:3610   */\n      tag_211\n        /* \"#utility.yul\":3607:3608   */\n      0x00\n        /* \"#utility.yul\":3596:3605   */\n      dup4\n        /* \"#utility.yul\":3592:3609   */\n      add\n        /* \"#utility.yul\":3583:3589   */\n      dup5\n        /* \"#utility.yul\":3545:3610   */\n      tag_154\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3407:3617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3623:3792   */\n    tag_155:\n        /* \"#utility.yul\":3707:3718   */\n      0x00\n        /* \"#utility.yul\":3741:3747   */\n      dup3\n        /* \"#utility.yul\":3736:3739   */\n      dup3\n        /* \"#utility.yul\":3729:3748   */\n      mstore\n        /* \"#utility.yul\":3781:3785   */\n      0x20\n        /* \"#utility.yul\":3776:3779   */\n      dup3\n        /* \"#utility.yul\":3772:3786   */\n      add\n        /* \"#utility.yul\":3757:3786   */\n      swap1\n      pop\n        /* \"#utility.yul\":3623:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:3965   */\n    tag_156:\n        /* \"#utility.yul\":3938:3957   */\n      0x546f6b656e206e6f7420616c6c6f776564000000000000000000000000000000\n        /* \"#utility.yul\":3934:3935   */\n      0x00\n        /* \"#utility.yul\":3926:3932   */\n      dup3\n        /* \"#utility.yul\":3922:3936   */\n      add\n        /* \"#utility.yul\":3915:3958   */\n      mstore\n        /* \"#utility.yul\":3798:3965   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3971:4337   */\n    tag_157:\n        /* \"#utility.yul\":4113:4116   */\n      0x00\n        /* \"#utility.yul\":4134:4201   */\n      tag_215\n        /* \"#utility.yul\":4198:4200   */\n      0x11\n        /* \"#utility.yul\":4193:4196   */\n      dup4\n        /* \"#utility.yul\":4134:4201   */\n      tag_155\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4127:4201   */\n      swap2\n      pop\n        /* \"#utility.yul\":4210:4303   */\n      tag_216\n        /* \"#utility.yul\":4299:4302   */\n      dup3\n        /* \"#utility.yul\":4210:4303   */\n      tag_156\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4328:4330   */\n      0x20\n        /* \"#utility.yul\":4323:4326   */\n      dup3\n        /* \"#utility.yul\":4319:4331   */\n      add\n        /* \"#utility.yul\":4312:4331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3971:4337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4343:4762   */\n    tag_58:\n        /* \"#utility.yul\":4509:4513   */\n      0x00\n        /* \"#utility.yul\":4547:4549   */\n      0x20\n        /* \"#utility.yul\":4536:4545   */\n      dup3\n        /* \"#utility.yul\":4532:4550   */\n      add\n        /* \"#utility.yul\":4524:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4596:4605   */\n      dup2\n        /* \"#utility.yul\":4590:4594   */\n      dup2\n        /* \"#utility.yul\":4586:4606   */\n      sub\n        /* \"#utility.yul\":4582:4583   */\n      0x00\n        /* \"#utility.yul\":4571:4580   */\n      dup4\n        /* \"#utility.yul\":4567:4584   */\n      add\n        /* \"#utility.yul\":4560:4607   */\n      mstore\n        /* \"#utility.yul\":4624:4755   */\n      tag_218\n        /* \"#utility.yul\":4750:4754   */\n      dup2\n        /* \"#utility.yul\":4624:4755   */\n      tag_157\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4616:4755   */\n      swap1\n      pop\n        /* \"#utility.yul\":4343:4762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4768:4936   */\n    tag_158:\n        /* \"#utility.yul\":4908:4928   */\n      0x416d6f756e74206d757374206265203e20300000000000000000000000000000\n        /* \"#utility.yul\":4904:4905   */\n      0x00\n        /* \"#utility.yul\":4896:4902   */\n      dup3\n        /* \"#utility.yul\":4892:4906   */\n      add\n        /* \"#utility.yul\":4885:4929   */\n      mstore\n        /* \"#utility.yul\":4768:4936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4942:5308   */\n    tag_159:\n        /* \"#utility.yul\":5084:5087   */\n      0x00\n        /* \"#utility.yul\":5105:5172   */\n      tag_221\n        /* \"#utility.yul\":5169:5171   */\n      0x12\n        /* \"#utility.yul\":5164:5167   */\n      dup4\n        /* \"#utility.yul\":5105:5172   */\n      tag_155\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5098:5172   */\n      swap2\n      pop\n        /* \"#utility.yul\":5181:5274   */\n      tag_222\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5181:5274   */\n      tag_158\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5299:5301   */\n      0x20\n        /* \"#utility.yul\":5294:5297   */\n      dup3\n        /* \"#utility.yul\":5290:5302   */\n      add\n        /* \"#utility.yul\":5283:5302   */\n      swap1\n      pop\n        /* \"#utility.yul\":4942:5308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5314:5733   */\n    tag_62:\n        /* \"#utility.yul\":5480:5484   */\n      0x00\n        /* \"#utility.yul\":5518:5520   */\n      0x20\n        /* \"#utility.yul\":5507:5516   */\n      dup3\n        /* \"#utility.yul\":5503:5521   */\n      add\n        /* \"#utility.yul\":5495:5521   */\n      swap1\n      pop\n        /* \"#utility.yul\":5567:5576   */\n      dup2\n        /* \"#utility.yul\":5561:5565   */\n      dup2\n        /* \"#utility.yul\":5557:5577   */\n      sub\n        /* \"#utility.yul\":5553:5554   */\n      0x00\n        /* \"#utility.yul\":5542:5551   */\n      dup4\n        /* \"#utility.yul\":5538:5555   */\n      add\n        /* \"#utility.yul\":5531:5578   */\n      mstore\n        /* \"#utility.yul\":5595:5726   */\n      tag_224\n        /* \"#utility.yul\":5721:5725   */\n      dup2\n        /* \"#utility.yul\":5595:5726   */\n      tag_159\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5587:5726   */\n      swap1\n      pop\n        /* \"#utility.yul\":5314:5733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5739:5912   */\n    tag_160:\n        /* \"#utility.yul\":5879:5904   */\n      0x496e73756666696369656e7420636f6c6c61746572616c000000000000000000\n        /* \"#utility.yul\":5875:5876   */\n      0x00\n        /* \"#utility.yul\":5867:5873   */\n      dup3\n        /* \"#utility.yul\":5863:5877   */\n      add\n        /* \"#utility.yul\":5856:5905   */\n      mstore\n        /* \"#utility.yul\":5739:5912   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5918:6284   */\n    tag_161:\n        /* \"#utility.yul\":6060:6063   */\n      0x00\n        /* \"#utility.yul\":6081:6148   */\n      tag_227\n        /* \"#utility.yul\":6145:6147   */\n      0x17\n        /* \"#utility.yul\":6140:6143   */\n      dup4\n        /* \"#utility.yul\":6081:6148   */\n      tag_155\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":6074:6148   */\n      swap2\n      pop\n        /* \"#utility.yul\":6157:6250   */\n      tag_228\n        /* \"#utility.yul\":6246:6249   */\n      dup3\n        /* \"#utility.yul\":6157:6250   */\n      tag_160\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6275:6277   */\n      0x20\n        /* \"#utility.yul\":6270:6273   */\n      dup3\n        /* \"#utility.yul\":6266:6278   */\n      add\n        /* \"#utility.yul\":6259:6278   */\n      swap1\n      pop\n        /* \"#utility.yul\":5918:6284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6290:6709   */\n    tag_65:\n        /* \"#utility.yul\":6456:6460   */\n      0x00\n        /* \"#utility.yul\":6494:6496   */\n      0x20\n        /* \"#utility.yul\":6483:6492   */\n      dup3\n        /* \"#utility.yul\":6479:6497   */\n      add\n        /* \"#utility.yul\":6471:6497   */\n      swap1\n      pop\n        /* \"#utility.yul\":6543:6552   */\n      dup2\n        /* \"#utility.yul\":6537:6541   */\n      dup2\n        /* \"#utility.yul\":6533:6553   */\n      sub\n        /* \"#utility.yul\":6529:6530   */\n      0x00\n        /* \"#utility.yul\":6518:6527   */\n      dup4\n        /* \"#utility.yul\":6514:6531   */\n      add\n        /* \"#utility.yul\":6507:6554   */\n      mstore\n        /* \"#utility.yul\":6571:6702   */\n      tag_230\n        /* \"#utility.yul\":6697:6701   */\n      dup2\n        /* \"#utility.yul\":6571:6702   */\n      tag_161\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":6563:6702   */\n      swap1\n      pop\n        /* \"#utility.yul\":6290:6709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6715:6895   */\n    tag_162:\n        /* \"#utility.yul\":6763:6840   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6760:6761   */\n      0x00\n        /* \"#utility.yul\":6753:6841   */\n      mstore\n        /* \"#utility.yul\":6860:6864   */\n      0x11\n        /* \"#utility.yul\":6857:6858   */\n      0x04\n        /* \"#utility.yul\":6850:6865   */\n      mstore\n        /* \"#utility.yul\":6884:6888   */\n      0x24\n        /* \"#utility.yul\":6881:6882   */\n      0x00\n        /* \"#utility.yul\":6874:6889   */\n      revert\n        /* \"#utility.yul\":6901:7095   */\n    tag_67:\n        /* \"#utility.yul\":6941:6945   */\n      0x00\n        /* \"#utility.yul\":6961:6981   */\n      tag_233\n        /* \"#utility.yul\":6979:6980   */\n      dup3\n        /* \"#utility.yul\":6961:6981   */\n      tag_148\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6956:6981   */\n      swap2\n      pop\n        /* \"#utility.yul\":6995:7015   */\n      tag_234\n        /* \"#utility.yul\":7013:7014   */\n      dup4\n        /* \"#utility.yul\":6995:7015   */\n      tag_148\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6990:7015   */\n      swap3\n      pop\n        /* \"#utility.yul\":7039:7040   */\n      dup3\n        /* \"#utility.yul\":7036:7037   */\n      dup3\n        /* \"#utility.yul\":7032:7041   */\n      sub\n        /* \"#utility.yul\":7024:7041   */\n      swap1\n      pop\n        /* \"#utility.yul\":7063:7064   */\n      dup2\n        /* \"#utility.yul\":7057:7061   */\n      dup2\n        /* \"#utility.yul\":7054:7065   */\n      gt\n        /* \"#utility.yul\":7051:7088   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":7068:7086   */\n      tag_236\n      tag_162\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":7051:7088   */\n    tag_235:\n        /* \"#utility.yul\":6901:7095   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7101:7272   */\n    tag_163:\n        /* \"#utility.yul\":7241:7264   */\n      0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n        /* \"#utility.yul\":7237:7238   */\n      0x00\n        /* \"#utility.yul\":7229:7235   */\n      dup3\n        /* \"#utility.yul\":7225:7239   */\n      add\n        /* \"#utility.yul\":7218:7265   */\n      mstore\n        /* \"#utility.yul\":7101:7272   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7278:7644   */\n    tag_164:\n        /* \"#utility.yul\":7420:7423   */\n      0x00\n        /* \"#utility.yul\":7441:7508   */\n      tag_239\n        /* \"#utility.yul\":7505:7507   */\n      0x15\n        /* \"#utility.yul\":7500:7503   */\n      dup4\n        /* \"#utility.yul\":7441:7508   */\n      tag_155\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":7434:7508   */\n      swap2\n      pop\n        /* \"#utility.yul\":7517:7610   */\n      tag_240\n        /* \"#utility.yul\":7606:7609   */\n      dup3\n        /* \"#utility.yul\":7517:7610   */\n      tag_163\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7635:7637   */\n      0x20\n        /* \"#utility.yul\":7630:7633   */\n      dup3\n        /* \"#utility.yul\":7626:7638   */\n      add\n        /* \"#utility.yul\":7619:7638   */\n      swap1\n      pop\n        /* \"#utility.yul\":7278:7644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7650:8069   */\n    tag_79:\n        /* \"#utility.yul\":7816:7820   */\n      0x00\n        /* \"#utility.yul\":7854:7856   */\n      0x20\n        /* \"#utility.yul\":7843:7852   */\n      dup3\n        /* \"#utility.yul\":7839:7857   */\n      add\n        /* \"#utility.yul\":7831:7857   */\n      swap1\n      pop\n        /* \"#utility.yul\":7903:7912   */\n      dup2\n        /* \"#utility.yul\":7897:7901   */\n      dup2\n        /* \"#utility.yul\":7893:7913   */\n      sub\n        /* \"#utility.yul\":7889:7890   */\n      0x00\n        /* \"#utility.yul\":7878:7887   */\n      dup4\n        /* \"#utility.yul\":7874:7891   */\n      add\n        /* \"#utility.yul\":7867:7914   */\n      mstore\n        /* \"#utility.yul\":7931:8062   */\n      tag_242\n        /* \"#utility.yul\":8057:8061   */\n      dup2\n        /* \"#utility.yul\":7931:8062   */\n      tag_164\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7923:8062   */\n      swap1\n      pop\n        /* \"#utility.yul\":7650:8069   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8075:8266   */\n    tag_102:\n        /* \"#utility.yul\":8115:8118   */\n      0x00\n        /* \"#utility.yul\":8134:8154   */\n      tag_244\n        /* \"#utility.yul\":8152:8153   */\n      dup3\n        /* \"#utility.yul\":8134:8154   */\n      tag_148\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8129:8154   */\n      swap2\n      pop\n        /* \"#utility.yul\":8168:8188   */\n      tag_245\n        /* \"#utility.yul\":8186:8187   */\n      dup4\n        /* \"#utility.yul\":8168:8188   */\n      tag_148\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":8163:8188   */\n      swap3\n      pop\n        /* \"#utility.yul\":8211:8212   */\n      dup3\n        /* \"#utility.yul\":8208:8209   */\n      dup3\n        /* \"#utility.yul\":8204:8213   */\n      add\n        /* \"#utility.yul\":8197:8213   */\n      swap1\n      pop\n        /* \"#utility.yul\":8232:8235   */\n      dup1\n        /* \"#utility.yul\":8229:8230   */\n      dup3\n        /* \"#utility.yul\":8226:8236   */\n      gt\n        /* \"#utility.yul\":8223:8259   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":8239:8257   */\n      tag_247\n      tag_162\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":8223:8259   */\n    tag_246:\n        /* \"#utility.yul\":8075:8266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8272:8453   */\n    tag_165:\n        /* \"#utility.yul\":8412:8445   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":8408:8409   */\n      0x00\n        /* \"#utility.yul\":8400:8406   */\n      dup3\n        /* \"#utility.yul\":8396:8410   */\n      add\n        /* \"#utility.yul\":8389:8446   */\n      mstore\n        /* \"#utility.yul\":8272:8453   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8459:8825   */\n    tag_166:\n        /* \"#utility.yul\":8601:8604   */\n      0x00\n        /* \"#utility.yul\":8622:8689   */\n      tag_250\n        /* \"#utility.yul\":8686:8688   */\n      0x1f\n        /* \"#utility.yul\":8681:8684   */\n      dup4\n        /* \"#utility.yul\":8622:8689   */\n      tag_155\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":8615:8689   */\n      swap2\n      pop\n        /* \"#utility.yul\":8698:8791   */\n      tag_251\n        /* \"#utility.yul\":8787:8790   */\n      dup3\n        /* \"#utility.yul\":8698:8791   */\n      tag_165\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8816:8818   */\n      0x20\n        /* \"#utility.yul\":8811:8814   */\n      dup3\n        /* \"#utility.yul\":8807:8819   */\n      add\n        /* \"#utility.yul\":8800:8819   */\n      swap1\n      pop\n        /* \"#utility.yul\":8459:8825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8831:9250   */\n    tag_115:\n        /* \"#utility.yul\":8997:9001   */\n      0x00\n        /* \"#utility.yul\":9035:9037   */\n      0x20\n        /* \"#utility.yul\":9024:9033   */\n      dup3\n        /* \"#utility.yul\":9020:9038   */\n      add\n        /* \"#utility.yul\":9012:9038   */\n      swap1\n      pop\n        /* \"#utility.yul\":9084:9093   */\n      dup2\n        /* \"#utility.yul\":9078:9082   */\n      dup2\n        /* \"#utility.yul\":9074:9094   */\n      sub\n        /* \"#utility.yul\":9070:9071   */\n      0x00\n        /* \"#utility.yul\":9059:9068   */\n      dup4\n        /* \"#utility.yul\":9055:9072   */\n      add\n        /* \"#utility.yul\":9048:9095   */\n      mstore\n        /* \"#utility.yul\":9112:9243   */\n      tag_253\n        /* \"#utility.yul\":9238:9242   */\n      dup2\n        /* \"#utility.yul\":9112:9243   */\n      tag_166\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":9104:9243   */\n      swap1\n      pop\n        /* \"#utility.yul\":8831:9250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9256:9588   */\n    tag_119:\n        /* \"#utility.yul\":9377:9381   */\n      0x00\n        /* \"#utility.yul\":9415:9417   */\n      0x40\n        /* \"#utility.yul\":9404:9413   */\n      dup3\n        /* \"#utility.yul\":9400:9418   */\n      add\n        /* \"#utility.yul\":9392:9418   */\n      swap1\n      pop\n        /* \"#utility.yul\":9428:9499   */\n      tag_255\n        /* \"#utility.yul\":9496:9497   */\n      0x00\n        /* \"#utility.yul\":9485:9494   */\n      dup4\n        /* \"#utility.yul\":9481:9498   */\n      add\n        /* \"#utility.yul\":9472:9478   */\n      dup6\n        /* \"#utility.yul\":9428:9499   */\n      tag_152\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":9509:9581   */\n      tag_256\n        /* \"#utility.yul\":9577:9579   */\n      0x20\n        /* \"#utility.yul\":9566:9575   */\n      dup4\n        /* \"#utility.yul\":9562:9580   */\n      add\n        /* \"#utility.yul\":9553:9559   */\n      dup5\n        /* \"#utility.yul\":9509:9581   */\n      tag_151\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":9256:9588   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9594:10036   */\n    tag_133:\n        /* \"#utility.yul\":9743:9747   */\n      0x00\n        /* \"#utility.yul\":9781:9783   */\n      0x60\n        /* \"#utility.yul\":9770:9779   */\n      dup3\n        /* \"#utility.yul\":9766:9784   */\n      add\n        /* \"#utility.yul\":9758:9784   */\n      swap1\n      pop\n        /* \"#utility.yul\":9794:9865   */\n      tag_258\n        /* \"#utility.yul\":9862:9863   */\n      0x00\n        /* \"#utility.yul\":9851:9860   */\n      dup4\n        /* \"#utility.yul\":9847:9864   */\n      add\n        /* \"#utility.yul\":9838:9844   */\n      dup7\n        /* \"#utility.yul\":9794:9865   */\n      tag_152\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":9875:9947   */\n      tag_259\n        /* \"#utility.yul\":9943:9945   */\n      0x20\n        /* \"#utility.yul\":9932:9941   */\n      dup4\n        /* \"#utility.yul\":9928:9946   */\n      add\n        /* \"#utility.yul\":9919:9925   */\n      dup6\n        /* \"#utility.yul\":9875:9947   */\n      tag_152\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":9957:10029   */\n      tag_260\n        /* \"#utility.yul\":10025:10027   */\n      0x40\n        /* \"#utility.yul\":10014:10023   */\n      dup4\n        /* \"#utility.yul\":10010:10028   */\n      add\n        /* \"#utility.yul\":10001:10007   */\n      dup5\n        /* \"#utility.yul\":9957:10029   */\n      tag_151\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":9594:10036   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208695e8b56dc49ac3ecc7191e1e8a5778b586b2156847d75f465b6a63c4a4273464736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_900": {
									"entryPoint": null,
									"id": 900,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 157,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:10",
										"nodeType": "YulBlock",
										"src": "0:590:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:10",
													"nodeType": "YulBlock",
													"src": "52:81:10",
													"statements": [
														{
															"nativeSrc": "62:65:10",
															"nodeType": "YulAssignment",
															"src": "62:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:10",
																		"nodeType": "YulLiteral",
																		"src": "84:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:10"
																},
																"nativeSrc": "73:54:10",
																"nodeType": "YulFunctionCall",
																"src": "73:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:126:10"
											},
											{
												"body": {
													"nativeSrc": "184:51:10",
													"nodeType": "YulBlock",
													"src": "184:51:10",
													"statements": [
														{
															"nativeSrc": "194:35:10",
															"nodeType": "YulAssignment",
															"src": "194:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:10"
																},
																"nativeSrc": "205:24:10",
																"nodeType": "YulFunctionCall",
																"src": "205:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:10",
														"nodeType": "YulTypedName",
														"src": "166:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:10",
														"nodeType": "YulTypedName",
														"src": "176:7:10",
														"type": ""
													}
												],
												"src": "139:96:10"
											},
											{
												"body": {
													"nativeSrc": "306:53:10",
													"nodeType": "YulBlock",
													"src": "306:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:10"
																		},
																		"nativeSrc": "328:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:10"
																},
																"nativeSrc": "316:37:10",
																"nodeType": "YulFunctionCall",
																"src": "316:37:10"
															},
															"nativeSrc": "316:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:10",
														"nodeType": "YulTypedName",
														"src": "294:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:10",
														"nodeType": "YulTypedName",
														"src": "301:3:10",
														"type": ""
													}
												],
												"src": "241:118:10"
											},
											{
												"body": {
													"nativeSrc": "463:124:10",
													"nodeType": "YulBlock",
													"src": "463:124:10",
													"statements": [
														{
															"nativeSrc": "473:26:10",
															"nodeType": "YulAssignment",
															"src": "473:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:10",
																		"nodeType": "YulLiteral",
																		"src": "496:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:10"
																},
																"nativeSrc": "481:18:10",
																"nodeType": "YulFunctionCall",
																"src": "481:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:10",
																				"nodeType": "YulLiteral",
																				"src": "577:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:10"
																		},
																		"nativeSrc": "562:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:10"
																},
																"nativeSrc": "509:71:10",
																"nodeType": "YulFunctionCall",
																"src": "509:71:10"
															},
															"nativeSrc": "509:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:10",
														"nodeType": "YulTypedName",
														"src": "435:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:10",
														"nodeType": "YulTypedName",
														"src": "447:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:10",
														"nodeType": "YulTypedName",
														"src": "458:4:10",
														"type": ""
													}
												],
												"src": "365:222:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x9D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x1B6 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x187 DUP3 PUSH2 0x15E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197 DUP2 PUSH2 0x17D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1293 DUP1 PUSH2 0x1C3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90469A9D GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x90469A9D EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0xA5D5DB0C EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xB7D5820B EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE744092E EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C8 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x350C35E9 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x39ECF9BA EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x4178617F EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x112 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH2 0x5CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x9D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0xA58 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x276 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26D SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x2B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x373 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36A SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x42C CALLER DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x45892A46E6CEF329BB642DA6D69846D324DB43D19008EDC141ED82382EDA1BEE DUP5 PUSH1 0x40 MLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x49A PUSH2 0xB26 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4C6 PUSH2 0xB2F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x534 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52B SWAP1 PUSH2 0x1148 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF849D00BC67E9E4BF072DF9680646C59B8C5380160834C2E1D4896CE5EC81F75 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x5D7 PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x5E0 PUSH0 PUSH2 0xBB6 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x611 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x691 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBF996B4FD74F0C7159BB017B1DB415B0D9A6F13129F46D0B93309D170B78DF31 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x73C PUSH2 0xA58 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BD SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x808 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x835 CALLER ADDRESS DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC77 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF1C0DD7E9B98BBFF859029005EF89B127AF049CD18DF1A8D79F0B7E019911E56 DUP5 PUSH1 0x40 MLOAD PUSH2 0x920 SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x931 PUSH2 0xB26 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x9DC PUSH2 0xB2F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA43 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA55 DUP2 PUSH2 0xBB6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA94 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB21 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xADA SWAP3 SWAP2 SWAP1 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xCF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB37 PUSH2 0xD94 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB55 PUSH2 0x5E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB4 JUMPI PUSH2 0xB78 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAB SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCF3 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xCAC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xCF9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xD18 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xD31 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xD4C JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xD8E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD85 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC8 DUP3 PUSH2 0xD9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD8 DUP2 PUSH2 0xDBE JUMP JUMPDEST DUP2 EQ PUSH2 0xDE2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDF3 DUP2 PUSH2 0xDCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE0B DUP2 PUSH2 0xDF9 JUMP JUMPDEST DUP2 EQ PUSH2 0xE15 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE26 DUP2 PUSH2 0xE02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE42 JUMPI PUSH2 0xE41 PUSH2 0xD9B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE4F DUP6 DUP3 DUP7 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE60 DUP6 DUP3 DUP7 ADD PUSH2 0xE18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE80 JUMPI PUSH2 0xE7F PUSH2 0xD9B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE8D DUP6 DUP3 DUP7 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE9E DUP6 DUP3 DUP7 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB1 DUP2 PUSH2 0xDF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xECA PUSH0 DUP4 ADD DUP5 PUSH2 0xEA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE5 JUMPI PUSH2 0xEE4 PUSH2 0xD9B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEF2 DUP5 DUP3 DUP6 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0xDBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF1D PUSH0 DUP4 ADD DUP5 PUSH2 0xEFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF37 DUP2 PUSH2 0xF23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF50 PUSH0 DUP4 ADD DUP5 PUSH2 0xF2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420616C6C6F776564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF9A PUSH1 0x11 DUP4 PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA5 DUP3 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFC7 DUP2 PUSH2 0xF8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1002 PUSH1 0x12 DUP4 PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP PUSH2 0x100D DUP3 PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x102F DUP2 PUSH2 0xFF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x106A PUSH1 0x17 DUP4 PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP PUSH2 0x1075 DUP3 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1097 DUP2 PUSH2 0x105E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10D5 DUP3 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x10E0 DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x10F8 JUMPI PUSH2 0x10F7 PUSH2 0x109E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1132 PUSH1 0x15 DUP4 PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP PUSH2 0x113D DUP3 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x115F DUP2 PUSH2 0x1126 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1170 DUP3 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x117B DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1193 JUMPI PUSH2 0x1192 PUSH2 0x109E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11CD PUSH1 0x1F DUP4 PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D8 DUP3 PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11FA DUP2 PUSH2 0x11C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1214 PUSH0 DUP4 ADD DUP6 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0x1221 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEA8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x123B PUSH0 DUP4 ADD DUP7 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0x1248 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0x1255 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEA8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 SWAP6 0xE8 0xB5 PUSH14 0xC49AC3ECC7191E1E8A5778B586B2 ISZERO PUSH9 0x47D75F465B6A63C4A4 0x27 CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "307:3506:9:-:0;;;1283:36;;;;;;;;;;1305:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;307:3506:9;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;307:3506:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_747": {
									"entryPoint": 3321,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2863,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_801": {
									"entryPoint": 3476,
									"id": 801,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 2854,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 2648,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2998,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addAllowedToken_929": {
									"entryPoint": 1214,
									"id": 929,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowedTokens_848": {
									"entryPoint": 2487,
									"id": 848,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@collateralBalances_854": {
									"entryPoint": 1182,
									"id": 854,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositCollateral_1005": {
									"entryPoint": 1844,
									"id": 1005,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getCollateralBalance_1080": {
									"entryPoint": 2357,
									"id": 1080,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1506,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeAllowedToken_955": {
									"entryPoint": 1545,
									"id": 955,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1487,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_452": {
									"entryPoint": 3191,
									"id": 452,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 2727,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2516,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawCollateral_1063": {
									"entryPoint": 484,
									"id": 1063,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4648,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4609,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3483,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb": {
									"entryPoint": 4046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b": {
									"entryPoint": 3942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa": {
									"entryPoint": 4150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 4350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10039:10",
										"nodeType": "YulBlock",
										"src": "0:10039:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "748:87:10",
													"nodeType": "YulBlock",
													"src": "748:87:10",
													"statements": [
														{
															"nativeSrc": "758:29:10",
															"nodeType": "YulAssignment",
															"src": "758:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:10"
																},
																"nativeSrc": "767:20:10",
																"nodeType": "YulFunctionCall",
																"src": "767:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:10"
																},
																"nativeSrc": "796:33:10",
																"nodeType": "YulFunctionCall",
																"src": "796:33:10"
															},
															"nativeSrc": "796:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:10",
														"nodeType": "YulTypedName",
														"src": "726:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:10",
														"nodeType": "YulTypedName",
														"src": "734:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:10",
														"nodeType": "YulTypedName",
														"src": "742:5:10",
														"type": ""
													}
												],
												"src": "696:139:10"
											},
											{
												"body": {
													"nativeSrc": "886:32:10",
													"nodeType": "YulBlock",
													"src": "886:32:10",
													"statements": [
														{
															"nativeSrc": "896:16:10",
															"nodeType": "YulAssignment",
															"src": "896:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:10",
																"nodeType": "YulIdentifier",
																"src": "907:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:10",
														"nodeType": "YulTypedName",
														"src": "868:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:10",
														"nodeType": "YulTypedName",
														"src": "878:7:10",
														"type": ""
													}
												],
												"src": "841:77:10"
											},
											{
												"body": {
													"nativeSrc": "967:79:10",
													"nodeType": "YulBlock",
													"src": "967:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:10",
																"nodeType": "YulBlock",
																"src": "1024:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:10"
																			},
																			"nativeSrc": "1026:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:10"
																		},
																		"nativeSrc": "1026:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:10"
																				},
																				"nativeSrc": "997:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:10"
																		},
																		"nativeSrc": "987:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:10"
																},
																"nativeSrc": "980:43:10",
																"nodeType": "YulFunctionCall",
																"src": "980:43:10"
															},
															"nativeSrc": "977:63:10",
															"nodeType": "YulIf",
															"src": "977:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:10",
														"nodeType": "YulTypedName",
														"src": "960:5:10",
														"type": ""
													}
												],
												"src": "924:122:10"
											},
											{
												"body": {
													"nativeSrc": "1104:87:10",
													"nodeType": "YulBlock",
													"src": "1104:87:10",
													"statements": [
														{
															"nativeSrc": "1114:29:10",
															"nodeType": "YulAssignment",
															"src": "1114:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:10"
																},
																"nativeSrc": "1123:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:10"
																},
																"nativeSrc": "1152:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:10"
															},
															"nativeSrc": "1152:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:10",
														"nodeType": "YulTypedName",
														"src": "1082:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:10",
														"nodeType": "YulTypedName",
														"src": "1090:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:10",
														"nodeType": "YulTypedName",
														"src": "1098:5:10",
														"type": ""
													}
												],
												"src": "1052:139:10"
											},
											{
												"body": {
													"nativeSrc": "1280:391:10",
													"nodeType": "YulBlock",
													"src": "1280:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:10",
																"nodeType": "YulBlock",
																"src": "1326:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:10"
																			},
																			"nativeSrc": "1328:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:10"
																		},
																		"nativeSrc": "1328:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:10"
																		},
																		"nativeSrc": "1297:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:10"
																},
																"nativeSrc": "1293:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:10"
															},
															"nativeSrc": "1290:119:10",
															"nodeType": "YulIf",
															"src": "1290:119:10"
														},
														{
															"nativeSrc": "1419:117:10",
															"nodeType": "YulBlock",
															"src": "1419:117:10",
															"statements": [
																{
																	"nativeSrc": "1434:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:10"
																				},
																				"nativeSrc": "1494:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:10"
																		},
																		"nativeSrc": "1473:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:10",
															"nodeType": "YulBlock",
															"src": "1546:118:10",
															"statements": [
																{
																	"nativeSrc": "1561:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:10"
																				},
																				"nativeSrc": "1622:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:10"
																		},
																		"nativeSrc": "1601:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:10",
														"nodeType": "YulTypedName",
														"src": "1242:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:10",
														"nodeType": "YulTypedName",
														"src": "1253:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:10",
														"nodeType": "YulTypedName",
														"src": "1265:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:10",
														"nodeType": "YulTypedName",
														"src": "1273:6:10",
														"type": ""
													}
												],
												"src": "1197:474:10"
											},
											{
												"body": {
													"nativeSrc": "1760:391:10",
													"nodeType": "YulBlock",
													"src": "1760:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1806:83:10",
																"nodeType": "YulBlock",
																"src": "1806:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1808:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1808:77:10"
																			},
																			"nativeSrc": "1808:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1808:79:10"
																		},
																		"nativeSrc": "1808:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1808:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1781:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1781:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1790:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1790:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1777:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1777:3:10"
																		},
																		"nativeSrc": "1777:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1777:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1802:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1802:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1773:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1773:3:10"
																},
																"nativeSrc": "1773:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1773:32:10"
															},
															"nativeSrc": "1770:119:10",
															"nodeType": "YulIf",
															"src": "1770:119:10"
														},
														{
															"nativeSrc": "1899:117:10",
															"nodeType": "YulBlock",
															"src": "1899:117:10",
															"statements": [
																{
																	"nativeSrc": "1914:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1914:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1928:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1918:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1918:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1943:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1943:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1978:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1978:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1989:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1989:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1974:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1974:3:10"
																				},
																				"nativeSrc": "1974:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1974:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1998:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1953:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1953:20:10"
																		},
																		"nativeSrc": "1953:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1953:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1943:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1943:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2026:118:10",
															"nodeType": "YulBlock",
															"src": "2026:118:10",
															"statements": [
																{
																	"nativeSrc": "2041:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2041:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2055:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2055:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2045:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2045:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2071:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2071:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2106:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2106:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2117:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2117:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2102:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2102:3:10"
																				},
																				"nativeSrc": "2102:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2102:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2126:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2126:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2081:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2081:20:10"
																		},
																		"nativeSrc": "2081:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2081:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2071:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2071:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "1677:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1722:9:10",
														"nodeType": "YulTypedName",
														"src": "1722:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1733:7:10",
														"nodeType": "YulTypedName",
														"src": "1733:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1745:6:10",
														"nodeType": "YulTypedName",
														"src": "1745:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1753:6:10",
														"nodeType": "YulTypedName",
														"src": "1753:6:10",
														"type": ""
													}
												],
												"src": "1677:474:10"
											},
											{
												"body": {
													"nativeSrc": "2222:53:10",
													"nodeType": "YulBlock",
													"src": "2222:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2239:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2239:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2262:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2262:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2244:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2244:17:10"
																		},
																		"nativeSrc": "2244:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2244:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2232:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2232:6:10"
																},
																"nativeSrc": "2232:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2232:37:10"
															},
															"nativeSrc": "2232:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2232:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2157:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:10",
														"nodeType": "YulTypedName",
														"src": "2210:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2217:3:10",
														"nodeType": "YulTypedName",
														"src": "2217:3:10",
														"type": ""
													}
												],
												"src": "2157:118:10"
											},
											{
												"body": {
													"nativeSrc": "2379:124:10",
													"nodeType": "YulBlock",
													"src": "2379:124:10",
													"statements": [
														{
															"nativeSrc": "2389:26:10",
															"nodeType": "YulAssignment",
															"src": "2389:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2401:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2401:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2412:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2412:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2397:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2397:3:10"
																},
																"nativeSrc": "2397:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2397:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2389:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2389:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2469:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2482:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2482:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2493:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2493:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2478:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:10"
																		},
																		"nativeSrc": "2478:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2478:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2425:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2425:43:10"
																},
																"nativeSrc": "2425:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2425:71:10"
															},
															"nativeSrc": "2425:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2425:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2281:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2351:9:10",
														"nodeType": "YulTypedName",
														"src": "2351:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2363:6:10",
														"nodeType": "YulTypedName",
														"src": "2363:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2374:4:10",
														"nodeType": "YulTypedName",
														"src": "2374:4:10",
														"type": ""
													}
												],
												"src": "2281:222:10"
											},
											{
												"body": {
													"nativeSrc": "2575:263:10",
													"nodeType": "YulBlock",
													"src": "2575:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2621:83:10",
																"nodeType": "YulBlock",
																"src": "2621:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2623:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2623:77:10"
																			},
																			"nativeSrc": "2623:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2623:79:10"
																		},
																		"nativeSrc": "2623:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2623:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2596:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2596:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2605:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2605:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2592:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:10"
																		},
																		"nativeSrc": "2592:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2592:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2617:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2617:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2588:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2588:3:10"
																},
																"nativeSrc": "2588:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2588:32:10"
															},
															"nativeSrc": "2585:119:10",
															"nodeType": "YulIf",
															"src": "2585:119:10"
														},
														{
															"nativeSrc": "2714:117:10",
															"nodeType": "YulBlock",
															"src": "2714:117:10",
															"statements": [
																{
																	"nativeSrc": "2729:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2729:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2743:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2743:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2733:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2733:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2758:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2758:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2793:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2793:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2804:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2804:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2789:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2789:3:10"
																				},
																				"nativeSrc": "2789:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2789:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2813:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2813:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2768:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2768:20:10"
																		},
																		"nativeSrc": "2768:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2768:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2758:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2758:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2509:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2545:9:10",
														"nodeType": "YulTypedName",
														"src": "2545:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2556:7:10",
														"nodeType": "YulTypedName",
														"src": "2556:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2568:6:10",
														"nodeType": "YulTypedName",
														"src": "2568:6:10",
														"type": ""
													}
												],
												"src": "2509:329:10"
											},
											{
												"body": {
													"nativeSrc": "2909:53:10",
													"nodeType": "YulBlock",
													"src": "2909:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2926:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2926:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2949:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2949:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2931:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2931:17:10"
																		},
																		"nativeSrc": "2931:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2931:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2919:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2919:6:10"
																},
																"nativeSrc": "2919:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2919:37:10"
															},
															"nativeSrc": "2919:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2919:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2844:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2897:5:10",
														"nodeType": "YulTypedName",
														"src": "2897:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2904:3:10",
														"nodeType": "YulTypedName",
														"src": "2904:3:10",
														"type": ""
													}
												],
												"src": "2844:118:10"
											},
											{
												"body": {
													"nativeSrc": "3066:124:10",
													"nodeType": "YulBlock",
													"src": "3066:124:10",
													"statements": [
														{
															"nativeSrc": "3076:26:10",
															"nodeType": "YulAssignment",
															"src": "3076:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3088:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3088:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3099:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3099:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3084:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3084:3:10"
																},
																"nativeSrc": "3084:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3084:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3076:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3076:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3156:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3156:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3169:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3169:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3180:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3180:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3165:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:10"
																		},
																		"nativeSrc": "3165:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3165:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3112:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3112:43:10"
																},
																"nativeSrc": "3112:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3112:71:10"
															},
															"nativeSrc": "3112:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3112:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2968:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3038:9:10",
														"nodeType": "YulTypedName",
														"src": "3038:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3050:6:10",
														"nodeType": "YulTypedName",
														"src": "3050:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3061:4:10",
														"nodeType": "YulTypedName",
														"src": "3061:4:10",
														"type": ""
													}
												],
												"src": "2968:222:10"
											},
											{
												"body": {
													"nativeSrc": "3238:48:10",
													"nodeType": "YulBlock",
													"src": "3238:48:10",
													"statements": [
														{
															"nativeSrc": "3248:32:10",
															"nodeType": "YulAssignment",
															"src": "3248:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3273:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3266:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3266:6:10"
																		},
																		"nativeSrc": "3266:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3266:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3259:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:10"
																},
																"nativeSrc": "3259:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3259:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3248:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3248:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3196:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3220:5:10",
														"nodeType": "YulTypedName",
														"src": "3220:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3230:7:10",
														"nodeType": "YulTypedName",
														"src": "3230:7:10",
														"type": ""
													}
												],
												"src": "3196:90:10"
											},
											{
												"body": {
													"nativeSrc": "3351:50:10",
													"nodeType": "YulBlock",
													"src": "3351:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3368:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3368:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3388:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3388:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3373:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3373:14:10"
																		},
																		"nativeSrc": "3373:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3373:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3361:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3361:6:10"
																},
																"nativeSrc": "3361:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3361:34:10"
															},
															"nativeSrc": "3361:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3361:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3292:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3339:5:10",
														"nodeType": "YulTypedName",
														"src": "3339:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3346:3:10",
														"nodeType": "YulTypedName",
														"src": "3346:3:10",
														"type": ""
													}
												],
												"src": "3292:109:10"
											},
											{
												"body": {
													"nativeSrc": "3499:118:10",
													"nodeType": "YulBlock",
													"src": "3499:118:10",
													"statements": [
														{
															"nativeSrc": "3509:26:10",
															"nodeType": "YulAssignment",
															"src": "3509:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3521:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3521:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3532:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3532:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3517:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3517:3:10"
																},
																"nativeSrc": "3517:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3517:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3509:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3509:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3583:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3583:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3596:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3596:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3607:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3607:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3592:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3592:3:10"
																		},
																		"nativeSrc": "3592:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3592:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3545:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3545:37:10"
																},
																"nativeSrc": "3545:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3545:65:10"
															},
															"nativeSrc": "3545:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3545:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3407:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3471:9:10",
														"nodeType": "YulTypedName",
														"src": "3471:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3483:6:10",
														"nodeType": "YulTypedName",
														"src": "3483:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3494:4:10",
														"nodeType": "YulTypedName",
														"src": "3494:4:10",
														"type": ""
													}
												],
												"src": "3407:210:10"
											},
											{
												"body": {
													"nativeSrc": "3719:73:10",
													"nodeType": "YulBlock",
													"src": "3719:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3736:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3736:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3741:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3741:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3729:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:10"
																},
																"nativeSrc": "3729:19:10",
																"nodeType": "YulFunctionCall",
																"src": "3729:19:10"
															},
															"nativeSrc": "3729:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "3729:19:10"
														},
														{
															"nativeSrc": "3757:29:10",
															"nodeType": "YulAssignment",
															"src": "3757:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3776:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3776:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3781:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3781:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3772:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3772:3:10"
																},
																"nativeSrc": "3772:14:10",
																"nodeType": "YulFunctionCall",
																"src": "3772:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3757:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "3757:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3623:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3691:3:10",
														"nodeType": "YulTypedName",
														"src": "3691:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3696:6:10",
														"nodeType": "YulTypedName",
														"src": "3696:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3707:11:10",
														"nodeType": "YulTypedName",
														"src": "3707:11:10",
														"type": ""
													}
												],
												"src": "3623:169:10"
											},
											{
												"body": {
													"nativeSrc": "3904:61:10",
													"nodeType": "YulBlock",
													"src": "3904:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3926:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3926:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3934:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3922:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3922:3:10"
																		},
																		"nativeSrc": "3922:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3922:14:10"
																	},
																	{
																		"hexValue": "546f6b656e206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "3938:19:10",
																		"nodeType": "YulLiteral",
																		"src": "3938:19:10",
																		"type": "",
																		"value": "Token not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3915:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3915:6:10"
																},
																"nativeSrc": "3915:43:10",
																"nodeType": "YulFunctionCall",
																"src": "3915:43:10"
															},
															"nativeSrc": "3915:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "3915:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b",
												"nativeSrc": "3798:167:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3896:6:10",
														"nodeType": "YulTypedName",
														"src": "3896:6:10",
														"type": ""
													}
												],
												"src": "3798:167:10"
											},
											{
												"body": {
													"nativeSrc": "4117:220:10",
													"nodeType": "YulBlock",
													"src": "4117:220:10",
													"statements": [
														{
															"nativeSrc": "4127:74:10",
															"nodeType": "YulAssignment",
															"src": "4127:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4193:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4193:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4198:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4198:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4134:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "4134:58:10"
																},
																"nativeSrc": "4134:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4134:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4127:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4127:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4299:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4299:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b",
																	"nativeSrc": "4210:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "4210:88:10"
																},
																"nativeSrc": "4210:93:10",
																"nodeType": "YulFunctionCall",
																"src": "4210:93:10"
															},
															"nativeSrc": "4210:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "4210:93:10"
														},
														{
															"nativeSrc": "4312:19:10",
															"nodeType": "YulAssignment",
															"src": "4312:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4323:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4323:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4328:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4328:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4319:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4319:3:10"
																},
																"nativeSrc": "4319:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4319:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4312:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4312:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3971:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4105:3:10",
														"nodeType": "YulTypedName",
														"src": "4105:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4113:3:10",
														"nodeType": "YulTypedName",
														"src": "4113:3:10",
														"type": ""
													}
												],
												"src": "3971:366:10"
											},
											{
												"body": {
													"nativeSrc": "4514:248:10",
													"nodeType": "YulBlock",
													"src": "4514:248:10",
													"statements": [
														{
															"nativeSrc": "4524:26:10",
															"nodeType": "YulAssignment",
															"src": "4524:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4536:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4536:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4547:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4547:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4532:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4532:3:10"
																},
																"nativeSrc": "4532:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4532:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4524:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4524:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4571:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4571:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4582:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4582:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4567:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4567:3:10"
																		},
																		"nativeSrc": "4567:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4567:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4590:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4590:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4596:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4596:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4586:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4586:3:10"
																		},
																		"nativeSrc": "4586:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4586:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4560:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4560:6:10"
																},
																"nativeSrc": "4560:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4560:47:10"
															},
															"nativeSrc": "4560:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4560:47:10"
														},
														{
															"nativeSrc": "4616:139:10",
															"nodeType": "YulAssignment",
															"src": "4616:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4750:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4750:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4624:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "4624:124:10"
																},
																"nativeSrc": "4624:131:10",
																"nodeType": "YulFunctionCall",
																"src": "4624:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4616:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4616:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4343:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4494:9:10",
														"nodeType": "YulTypedName",
														"src": "4494:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4509:4:10",
														"nodeType": "YulTypedName",
														"src": "4509:4:10",
														"type": ""
													}
												],
												"src": "4343:419:10"
											},
											{
												"body": {
													"nativeSrc": "4874:62:10",
													"nodeType": "YulBlock",
													"src": "4874:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4896:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4896:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4904:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4904:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4892:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4892:3:10"
																		},
																		"nativeSrc": "4892:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4892:14:10"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "4908:20:10",
																		"nodeType": "YulLiteral",
																		"src": "4908:20:10",
																		"type": "",
																		"value": "Amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4885:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4885:6:10"
																},
																"nativeSrc": "4885:44:10",
																"nodeType": "YulFunctionCall",
																"src": "4885:44:10"
															},
															"nativeSrc": "4885:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "4885:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
												"nativeSrc": "4768:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4866:6:10",
														"nodeType": "YulTypedName",
														"src": "4866:6:10",
														"type": ""
													}
												],
												"src": "4768:168:10"
											},
											{
												"body": {
													"nativeSrc": "5088:220:10",
													"nodeType": "YulBlock",
													"src": "5088:220:10",
													"statements": [
														{
															"nativeSrc": "5098:74:10",
															"nodeType": "YulAssignment",
															"src": "5098:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5164:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5164:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5169:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5169:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5105:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5105:58:10"
																},
																"nativeSrc": "5105:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5105:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5098:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5098:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5270:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																	"nativeSrc": "5181:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5181:88:10"
																},
																"nativeSrc": "5181:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5181:93:10"
															},
															"nativeSrc": "5181:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5181:93:10"
														},
														{
															"nativeSrc": "5283:19:10",
															"nodeType": "YulAssignment",
															"src": "5283:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5294:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5294:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5299:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5299:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5290:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5290:3:10"
																},
																"nativeSrc": "5290:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5290:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5283:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5283:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4942:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5076:3:10",
														"nodeType": "YulTypedName",
														"src": "5076:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5084:3:10",
														"nodeType": "YulTypedName",
														"src": "5084:3:10",
														"type": ""
													}
												],
												"src": "4942:366:10"
											},
											{
												"body": {
													"nativeSrc": "5485:248:10",
													"nodeType": "YulBlock",
													"src": "5485:248:10",
													"statements": [
														{
															"nativeSrc": "5495:26:10",
															"nodeType": "YulAssignment",
															"src": "5495:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5507:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5507:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5518:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5518:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5503:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5503:3:10"
																},
																"nativeSrc": "5503:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5503:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5495:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5495:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5542:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5542:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5553:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5553:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5538:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5538:3:10"
																		},
																		"nativeSrc": "5538:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5538:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5561:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5561:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5567:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5567:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5557:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:10"
																		},
																		"nativeSrc": "5557:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5557:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5531:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5531:6:10"
																},
																"nativeSrc": "5531:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5531:47:10"
															},
															"nativeSrc": "5531:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5531:47:10"
														},
														{
															"nativeSrc": "5587:139:10",
															"nodeType": "YulAssignment",
															"src": "5587:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5721:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5721:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5595:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "5595:124:10"
																},
																"nativeSrc": "5595:131:10",
																"nodeType": "YulFunctionCall",
																"src": "5595:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5587:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5587:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5314:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5465:9:10",
														"nodeType": "YulTypedName",
														"src": "5465:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5480:4:10",
														"nodeType": "YulTypedName",
														"src": "5480:4:10",
														"type": ""
													}
												],
												"src": "5314:419:10"
											},
											{
												"body": {
													"nativeSrc": "5845:67:10",
													"nodeType": "YulBlock",
													"src": "5845:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5867:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5867:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5875:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5875:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5863:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5863:3:10"
																		},
																		"nativeSrc": "5863:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5863:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420636f6c6c61746572616c",
																		"kind": "string",
																		"nativeSrc": "5879:25:10",
																		"nodeType": "YulLiteral",
																		"src": "5879:25:10",
																		"type": "",
																		"value": "Insufficient collateral"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5856:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5856:6:10"
																},
																"nativeSrc": "5856:49:10",
																"nodeType": "YulFunctionCall",
																"src": "5856:49:10"
															},
															"nativeSrc": "5856:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "5856:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
												"nativeSrc": "5739:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5837:6:10",
														"nodeType": "YulTypedName",
														"src": "5837:6:10",
														"type": ""
													}
												],
												"src": "5739:173:10"
											},
											{
												"body": {
													"nativeSrc": "6064:220:10",
													"nodeType": "YulBlock",
													"src": "6064:220:10",
													"statements": [
														{
															"nativeSrc": "6074:74:10",
															"nodeType": "YulAssignment",
															"src": "6074:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6140:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6140:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6145:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6145:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6081:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "6081:58:10"
																},
																"nativeSrc": "6081:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6081:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6074:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6074:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6246:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6246:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
																	"nativeSrc": "6157:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "6157:88:10"
																},
																"nativeSrc": "6157:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6157:93:10"
															},
															"nativeSrc": "6157:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "6157:93:10"
														},
														{
															"nativeSrc": "6259:19:10",
															"nodeType": "YulAssignment",
															"src": "6259:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6270:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6270:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6275:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6275:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6266:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6266:3:10"
																},
																"nativeSrc": "6266:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6266:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6259:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6259:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5918:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6052:3:10",
														"nodeType": "YulTypedName",
														"src": "6052:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6060:3:10",
														"nodeType": "YulTypedName",
														"src": "6060:3:10",
														"type": ""
													}
												],
												"src": "5918:366:10"
											},
											{
												"body": {
													"nativeSrc": "6461:248:10",
													"nodeType": "YulBlock",
													"src": "6461:248:10",
													"statements": [
														{
															"nativeSrc": "6471:26:10",
															"nodeType": "YulAssignment",
															"src": "6471:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6483:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6483:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6494:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6494:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6479:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6479:3:10"
																},
																"nativeSrc": "6479:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6479:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6471:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6471:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6518:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6518:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6529:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6529:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6514:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6514:3:10"
																		},
																		"nativeSrc": "6514:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6514:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6537:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6537:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6543:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6543:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6533:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6533:3:10"
																		},
																		"nativeSrc": "6533:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6533:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6507:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6507:6:10"
																},
																"nativeSrc": "6507:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6507:47:10"
															},
															"nativeSrc": "6507:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6507:47:10"
														},
														{
															"nativeSrc": "6563:139:10",
															"nodeType": "YulAssignment",
															"src": "6563:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6697:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6697:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6571:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6571:124:10"
																},
																"nativeSrc": "6571:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6571:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6563:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6563:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6290:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6441:9:10",
														"nodeType": "YulTypedName",
														"src": "6441:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6456:4:10",
														"nodeType": "YulTypedName",
														"src": "6456:4:10",
														"type": ""
													}
												],
												"src": "6290:419:10"
											},
											{
												"body": {
													"nativeSrc": "6743:152:10",
													"nodeType": "YulBlock",
													"src": "6743:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6760:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6760:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6763:77:10",
																		"nodeType": "YulLiteral",
																		"src": "6763:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6753:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6753:6:10"
																},
																"nativeSrc": "6753:88:10",
																"nodeType": "YulFunctionCall",
																"src": "6753:88:10"
															},
															"nativeSrc": "6753:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "6753:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6857:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6857:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6860:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6860:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6850:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6850:6:10"
																},
																"nativeSrc": "6850:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6850:15:10"
															},
															"nativeSrc": "6850:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6850:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6881:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6881:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6884:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6884:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6874:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6874:6:10"
																},
																"nativeSrc": "6874:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6874:15:10"
															},
															"nativeSrc": "6874:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6874:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6715:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6715:180:10"
											},
											{
												"body": {
													"nativeSrc": "6946:149:10",
													"nodeType": "YulBlock",
													"src": "6946:149:10",
													"statements": [
														{
															"nativeSrc": "6956:25:10",
															"nodeType": "YulAssignment",
															"src": "6956:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6979:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6979:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6961:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6961:17:10"
																},
																"nativeSrc": "6961:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6961:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6956:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6956:1:10"
																}
															]
														},
														{
															"nativeSrc": "6990:25:10",
															"nodeType": "YulAssignment",
															"src": "6990:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7013:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7013:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6995:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6995:17:10"
																},
																"nativeSrc": "6995:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6995:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6990:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6990:1:10"
																}
															]
														},
														{
															"nativeSrc": "7024:17:10",
															"nodeType": "YulAssignment",
															"src": "7024:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7036:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7036:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7039:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7039:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7032:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7032:3:10"
																},
																"nativeSrc": "7032:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7032:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7024:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7024:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7066:22:10",
																"nodeType": "YulBlock",
																"src": "7066:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7068:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7068:16:10"
																			},
																			"nativeSrc": "7068:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7068:18:10"
																		},
																		"nativeSrc": "7068:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7068:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7057:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7057:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7063:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7063:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7054:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7054:2:10"
																},
																"nativeSrc": "7054:11:10",
																"nodeType": "YulFunctionCall",
																"src": "7054:11:10"
															},
															"nativeSrc": "7051:37:10",
															"nodeType": "YulIf",
															"src": "7051:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6901:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6932:1:10",
														"nodeType": "YulTypedName",
														"src": "6932:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6935:1:10",
														"nodeType": "YulTypedName",
														"src": "6935:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6941:4:10",
														"nodeType": "YulTypedName",
														"src": "6941:4:10",
														"type": ""
													}
												],
												"src": "6901:194:10"
											},
											{
												"body": {
													"nativeSrc": "7207:65:10",
													"nodeType": "YulBlock",
													"src": "7207:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7229:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7229:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7237:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7237:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7225:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7225:3:10"
																		},
																		"nativeSrc": "7225:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7225:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "7241:23:10",
																		"nodeType": "YulLiteral",
																		"src": "7241:23:10",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7218:6:10"
																},
																"nativeSrc": "7218:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7218:47:10"
															},
															"nativeSrc": "7218:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7218:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nativeSrc": "7101:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7199:6:10",
														"nodeType": "YulTypedName",
														"src": "7199:6:10",
														"type": ""
													}
												],
												"src": "7101:171:10"
											},
											{
												"body": {
													"nativeSrc": "7424:220:10",
													"nodeType": "YulBlock",
													"src": "7424:220:10",
													"statements": [
														{
															"nativeSrc": "7434:74:10",
															"nodeType": "YulAssignment",
															"src": "7434:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7500:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7500:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7505:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7505:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7441:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7441:58:10"
																},
																"nativeSrc": "7441:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7441:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7434:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7434:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7606:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7606:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nativeSrc": "7517:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7517:88:10"
																},
																"nativeSrc": "7517:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7517:93:10"
															},
															"nativeSrc": "7517:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7517:93:10"
														},
														{
															"nativeSrc": "7619:19:10",
															"nodeType": "YulAssignment",
															"src": "7619:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7630:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7630:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7635:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7635:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7626:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7626:3:10"
																},
																"nativeSrc": "7626:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7626:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7619:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7619:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7278:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7412:3:10",
														"nodeType": "YulTypedName",
														"src": "7412:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7420:3:10",
														"nodeType": "YulTypedName",
														"src": "7420:3:10",
														"type": ""
													}
												],
												"src": "7278:366:10"
											},
											{
												"body": {
													"nativeSrc": "7821:248:10",
													"nodeType": "YulBlock",
													"src": "7821:248:10",
													"statements": [
														{
															"nativeSrc": "7831:26:10",
															"nodeType": "YulAssignment",
															"src": "7831:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7843:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7843:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7854:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7854:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7839:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7839:3:10"
																},
																"nativeSrc": "7839:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7839:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7831:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7831:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7878:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7878:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7889:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7889:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7874:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7874:3:10"
																		},
																		"nativeSrc": "7874:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7874:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7897:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7897:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7903:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7903:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7893:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7893:3:10"
																		},
																		"nativeSrc": "7893:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7893:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7867:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7867:6:10"
																},
																"nativeSrc": "7867:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7867:47:10"
															},
															"nativeSrc": "7867:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7867:47:10"
														},
														{
															"nativeSrc": "7923:139:10",
															"nodeType": "YulAssignment",
															"src": "7923:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8057:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8057:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7931:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7931:124:10"
																},
																"nativeSrc": "7931:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7931:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7923:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7923:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7650:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7801:9:10",
														"nodeType": "YulTypedName",
														"src": "7801:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7816:4:10",
														"nodeType": "YulTypedName",
														"src": "7816:4:10",
														"type": ""
													}
												],
												"src": "7650:419:10"
											},
											{
												"body": {
													"nativeSrc": "8119:147:10",
													"nodeType": "YulBlock",
													"src": "8119:147:10",
													"statements": [
														{
															"nativeSrc": "8129:25:10",
															"nodeType": "YulAssignment",
															"src": "8129:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8152:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8152:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8134:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8134:17:10"
																},
																"nativeSrc": "8134:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8134:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8129:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8129:1:10"
																}
															]
														},
														{
															"nativeSrc": "8163:25:10",
															"nodeType": "YulAssignment",
															"src": "8163:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8186:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8186:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8168:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8168:17:10"
																},
																"nativeSrc": "8168:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8168:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8163:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8163:1:10"
																}
															]
														},
														{
															"nativeSrc": "8197:16:10",
															"nodeType": "YulAssignment",
															"src": "8197:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8208:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8208:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8211:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8211:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8204:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8204:3:10"
																},
																"nativeSrc": "8204:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8204:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8197:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8197:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8237:22:10",
																"nodeType": "YulBlock",
																"src": "8237:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8239:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8239:16:10"
																			},
																			"nativeSrc": "8239:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8239:18:10"
																		},
																		"nativeSrc": "8239:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8239:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8229:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8229:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8232:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8232:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8226:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8226:2:10"
																},
																"nativeSrc": "8226:10:10",
																"nodeType": "YulFunctionCall",
																"src": "8226:10:10"
															},
															"nativeSrc": "8223:36:10",
															"nodeType": "YulIf",
															"src": "8223:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8075:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8106:1:10",
														"nodeType": "YulTypedName",
														"src": "8106:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8109:1:10",
														"nodeType": "YulTypedName",
														"src": "8109:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8115:3:10",
														"nodeType": "YulTypedName",
														"src": "8115:3:10",
														"type": ""
													}
												],
												"src": "8075:191:10"
											},
											{
												"body": {
													"nativeSrc": "8378:75:10",
													"nodeType": "YulBlock",
													"src": "8378:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8400:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8400:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8408:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8408:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8396:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8396:3:10"
																		},
																		"nativeSrc": "8396:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8396:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "8412:33:10",
																		"nodeType": "YulLiteral",
																		"src": "8412:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8389:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8389:6:10"
																},
																"nativeSrc": "8389:57:10",
																"nodeType": "YulFunctionCall",
																"src": "8389:57:10"
															},
															"nativeSrc": "8389:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "8389:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "8272:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8370:6:10",
														"nodeType": "YulTypedName",
														"src": "8370:6:10",
														"type": ""
													}
												],
												"src": "8272:181:10"
											},
											{
												"body": {
													"nativeSrc": "8605:220:10",
													"nodeType": "YulBlock",
													"src": "8605:220:10",
													"statements": [
														{
															"nativeSrc": "8615:74:10",
															"nodeType": "YulAssignment",
															"src": "8615:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8681:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8681:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8686:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8686:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8622:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8622:58:10"
																},
																"nativeSrc": "8622:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8622:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8615:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8615:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8787:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8787:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "8698:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8698:88:10"
																},
																"nativeSrc": "8698:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8698:93:10"
															},
															"nativeSrc": "8698:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8698:93:10"
														},
														{
															"nativeSrc": "8800:19:10",
															"nodeType": "YulAssignment",
															"src": "8800:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8811:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8811:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8816:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8816:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8807:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8807:3:10"
																},
																"nativeSrc": "8807:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8807:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8800:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8800:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8459:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8593:3:10",
														"nodeType": "YulTypedName",
														"src": "8593:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8601:3:10",
														"nodeType": "YulTypedName",
														"src": "8601:3:10",
														"type": ""
													}
												],
												"src": "8459:366:10"
											},
											{
												"body": {
													"nativeSrc": "9002:248:10",
													"nodeType": "YulBlock",
													"src": "9002:248:10",
													"statements": [
														{
															"nativeSrc": "9012:26:10",
															"nodeType": "YulAssignment",
															"src": "9012:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9024:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9024:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9035:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9035:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9020:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9020:3:10"
																},
																"nativeSrc": "9020:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9020:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9012:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9012:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9059:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9059:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9070:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9070:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9055:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9055:3:10"
																		},
																		"nativeSrc": "9055:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9055:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9078:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9078:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9084:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9084:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9074:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9074:3:10"
																		},
																		"nativeSrc": "9074:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9074:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9048:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9048:6:10"
																},
																"nativeSrc": "9048:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9048:47:10"
															},
															"nativeSrc": "9048:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9048:47:10"
														},
														{
															"nativeSrc": "9104:139:10",
															"nodeType": "YulAssignment",
															"src": "9104:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9238:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9238:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9112:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9112:124:10"
																},
																"nativeSrc": "9112:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9112:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9104:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9104:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8831:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8982:9:10",
														"nodeType": "YulTypedName",
														"src": "8982:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8997:4:10",
														"nodeType": "YulTypedName",
														"src": "8997:4:10",
														"type": ""
													}
												],
												"src": "8831:419:10"
											},
											{
												"body": {
													"nativeSrc": "9382:206:10",
													"nodeType": "YulBlock",
													"src": "9382:206:10",
													"statements": [
														{
															"nativeSrc": "9392:26:10",
															"nodeType": "YulAssignment",
															"src": "9392:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9404:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9404:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9415:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9415:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9400:3:10"
																},
																"nativeSrc": "9400:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9400:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9392:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9392:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9472:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9472:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9485:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9485:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9496:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9496:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9481:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9481:3:10"
																		},
																		"nativeSrc": "9481:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9481:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9428:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9428:43:10"
																},
																"nativeSrc": "9428:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9428:71:10"
															},
															"nativeSrc": "9428:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9428:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9553:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9553:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9566:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9566:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9577:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9577:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9562:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9562:3:10"
																		},
																		"nativeSrc": "9562:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9562:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9509:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9509:43:10"
																},
																"nativeSrc": "9509:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9509:72:10"
															},
															"nativeSrc": "9509:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9509:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9256:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9346:9:10",
														"nodeType": "YulTypedName",
														"src": "9346:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9358:6:10",
														"nodeType": "YulTypedName",
														"src": "9358:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9366:6:10",
														"nodeType": "YulTypedName",
														"src": "9366:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9377:4:10",
														"nodeType": "YulTypedName",
														"src": "9377:4:10",
														"type": ""
													}
												],
												"src": "9256:332:10"
											},
											{
												"body": {
													"nativeSrc": "9748:288:10",
													"nodeType": "YulBlock",
													"src": "9748:288:10",
													"statements": [
														{
															"nativeSrc": "9758:26:10",
															"nodeType": "YulAssignment",
															"src": "9758:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9770:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9770:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9781:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9781:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9766:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9766:3:10"
																},
																"nativeSrc": "9766:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9766:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9758:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9758:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9838:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9838:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9851:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9851:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9862:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9862:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9847:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9847:3:10"
																		},
																		"nativeSrc": "9847:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9847:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9794:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9794:43:10"
																},
																"nativeSrc": "9794:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9794:71:10"
															},
															"nativeSrc": "9794:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9794:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9919:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9919:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9932:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9932:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9943:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9943:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9928:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9928:3:10"
																		},
																		"nativeSrc": "9928:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9928:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9875:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9875:43:10"
																},
																"nativeSrc": "9875:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9875:72:10"
															},
															"nativeSrc": "9875:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9875:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10001:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10001:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10014:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10014:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10025:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10025:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10010:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10010:3:10"
																		},
																		"nativeSrc": "10010:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10010:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9957:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9957:43:10"
																},
																"nativeSrc": "9957:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9957:72:10"
															},
															"nativeSrc": "9957:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9957:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9594:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9704:9:10",
														"nodeType": "YulTypedName",
														"src": "9704:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9716:6:10",
														"nodeType": "YulTypedName",
														"src": "9716:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9724:6:10",
														"nodeType": "YulTypedName",
														"src": "9724:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9732:6:10",
														"nodeType": "YulTypedName",
														"src": "9732:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9743:4:10",
														"nodeType": "YulTypedName",
														"src": "9743:4:10",
														"type": ""
													}
												],
												"src": "9594:442:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient collateral\")\n\n    }\n\n    function abi_encode_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061009c575f3560e01c806390469a9d1161006457806390469a9d14610130578063a5d5db0c1461014c578063b7d5820b14610168578063e744092e14610198578063f2fde38b146101c85761009c565b8063350c35e9146100a057806339ecf9ba146100bc5780634178617f146100ec578063715018a6146101085780638da5cb5b14610112575b5f5ffd5b6100ba60048036038101906100b59190610e2c565b6101e4565b005b6100d660048036038101906100d19190610e6a565b61049e565b6040516100e39190610eb7565b60405180910390f35b61010660048036038101906101019190610ed0565b6104be565b005b6101106105cf565b005b61011a6105e2565b6040516101279190610f0a565b60405180910390f35b61014a60048036038101906101459190610ed0565b610609565b005b61016660048036038101906101619190610e2c565b610734565b005b610182600480360381019061017d9190610e6a565b610935565b60405161018f9190610eb7565b60405180910390f35b6101b260048036038101906101ad9190610ed0565b6109b7565b6040516101bf9190610f3d565b60405180910390f35b6101e260048036038101906101dd9190610ed0565b6109d4565b005b6101ec610a58565b8160025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026d90610fb0565b60405180910390fd5b5f82116102b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102af90611018565b60405180910390fd5b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036a90611080565b60405180910390fd5b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103fa91906110cb565b9250508190555061042c33838573ffffffffffffffffffffffffffffffffffffffff16610aa79092919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f45892a46e6cef329bb642da6d69846d324db43d19008edc141ed82382eda1bee846040516104899190610eb7565b60405180910390a35061049a610b26565b5050565b6003602052815f5260405f20602052805f5260405f205f91509150505481565b6104c6610b2f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052b90611148565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167ff849d00bc67e9e4bf072df9680646c59b8c5380160834c2e1d4896ce5ec81f7560405160405180910390a250565b6105d7610b2f565b6105e05f610bb6565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610611610b2f565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661069a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069190610fb0565b60405180910390fd5b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fbf996b4fd74f0c7159bb017b1db415b0d9a6f13129f46d0b93309d170b78df3160405160405180910390a250565b61073c610a58565b8160025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166107c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bd90610fb0565b60405180910390fd5b5f8211610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ff90611018565b60405180910390fd5b6108353330848673ffffffffffffffffffffffffffffffffffffffff16610c77909392919063ffffffff16565b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546108bc9190611166565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff1c0dd7e9b98bbff859029005ef89b127af049cd18df1a8d79f0b7e019911e56846040516109209190610eb7565b60405180910390a350610931610b26565b5050565b5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6002602052805f5260405f205f915054906101000a900460ff1681565b6109dc610b2f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a4c575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a439190610f0a565b60405180910390fd5b610a5581610bb6565b50565b600260015403610a9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a94906111e3565b60405180910390fd5b6002600181905550565b610b21838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610ada929190611201565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610cf9565b505050565b60018081905550565b610b37610d94565b73ffffffffffffffffffffffffffffffffffffffff16610b556105e2565b73ffffffffffffffffffffffffffffffffffffffff1614610bb457610b78610d94565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bab9190610f0a565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610cf3848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610cac93929190611228565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610cf9565b50505050565b5f5f60205f8451602086015f885af180610d18576040513d5f823e3d81fd5b3d92505f519150505f8214610d31576001811415610d4c565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610d8e57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610d859190610f0a565b60405180910390fd5b50505050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dc882610d9f565b9050919050565b610dd881610dbe565b8114610de2575f5ffd5b50565b5f81359050610df381610dcf565b92915050565b5f819050919050565b610e0b81610df9565b8114610e15575f5ffd5b50565b5f81359050610e2681610e02565b92915050565b5f5f60408385031215610e4257610e41610d9b565b5b5f610e4f85828601610de5565b9250506020610e6085828601610e18565b9150509250929050565b5f5f60408385031215610e8057610e7f610d9b565b5b5f610e8d85828601610de5565b9250506020610e9e85828601610de5565b9150509250929050565b610eb181610df9565b82525050565b5f602082019050610eca5f830184610ea8565b92915050565b5f60208284031215610ee557610ee4610d9b565b5b5f610ef284828501610de5565b91505092915050565b610f0481610dbe565b82525050565b5f602082019050610f1d5f830184610efb565b92915050565b5f8115159050919050565b610f3781610f23565b82525050565b5f602082019050610f505f830184610f2e565b92915050565b5f82825260208201905092915050565b7f546f6b656e206e6f7420616c6c6f7765640000000000000000000000000000005f82015250565b5f610f9a601183610f56565b9150610fa582610f66565b602082019050919050565b5f6020820190508181035f830152610fc781610f8e565b9050919050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f611002601283610f56565b915061100d82610fce565b602082019050919050565b5f6020820190508181035f83015261102f81610ff6565b9050919050565b7f496e73756666696369656e7420636f6c6c61746572616c0000000000000000005f82015250565b5f61106a601783610f56565b915061107582611036565b602082019050919050565b5f6020820190508181035f8301526110978161105e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6110d582610df9565b91506110e083610df9565b92508282039050818111156110f8576110f761109e565b5b92915050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f611132601583610f56565b915061113d826110fe565b602082019050919050565b5f6020820190508181035f83015261115f81611126565b9050919050565b5f61117082610df9565b915061117b83610df9565b92508282019050808211156111935761119261109e565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6111cd601f83610f56565b91506111d882611199565b602082019050919050565b5f6020820190508181035f8301526111fa816111c1565b9050919050565b5f6040820190506112145f830185610efb565b6112216020830184610ea8565b9392505050565b5f60608201905061123b5f830186610efb565b6112486020830185610efb565b6112556040830184610ea8565b94935050505056fea26469706673582212208695e8b56dc49ac3ecc7191e1e8a5778b586b2156847d75f465b6a63c4a4273464736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90469A9D GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x90469A9D EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0xA5D5DB0C EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xB7D5820B EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE744092E EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C8 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x350C35E9 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x39ECF9BA EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x4178617F EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x112 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH2 0x5CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x9D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0xA58 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x276 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26D SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x2B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x373 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36A SWAP1 PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x42C CALLER DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x45892A46E6CEF329BB642DA6D69846D324DB43D19008EDC141ED82382EDA1BEE DUP5 PUSH1 0x40 MLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x49A PUSH2 0xB26 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4C6 PUSH2 0xB2F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x534 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52B SWAP1 PUSH2 0x1148 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF849D00BC67E9E4BF072DF9680646C59B8C5380160834C2E1D4896CE5EC81F75 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x5D7 PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x5E0 PUSH0 PUSH2 0xBB6 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x611 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x691 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBF996B4FD74F0C7159BB017B1DB415B0D9A6F13129F46D0B93309D170B78DF31 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x73C PUSH2 0xA58 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BD SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x808 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x835 CALLER ADDRESS DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC77 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF1C0DD7E9B98BBFF859029005EF89B127AF049CD18DF1A8D79F0B7E019911E56 DUP5 PUSH1 0x40 MLOAD PUSH2 0x920 SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x931 PUSH2 0xB26 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x9DC PUSH2 0xB2F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA43 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA55 DUP2 PUSH2 0xBB6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA94 SWAP1 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB21 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xADA SWAP3 SWAP2 SWAP1 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xCF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB37 PUSH2 0xD94 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB55 PUSH2 0x5E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB4 JUMPI PUSH2 0xB78 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAB SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCF3 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xCAC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xCF9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xD18 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xD31 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xD4C JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xD8E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD85 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC8 DUP3 PUSH2 0xD9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD8 DUP2 PUSH2 0xDBE JUMP JUMPDEST DUP2 EQ PUSH2 0xDE2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDF3 DUP2 PUSH2 0xDCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE0B DUP2 PUSH2 0xDF9 JUMP JUMPDEST DUP2 EQ PUSH2 0xE15 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE26 DUP2 PUSH2 0xE02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE42 JUMPI PUSH2 0xE41 PUSH2 0xD9B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE4F DUP6 DUP3 DUP7 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE60 DUP6 DUP3 DUP7 ADD PUSH2 0xE18 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE80 JUMPI PUSH2 0xE7F PUSH2 0xD9B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE8D DUP6 DUP3 DUP7 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE9E DUP6 DUP3 DUP7 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB1 DUP2 PUSH2 0xDF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xECA PUSH0 DUP4 ADD DUP5 PUSH2 0xEA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE5 JUMPI PUSH2 0xEE4 PUSH2 0xD9B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEF2 DUP5 DUP3 DUP6 ADD PUSH2 0xDE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0xDBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF1D PUSH0 DUP4 ADD DUP5 PUSH2 0xEFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF37 DUP2 PUSH2 0xF23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF50 PUSH0 DUP4 ADD DUP5 PUSH2 0xF2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420616C6C6F776564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF9A PUSH1 0x11 DUP4 PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA5 DUP3 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFC7 DUP2 PUSH2 0xF8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1002 PUSH1 0x12 DUP4 PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP PUSH2 0x100D DUP3 PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x102F DUP2 PUSH2 0xFF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x106A PUSH1 0x17 DUP4 PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP PUSH2 0x1075 DUP3 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1097 DUP2 PUSH2 0x105E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10D5 DUP3 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x10E0 DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x10F8 JUMPI PUSH2 0x10F7 PUSH2 0x109E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1132 PUSH1 0x15 DUP4 PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP PUSH2 0x113D DUP3 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x115F DUP2 PUSH2 0x1126 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1170 DUP3 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x117B DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1193 JUMPI PUSH2 0x1192 PUSH2 0x109E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11CD PUSH1 0x1F DUP4 PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D8 DUP3 PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11FA DUP2 PUSH2 0x11C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1214 PUSH0 DUP4 ADD DUP6 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0x1221 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEA8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x123B PUSH0 DUP4 ADD DUP7 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0x1248 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0x1255 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEA8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 SWAP6 0xE8 0xB5 PUSH14 0xC49AC3ECC7191E1E8A5778B586B2 ISZERO PUSH9 0x47D75F465B6A63C4A4 0x27 CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "307:3506:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2864:519;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;601:73;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1451:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1794:208:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2219:439;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3637:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;469:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2864:519:9;2261:21:4;:19;:21::i;:::-;2986:5:9::1;1158:13;:20;1172:5;1158:20;;;;;;;;;;;;;;;;;;;;;;;;;1150:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;3024:1:::2;3015:6;:10;3007:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;3107:6;3066:18;:30;3085:10;3066:30;;;;;;;;;;;;;;;:37;3097:5;3066:37;;;;;;;;;;;;;;;;:47;;3058:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3192:6;3151:18;:30;3170:10;3151:30;;;;;;;;;;;;;;;:37;3182:5;3151:37;;;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;;;;;;;3269:46;3296:10;3308:6;3276:5;3269:26;;;;:46;;;;;:::i;:::-;3362:5;3330:46;;3350:10;3330:46;;;3369:6;3330:46;;;;;;:::i;:::-;;;;;;;;2292:1:4::1;2303:20:::0;:18;:20::i;:::-;2864:519:9;;:::o;601:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1451:205::-;1531:13:0;:11;:13::i;:::-;1545:1:9::1;1528:19;;:5;:19;;::::0;1520:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1606:4;1583:13;:20;1597:5;1583:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;1643:5;1625:24;;;;;;;;;;;;1451:205:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1794:208:9:-;1531:13:0;:11;:13::i;:::-;1874::9::1;:20;1888:5;1874:20;;;;;;;;;;;;;;;;;;;;;;;;;1866:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1949:5;1926:13;:20;1940:5;1926:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1989:5;1969:26;;;;;;;;;;;;1794:208:::0;:::o;2219:439::-;2261:21:4;:19;:21::i;:::-;2340:5:9::1;1158:13;:20;1172:5;1158:20;;;;;;;;;;;;;;;;;;;;;;;;;1150:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2378:1:::2;2369:6;:10;2361:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2468:65;2499:10;2519:4;2526:6;2475:5;2468:30;;;;:65;;;;;;:::i;:::-;2584:6;2543:18;:30;2562:10;2543:30;;;;;;;;;;;;;;;:37;2574:5;2543:37;;;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;;;;;;;2637:5;2605:46;;2625:10;2605:46;;;2644:6;2605:46;;;;;;:::i;:::-;;;;;;;;2292:1:4::1;2303:20:::0;:18;:20::i;:::-;2219:439:9;;:::o;3637:174::-;3743:7;3773:18;:24;3792:4;3773:24;;;;;;;;;;;;;;;:31;3798:5;3773:31;;;;;;;;;;;;;;;;3766:38;;3637:174;;;;:::o;469:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;7686:720::-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:::-;1745:6;1753;1802:2;1790:9;1781:7;1777:23;1773:32;1770:119;;;1808:79;;:::i;:::-;1770:119;1928:1;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1899:117;2055:2;2081:53;2126:7;2117:6;2106:9;2102:22;2081:53;:::i;:::-;2071:63;;2026:118;1677:474;;;;;:::o;2157:118::-;2244:24;2262:5;2244:24;:::i;:::-;2239:3;2232:37;2157:118;;:::o;2281:222::-;2374:4;2412:2;2401:9;2397:18;2389:26;;2425:71;2493:1;2482:9;2478:17;2469:6;2425:71;:::i;:::-;2281:222;;;;:::o;2509:329::-;2568:6;2617:2;2605:9;2596:7;2592:23;2588:32;2585:119;;;2623:79;;:::i;:::-;2585:119;2743:1;2768:53;2813:7;2804:6;2793:9;2789:22;2768:53;:::i;:::-;2758:63;;2714:117;2509:329;;;;:::o;2844:118::-;2931:24;2949:5;2931:24;:::i;:::-;2926:3;2919:37;2844:118;;:::o;2968:222::-;3061:4;3099:2;3088:9;3084:18;3076:26;;3112:71;3180:1;3169:9;3165:17;3156:6;3112:71;:::i;:::-;2968:222;;;;:::o;3196:90::-;3230:7;3273:5;3266:13;3259:21;3248:32;;3196:90;;;:::o;3292:109::-;3373:21;3388:5;3373:21;:::i;:::-;3368:3;3361:34;3292:109;;:::o;3407:210::-;3494:4;3532:2;3521:9;3517:18;3509:26;;3545:65;3607:1;3596:9;3592:17;3583:6;3545:65;:::i;:::-;3407:210;;;;:::o;3623:169::-;3707:11;3741:6;3736:3;3729:19;3781:4;3776:3;3772:14;3757:29;;3623:169;;;;:::o;3798:167::-;3938:19;3934:1;3926:6;3922:14;3915:43;3798:167;:::o;3971:366::-;4113:3;4134:67;4198:2;4193:3;4134:67;:::i;:::-;4127:74;;4210:93;4299:3;4210:93;:::i;:::-;4328:2;4323:3;4319:12;4312:19;;3971:366;;;:::o;4343:419::-;4509:4;4547:2;4536:9;4532:18;4524:26;;4596:9;4590:4;4586:20;4582:1;4571:9;4567:17;4560:47;4624:131;4750:4;4624:131;:::i;:::-;4616:139;;4343:419;;;:::o;4768:168::-;4908:20;4904:1;4896:6;4892:14;4885:44;4768:168;:::o;4942:366::-;5084:3;5105:67;5169:2;5164:3;5105:67;:::i;:::-;5098:74;;5181:93;5270:3;5181:93;:::i;:::-;5299:2;5294:3;5290:12;5283:19;;4942:366;;;:::o;5314:419::-;5480:4;5518:2;5507:9;5503:18;5495:26;;5567:9;5561:4;5557:20;5553:1;5542:9;5538:17;5531:47;5595:131;5721:4;5595:131;:::i;:::-;5587:139;;5314:419;;;:::o;5739:173::-;5879:25;5875:1;5867:6;5863:14;5856:49;5739:173;:::o;5918:366::-;6060:3;6081:67;6145:2;6140:3;6081:67;:::i;:::-;6074:74;;6157:93;6246:3;6157:93;:::i;:::-;6275:2;6270:3;6266:12;6259:19;;5918:366;;;:::o;6290:419::-;6456:4;6494:2;6483:9;6479:18;6471:26;;6543:9;6537:4;6533:20;6529:1;6518:9;6514:17;6507:47;6571:131;6697:4;6571:131;:::i;:::-;6563:139;;6290:419;;;:::o;6715:180::-;6763:77;6760:1;6753:88;6860:4;6857:1;6850:15;6884:4;6881:1;6874:15;6901:194;6941:4;6961:20;6979:1;6961:20;:::i;:::-;6956:25;;6995:20;7013:1;6995:20;:::i;:::-;6990:25;;7039:1;7036;7032:9;7024:17;;7063:1;7057:4;7054:11;7051:37;;;7068:18;;:::i;:::-;7051:37;6901:194;;;;:::o;7101:171::-;7241:23;7237:1;7229:6;7225:14;7218:47;7101:171;:::o;7278:366::-;7420:3;7441:67;7505:2;7500:3;7441:67;:::i;:::-;7434:74;;7517:93;7606:3;7517:93;:::i;:::-;7635:2;7630:3;7626:12;7619:19;;7278:366;;;:::o;7650:419::-;7816:4;7854:2;7843:9;7839:18;7831:26;;7903:9;7897:4;7893:20;7889:1;7878:9;7874:17;7867:47;7931:131;8057:4;7931:131;:::i;:::-;7923:139;;7650:419;;;:::o;8075:191::-;8115:3;8134:20;8152:1;8134:20;:::i;:::-;8129:25;;8168:20;8186:1;8168:20;:::i;:::-;8163:25;;8211:1;8208;8204:9;8197:16;;8232:3;8229:1;8226:10;8223:36;;;8239:18;;:::i;:::-;8223:36;8075:191;;;;:::o;8272:181::-;8412:33;8408:1;8400:6;8396:14;8389:57;8272:181;:::o;8459:366::-;8601:3;8622:67;8686:2;8681:3;8622:67;:::i;:::-;8615:74;;8698:93;8787:3;8698:93;:::i;:::-;8816:2;8811:3;8807:12;8800:19;;8459:366;;;:::o;8831:419::-;8997:4;9035:2;9024:9;9020:18;9012:26;;9084:9;9078:4;9074:20;9070:1;9059:9;9055:17;9048:47;9112:131;9238:4;9112:131;:::i;:::-;9104:139;;8831:419;;;:::o;9256:332::-;9377:4;9415:2;9404:9;9400:18;9392:26;;9428:71;9496:1;9485:9;9481:17;9472:6;9428:71;:::i;:::-;9509:72;9577:2;9566:9;9562:18;9553:6;9509:72;:::i;:::-;9256:332;;;;;:::o;9594:442::-;9743:4;9781:2;9770:9;9766:18;9758:26;;9794:71;9862:1;9851:9;9847:17;9838:6;9794:71;:::i;:::-;9875:72;9943:2;9932:9;9928:18;9919:6;9875:72;:::i;:::-;9957;10025:2;10014:9;10010:18;10001:6;9957:72;:::i;:::-;9594:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "951000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addAllowedToken(address)": "infinite",
								"allowedTokens(address)": "2899",
								"collateralBalances(address,address)": "infinite",
								"depositCollateral(address,uint256)": "infinite",
								"getCollateralBalance(address,address)": "infinite",
								"owner()": "2603",
								"removeAllowedToken(address)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdrawCollateral(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 307,
									"end": 3813,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 307,
									"end": 3813,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 307,
									"end": 3813,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1283,
									"end": 1319,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1283,
									"end": 1319,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1283,
									"end": 1319,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1283,
									"end": 1319,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1283,
									"end": 1319,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1283,
									"end": 1319,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1319,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1319,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1283,
									"end": 1319,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1283,
									"end": 1319,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1283,
									"end": 1319,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1315,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 307,
									"end": 3813,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 307,
									"end": 3813,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 307,
									"end": 3813,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 307,
									"end": 3813,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 307,
									"end": 3813,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 307,
									"end": 3813,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 307,
									"end": 3813,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 307,
									"end": 3813,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 307,
									"end": 3813,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 307,
									"end": 3813,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 307,
									"end": 3813,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208695e8b56dc49ac3ecc7191e1e8a5778b586b2156847d75f465b6a63c4a4273464736f6c634300081d0033",
									".code": [
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "90469A9D"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "90469A9D"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "A5D5DB0C"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "B7D5820B"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "E744092E"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "350C35E9"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "39ECF9BA"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "4178617F"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 3813,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2864,
											"end": 3383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2864,
											"end": 3383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 601,
											"end": 674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 601,
											"end": 674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1451,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1451,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1794,
											"end": 2002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1794,
											"end": 2002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2219,
											"end": 2658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2219,
											"end": 2658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3637,
											"end": 3811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3637,
											"end": 3811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 469,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 469,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 469,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2986,
											"end": 2991,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1177,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1150,
											"end": 1200,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3025,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3021,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3015,
											"end": 3025,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 3007,
											"end": 3048,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3007,
											"end": 3048,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3113,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3095,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3096,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3102,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3103,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3113,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3113,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 3058,
											"end": 3141,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3058,
											"end": 3141,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3192,
											"end": 3198,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3169,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3180,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3181,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3187,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3188,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 3151,
											"end": 3198,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3198,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3269,
											"end": 3315,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3296,
											"end": 3306,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3314,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3281,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3269,
											"end": 3295,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3269,
											"end": 3315,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3269,
											"end": 3315,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3269,
											"end": 3315,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3269,
											"end": 3315,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3269,
											"end": 3315,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3269,
											"end": 3315,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3269,
											"end": 3315,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3269,
											"end": 3315,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3350,
											"end": 3360,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "45892A46E6CEF329BB642DA6D69846D324DB43D19008EDC141ED82382EDA1BEE"
										},
										{
											"begin": 3369,
											"end": 3375,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3330,
											"end": 3376,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3376,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 3383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 674,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 601,
											"end": 674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1528,
											"end": 1547,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1533,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1528,
											"end": 1547,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1547,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1520,
											"end": 1573,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1520,
											"end": 1573,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1583,
											"end": 1596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1602,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1610,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1643,
											"end": 1648,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1625,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1625,
											"end": 1649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1625,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F849D00BC67E9E4BF072DF9680646C59B8C5380160834C2E1D4896CE5EC81F75"
										},
										{
											"begin": 1625,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1625,
											"end": 1649,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1625,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1625,
											"end": 1649,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1625,
											"end": 1649,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1625,
											"end": 1649,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1625,
											"end": 1649,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1625,
											"end": 1649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1625,
											"end": 1649,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1874,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1874,
											"end": 1894,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1866,
											"end": 1916,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1866,
											"end": 1916,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1949,
											"end": 1954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1954,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 1994,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "BF996B4FD74F0C7159BB017B1DB415B0D9A6F13129F46D0B93309D170B78DF31"
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 1995,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 2002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 2002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2345,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1177,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1158,
											"end": 1178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1150,
											"end": 1200,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1150,
											"end": 1200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2378,
											"end": 2379,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2375,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2379,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2361,
											"end": 2402,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2361,
											"end": 2402,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2533,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2499,
											"end": 2509,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2519,
											"end": 2523,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2526,
											"end": 2532,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2480,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2498,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2468,
											"end": 2498,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2498,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2468,
											"end": 2498,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2533,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2533,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2533,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2533,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2533,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2468,
											"end": 2533,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2533,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2533,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2468,
											"end": 2533,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2590,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2561,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2572,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2573,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2579,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2590,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2590,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2637,
											"end": 2642,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2625,
											"end": 2635,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "F1C0DD7E9B98BBFF859029005EF89B127AF049CD18DF1A8D79F0B7E019911E56"
										},
										{
											"begin": 2644,
											"end": 2650,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2605,
											"end": 2651,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2651,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3743,
											"end": 3750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3791,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3796,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3797,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3804,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3766,
											"end": 3804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3766,
											"end": 3804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1804,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1790,
											"end": 1799,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1788,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1800,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1773,
											"end": 1805,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1889,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 1770,
											"end": 1889,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 1808,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 1808,
											"end": 1887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1887,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 1808,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1889,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 1770,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1953,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 2016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2057,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 2126,
											"end": 2133,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2124,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 2081,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2071,
											"end": 2134,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2071,
											"end": 2134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 2262,
											"end": 2267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 2244,
											"end": 2268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2242,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2269,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2414,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2493,
											"end": 2494,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2491,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2425,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2496,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2425,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2619,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2614,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2603,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2615,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2620,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 2623,
											"end": 2702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2743,
											"end": 2744,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2793,
											"end": 2802,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2789,
											"end": 2811,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 2768,
											"end": 2821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2821,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2714,
											"end": 2831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2962,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2844,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2949,
											"end": 2954,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 2931,
											"end": 2955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 2955,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2931,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2926,
											"end": 2929,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2919,
											"end": 2956,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2962,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2962,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3190,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2968,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3061,
											"end": 3065,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3101,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3097,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3102,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3102,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 3180,
											"end": 3181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3178,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3182,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 3112,
											"end": 3183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3190,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3190,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3286,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 3196,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3278,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3280,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3248,
											"end": 3280,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3248,
											"end": 3280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3286,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3286,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3286,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3401,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 3292,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 3373,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 3373,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3361,
											"end": 3395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3617,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 3407,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3494,
											"end": 3498,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3534,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3521,
											"end": 3530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3517,
											"end": 3535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3535,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3607,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3592,
											"end": 3609,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3583,
											"end": 3589,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 3545,
											"end": 3610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3610,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3545,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3617,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3792,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3623,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 3718,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3736,
											"end": 3739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 3748,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3781,
											"end": 3785,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3757,
											"end": 3786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3757,
											"end": 3786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3965,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3798,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3938,
											"end": 3957,
											"name": "PUSH",
											"source": 10,
											"value": "546F6B656E206E6F7420616C6C6F776564000000000000000000000000000000"
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 3936,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3958,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 4337,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3971,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4113,
											"end": 4116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4198,
											"end": 4200,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 4193,
											"end": 4196,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 4134,
											"end": 4201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4201,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4134,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4127,
											"end": 4201,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4127,
											"end": 4201,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 4299,
											"end": 4302,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 4210,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 4303,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 4210,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4330,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4323,
											"end": 4326,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4331,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4331,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 4337,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 4337,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 4337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 4337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4762,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 4343,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4513,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4536,
											"end": 4545,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4550,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4605,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4590,
											"end": 4594,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4606,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4582,
											"end": 4583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4580,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4567,
											"end": 4584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4560,
											"end": 4607,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4624,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 4750,
											"end": 4754,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4624,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4624,
											"end": 4755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4624,
											"end": 4755,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 4624,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4616,
											"end": 4755,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4616,
											"end": 4755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4762,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4762,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4768,
											"end": 4936,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 4768,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E74206D757374206265203E20300000000000000000000000000000"
										},
										{
											"begin": 4904,
											"end": 4905,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4902,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4892,
											"end": 4906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4885,
											"end": 4929,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4768,
											"end": 4936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4768,
											"end": 4936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5084,
											"end": 5087,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5105,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5169,
											"end": 5171,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 5164,
											"end": 5167,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5105,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 5105,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5105,
											"end": 5172,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5105,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5098,
											"end": 5172,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5098,
											"end": 5172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5181,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5181,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 5181,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5181,
											"end": 5274,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5181,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5299,
											"end": 5301,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5294,
											"end": 5297,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5290,
											"end": 5302,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5283,
											"end": 5302,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5283,
											"end": 5302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 5308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 5308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5733,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 5314,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5480,
											"end": 5484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5520,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5507,
											"end": 5516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5495,
											"end": 5521,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5495,
											"end": 5521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5567,
											"end": 5576,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5565,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5557,
											"end": 5577,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5554,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5551,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5538,
											"end": 5555,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5531,
											"end": 5578,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5595,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 5721,
											"end": 5725,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5595,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 5595,
											"end": 5726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5595,
											"end": 5726,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 5595,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5733,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5314,
											"end": 5733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5739,
											"end": 5912,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5739,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5904,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E7420636F6C6C61746572616C000000000000000000"
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5867,
											"end": 5873,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5863,
											"end": 5877,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5905,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5739,
											"end": 5912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5739,
											"end": 5912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 6284,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 5918,
											"end": 6284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6060,
											"end": 6063,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 6145,
											"end": 6147,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 6140,
											"end": 6143,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 6081,
											"end": 6148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6148,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6148,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6157,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 6246,
											"end": 6249,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6157,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 6157,
											"end": 6250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6157,
											"end": 6250,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 6157,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6275,
											"end": 6277,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6270,
											"end": 6273,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6278,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6259,
											"end": 6278,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6259,
											"end": 6278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 6284,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 6284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 6284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5918,
											"end": 6284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6709,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 6290,
											"end": 6709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6456,
											"end": 6460,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6492,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6479,
											"end": 6497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6471,
											"end": 6497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6471,
											"end": 6497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6552,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6537,
											"end": 6541,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6533,
											"end": 6553,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6529,
											"end": 6530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6518,
											"end": 6527,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6554,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6571,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 6697,
											"end": 6701,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6571,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 6571,
											"end": 6702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6571,
											"end": 6702,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 6571,
											"end": 6702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6563,
											"end": 6702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6709,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6715,
											"end": 6895,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 6715,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6763,
											"end": 6840,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6760,
											"end": 6761,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6753,
											"end": 6841,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6864,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 6857,
											"end": 6858,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6850,
											"end": 6865,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6884,
											"end": 6888,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6881,
											"end": 6882,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6874,
											"end": 6889,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6901,
											"end": 7095,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 6901,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6941,
											"end": 6945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6961,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 6979,
											"end": 6980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6961,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 6961,
											"end": 6981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6961,
											"end": 6981,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 6961,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6956,
											"end": 6981,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6956,
											"end": 6981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6995,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 7013,
											"end": 7014,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6995,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 6995,
											"end": 7015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6995,
											"end": 7015,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 6995,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 7015,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 7015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7039,
											"end": 7040,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7037,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7032,
											"end": 7041,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7024,
											"end": 7041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7024,
											"end": 7041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7063,
											"end": 7064,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7057,
											"end": 7061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7054,
											"end": 7065,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7051,
											"end": 7088,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7051,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7051,
											"end": 7088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 7068,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 7068,
											"end": 7086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7086,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 7068,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7051,
											"end": 7088,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7051,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6901,
											"end": 7095,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6901,
											"end": 7095,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6901,
											"end": 7095,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6901,
											"end": 7095,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6901,
											"end": 7095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7101,
											"end": 7272,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 7101,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7241,
											"end": 7264,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7229,
											"end": 7235,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7225,
											"end": 7239,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7218,
											"end": 7265,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7101,
											"end": 7272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7101,
											"end": 7272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7278,
											"end": 7644,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 7278,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7420,
											"end": 7423,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 7505,
											"end": 7507,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 7500,
											"end": 7503,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7441,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 7441,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7441,
											"end": 7508,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 7441,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7434,
											"end": 7508,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7434,
											"end": 7508,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7517,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 7606,
											"end": 7609,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7517,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 7517,
											"end": 7610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7517,
											"end": 7610,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 7517,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7635,
											"end": 7637,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7630,
											"end": 7633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7626,
											"end": 7638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7619,
											"end": 7638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7619,
											"end": 7638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7278,
											"end": 7644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7278,
											"end": 7644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7278,
											"end": 7644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7278,
											"end": 7644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 8069,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 7650,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7816,
											"end": 7820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7854,
											"end": 7856,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7843,
											"end": 7852,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7839,
											"end": 7857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7831,
											"end": 7857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7831,
											"end": 7857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 7912,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7901,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7893,
											"end": 7913,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7889,
											"end": 7890,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 7887,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7874,
											"end": 7891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7867,
											"end": 7914,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 8057,
											"end": 8061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 7931,
											"end": 8062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 8062,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 7931,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7923,
											"end": 8062,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7923,
											"end": 8062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 8069,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 8069,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 8069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 8069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8075,
											"end": 8266,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 8075,
											"end": 8266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8115,
											"end": 8118,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8134,
											"end": 8154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 8152,
											"end": 8153,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8134,
											"end": 8154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 8134,
											"end": 8154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8134,
											"end": 8154,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 8134,
											"end": 8154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8129,
											"end": 8154,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8129,
											"end": 8154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8168,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 8186,
											"end": 8187,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8168,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 8168,
											"end": 8188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8168,
											"end": 8188,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 8168,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8188,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8211,
											"end": 8212,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8208,
											"end": 8209,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8204,
											"end": 8213,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8197,
											"end": 8213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8197,
											"end": 8213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8235,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8229,
											"end": 8230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8226,
											"end": 8236,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8259,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 8223,
											"end": 8259,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 8239,
											"end": 8257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 8239,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8223,
											"end": 8259,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 8223,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8075,
											"end": 8266,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8075,
											"end": 8266,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8075,
											"end": 8266,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8075,
											"end": 8266,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8075,
											"end": 8266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8453,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 8272,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8412,
											"end": 8445,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 8408,
											"end": 8409,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8389,
											"end": 8446,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8825,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 8459,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8601,
											"end": 8604,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8622,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 8686,
											"end": 8688,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8681,
											"end": 8684,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 8622,
											"end": 8689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8622,
											"end": 8689,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 8622,
											"end": 8689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8615,
											"end": 8689,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8615,
											"end": 8689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 8787,
											"end": 8790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 8698,
											"end": 8791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 8791,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 8698,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8816,
											"end": 8818,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8811,
											"end": 8814,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8807,
											"end": 8819,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8800,
											"end": 8819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8800,
											"end": 8819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8825,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8825,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8459,
											"end": 8825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 9250,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 8831,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8997,
											"end": 9001,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9037,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9024,
											"end": 9033,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9012,
											"end": 9038,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9012,
											"end": 9038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9084,
											"end": 9093,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9078,
											"end": 9082,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9074,
											"end": 9094,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9070,
											"end": 9071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9059,
											"end": 9068,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9095,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9112,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 9238,
											"end": 9242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9112,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 9112,
											"end": 9243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9112,
											"end": 9243,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 9112,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9104,
											"end": 9243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9104,
											"end": 9243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 9250,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 9250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 9250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 9250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9588,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 9256,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9377,
											"end": 9381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9415,
											"end": 9417,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9404,
											"end": 9413,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9400,
											"end": 9418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9392,
											"end": 9418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9392,
											"end": 9418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9428,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 9496,
											"end": 9497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9485,
											"end": 9494,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9481,
											"end": 9498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9472,
											"end": 9478,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9428,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 9428,
											"end": 9499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9428,
											"end": 9499,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 9428,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9509,
											"end": 9581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 9577,
											"end": 9579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9566,
											"end": 9575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9562,
											"end": 9580,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9553,
											"end": 9559,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9509,
											"end": 9581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 9509,
											"end": 9581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9509,
											"end": 9581,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 9509,
											"end": 9581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9588,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9588,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 10036,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 9594,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9743,
											"end": 9747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9781,
											"end": 9783,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9770,
											"end": 9779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9766,
											"end": 9784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9758,
											"end": 9784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9758,
											"end": 9784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9794,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 9862,
											"end": 9863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9851,
											"end": 9860,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9847,
											"end": 9864,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9838,
											"end": 9844,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9794,
											"end": 9865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 9794,
											"end": 9865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9794,
											"end": 9865,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 9794,
											"end": 9865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9875,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 9943,
											"end": 9945,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9932,
											"end": 9941,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9928,
											"end": 9946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9919,
											"end": 9925,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9875,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 9875,
											"end": 9947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9875,
											"end": 9947,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 9875,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9957,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 10025,
											"end": 10027,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10014,
											"end": 10023,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10001,
											"end": 10007,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9957,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 9957,
											"end": 10029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9957,
											"end": 10029,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 9957,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 10036,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 10036,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 10036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 10036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 10036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 10036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 10036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"C/collateral1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAllowedToken(address)": "4178617f",
							"allowedTokens(address)": "e744092e",
							"collateralBalances(address,address)": "39ecf9ba",
							"depositCollateral(address,uint256)": "a5d5db0c",
							"getCollateralBalance(address,address)": "b7d5820b",
							"owner()": "8da5cb5b",
							"removeAllowedToken(address)": "90469a9d",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdrawCollateral(address,uint256)": "350c35e9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"AllowedTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"AllowedTokenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"addAllowedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getCollateralBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeAllowedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"addAllowedToken(address)\":{\"params\":{\"token\":\"The address of the ERC20 token to allow\"}},\"depositCollateral(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to deposit\",\"token\":\"The address of the ERC20 token to deposit\"}},\"getCollateralBalance(address,address)\":{\"params\":{\"token\":\"The address of the ERC20 token\",\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The amount of collateral the user has deposited for the token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeAllowedToken(address)\":{\"params\":{\"token\":\"The address of the ERC20 token to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawCollateral(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to withdraw\",\"token\":\"The address of the ERC20 token to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAllowedToken(address)\":{\"notice\":\"Owner can add an ERC20 token to the allowed list\"},\"constructor\":{\"notice\":\"Constructor initializes the contract owner\"},\"depositCollateral(address,uint256)\":{\"notice\":\"Allows a user to deposit a specified amount of an allowed token as collateral\"},\"getCollateralBalance(address,address)\":{\"notice\":\"Returns the collateral balance for a given user and token\"},\"removeAllowedToken(address)\":{\"notice\":\"Owner can remove an ERC20 token from the allowed list\"},\"withdrawCollateral(address,uint256)\":{\"notice\":\"Allows a user to withdraw a specified amount of their collateral\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"C/collateral1.sol\":\"CollateralManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"C/collateral1.sol\":{\"keccak256\":\"0xef8e75ed493133881e5fd3fc265bd99f2b45de91f6a5ac36370991d67be8f0df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a278022cf5240776e5a743d7ddc3739c26cf88a233784af3baf37a60db1e46d\",\"dweb:/ipfs/QmbgE5QvfcVhnxfqRuSFaWrBW829RZ5W69TQtPQU4bH26U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "C/collateral1.sol:CollateralManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "C/collateral1.sol:CollateralManager",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 848,
								"contract": "C/collateral1.sol:CollateralManager",
								"label": "allowedTokens",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 854,
								"contract": "C/collateral1.sol:CollateralManager",
								"label": "collateralBalances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addAllowedToken(address)": {
								"notice": "Owner can add an ERC20 token to the allowed list"
							},
							"constructor": {
								"notice": "Constructor initializes the contract owner"
							},
							"depositCollateral(address,uint256)": {
								"notice": "Allows a user to deposit a specified amount of an allowed token as collateral"
							},
							"getCollateralBalance(address,address)": {
								"notice": "Returns the collateral balance for a given user and token"
							},
							"removeAllowedToken(address)": {
								"notice": "Owner can remove an ERC20 token from the allowed list"
							},
							"withdrawCollateral(address,uint256)": {
								"notice": "Allows a user to withdraw a specified amount of their collateral"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							819
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 820,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 819,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 819,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								819
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 801,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							831
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 831,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								831,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							831
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 832,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							789
						]
					},
					"id": 790,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 790,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 790,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 789,
							"linearizedBaseContracts": [
								789
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 789,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 789,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "2548:139:6",
										"statements": [
											{
												"assignments": [
													464
												],
												"declarations": [
													{
														"constant": false,
														"id": 464,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "2558:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 463,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 469,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$789",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$789",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2612:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2581:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "2581:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 475,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2643:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 476,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2650:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 477,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "2659:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 478,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2674:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 474,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "2630:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2493:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2493:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2493:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2507:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2524:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:6"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:6"
									},
									"scope": 789,
									"src": "2462:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "3453:370:6",
										"statements": [
											{
												"id": 524,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:6",
												"statements": [
													{
														"assignments": [
															495
														],
														"declarations": [
															{
																"constant": false,
																"id": 495,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 524,
																"src": "3487:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 504,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 500,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$789",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$789",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 498,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 502,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3545:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 496,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3514:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "3514:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 505,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "3571:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 506,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "3590:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 515,
														"nodeType": "IfStatement",
														"src": "3567:160:6",
														"trueBody": {
															"id": 514,
															"nodeType": "Block",
															"src": "3609:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 509,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 489,
																				"src": "3667:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 510,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "3676:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 511,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "3694:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 508,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "3634:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 513,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 517,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3753:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 518,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3760:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 519,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "3769:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 520,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "3788:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 516,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "3740:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 523,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3386:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 485,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3386:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3386:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3400:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3417:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:6"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:6"
									},
									"scope": 789,
									"src": "3355:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "4477:303:6",
										"statements": [
											{
												"assignments": [
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "4487:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 537,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 541,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "4530:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "4530:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 543,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "4546:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 544,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4555:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 545,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 539,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:6"
											},
											{
												"condition": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 549,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "4602:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 550,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "4609:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 548,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "4578:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "4573:201:6",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "4624:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 554,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "4658:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 557,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "4680:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "4680:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 559,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 532,
																						"src": "4696:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 555,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 553,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4638:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 564,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 566,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "4743:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 567,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "4750:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 565,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4723:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 569,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4422:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 529,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 528,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4422:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4422:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4436:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4453:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:6"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:6"
									},
									"scope": 789,
									"src": "4400:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "5227:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 586,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "5241:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 600,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "5350:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 601,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5354:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 602,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5361:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 598,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "5328:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5328:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 613,
													"nodeType": "IfStatement",
													"src": "5323:117:6",
													"trueBody": {
														"id": 612,
														"nodeType": "Block",
														"src": "5368:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 608,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 577,
																					"src": "5422:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 606,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 605,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5389:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 611,
																"nodeType": "RevertStatement",
																"src": "5382:47:6"
															}
														]
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "5237:203:6",
												"trueBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "5262:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "5289:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 593,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "5296:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "5300:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 591,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5276:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 596,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5156:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 576,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 575,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5156:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5156:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5172:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5184:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5199:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:6"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:6"
									},
									"scope": 789,
									"src": "5124:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "5965:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 631,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "5979:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 646,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6102:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 647,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "6108:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 648,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6112:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 649,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6119:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 644,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "6076:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6076:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 660,
													"nodeType": "IfStatement",
													"src": "6071:127:6",
													"trueBody": {
														"id": 659,
														"nodeType": "Block",
														"src": "6126:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 655,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 620,
																					"src": "6180:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 654,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 653,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 652,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6147:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 658,
																"nodeType": "RevertStatement",
																"src": "6140:47:6"
															}
														]
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "5975:223:6",
												"trueBody": {
													"id": 643,
													"nodeType": "Block",
													"src": "6000:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "6031:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 638,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "6038:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "6044:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 640,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6048:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6014:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 642,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5843:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 619,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 618,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5843:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5843:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5867:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5889:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5909:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5932:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:6"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:6"
									},
									"scope": 789,
									"src": "5798:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "6971:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 676,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "6985:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 690,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "7093:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 691,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "7097:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 692,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "7104:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 688,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "7072:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7072:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 703,
													"nodeType": "IfStatement",
													"src": "7067:116:6",
													"trueBody": {
														"id": 702,
														"nodeType": "Block",
														"src": "7111:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 698,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 667,
																					"src": "7165:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 696,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 695,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7132:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 701,
																"nodeType": "RevertStatement",
																"src": "7125:47:6"
															}
														]
													}
												},
												"id": 704,
												"nodeType": "IfStatement",
												"src": "6981:202:6",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "7006:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 682,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "7033:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 683,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "7040:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 684,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "7044:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 681,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "7020:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6900:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 665,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6900:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6900:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6916:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6928:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6943:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 672,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:6"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:6"
									},
									"scope": 789,
									"src": "6869:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7756:650:6",
										"statements": [
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "7766:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 717,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:6"
											},
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "7794:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:6"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:6",
													"nodeType": "YulBlock",
													"src": "7848:396:6",
													"statements": [
														{
															"nativeSrc": "7862:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:6"
																		},
																		"nativeSrc": "7882:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:6",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:6"
																		},
																		"nativeSrc": "7899:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:6"
																		},
																		"nativeSrc": "7916:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:6"
																},
																"nativeSrc": "7877:60:6",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:6",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:6",
																"nodeType": "YulBlock",
																"src": "7998:157:6",
																"statements": [
																	{
																		"nativeSrc": "8016:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:6"
																			},
																			"nativeSrc": "8027:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:6"
																					},
																					"nativeSrc": "8078:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:6"
																			},
																			"nativeSrc": "8055:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:6"
																		},
																		"nativeSrc": "8055:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:6"
																					},
																					"nativeSrc": "8124:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:6"
																			},
																			"nativeSrc": "8112:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:6"
																		},
																		"nativeSrc": "8112:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:6"
																},
																"nativeSrc": "7982:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:6"
															},
															"nativeSrc": "7979:176:6",
															"nodeType": "YulIf",
															"src": "7979:176:6"
														},
														{
															"nativeSrc": "8168:30:6",
															"nodeType": "YulAssignment",
															"src": "8168:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:6"
																},
																"nativeSrc": "8182:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:6"
																}
															]
														},
														{
															"nativeSrc": "8211:23:6",
															"nodeType": "YulAssignment",
															"src": "8211:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:6"
																},
																"nativeSrc": "8226:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:6",
														"valueSize": 1
													},
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:6",
														"valueSize": 1
													},
													{
														"declaration": 716,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:6",
														"valueSize": 1
													},
													{
														"declaration": 719,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:6",
														"valueSize": 1
													},
													{
														"declaration": 710,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 721,
												"nodeType": "InlineAssembly",
												"src": "7823:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 722,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "8258:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 733,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "8310:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 727,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "8284:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 725,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "IfStatement",
												"src": "8254:146:6",
												"trueBody": {
													"id": 744,
													"nodeType": "Block",
													"src": "8328:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 740,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "8382:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 738,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 737,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "8349:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 743,
															"nodeType": "RevertStatement",
															"src": "8342:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7715:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 709,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 708,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "7715:6:6"
													},
													"referencedDeclaration": 380,
													"src": "7715:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7729:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:6"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:6"
									},
									"scope": 789,
									"src": "7686:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "8997:391:6",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9007:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 758,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 760,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:6"
											},
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9029:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:6"
											},
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9057:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 764,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:6",
													"nodeType": "YulBlock",
													"src": "9111:174:6",
													"statements": [
														{
															"nativeSrc": "9125:71:6",
															"nodeType": "YulAssignment",
															"src": "9125:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:6"
																		},
																		"nativeSrc": "9141:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:6"
																		},
																		"nativeSrc": "9158:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:6"
																		},
																		"nativeSrc": "9175:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:6"
																},
																"nativeSrc": "9136:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:6"
																}
															]
														},
														{
															"nativeSrc": "9209:30:6",
															"nodeType": "YulAssignment",
															"src": "9209:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:6"
																},
																"nativeSrc": "9223:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:6"
																}
															]
														},
														{
															"nativeSrc": "9252:23:6",
															"nodeType": "YulAssignment",
															"src": "9252:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:6"
																},
																"nativeSrc": "9267:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:6",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:6",
														"valueSize": 1
													},
													{
														"declaration": 762,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:6",
														"valueSize": 1
													},
													{
														"declaration": 759,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:6",
														"valueSize": 1
													},
													{
														"declaration": 751,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 767,
												"nodeType": "InlineAssembly",
												"src": "9086:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 768,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "9301:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 769,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "9313:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 780,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9364:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 774,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 751,
																						"src": "9339:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 773,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 772,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 784,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 757,
												"id": 786,
												"nodeType": "Return",
												"src": "9294:87:6"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8941:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 750,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 749,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8941:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8941:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8955:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:6"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8991:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:6"
									},
									"scope": 789,
									"src": "8908:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 790,
							"src": "698:8692:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							819
						]
					},
					"id": 820,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 791,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 792,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 819,
							"linearizedBaseContracts": [
								819
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 797,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 796,
												"id": 799,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 819,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 806,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 805,
												"id": 808,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 803,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 819,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 814,
												"id": 816,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 819,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 820,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							831
						]
					},
					"id": 832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 821,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 822,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 831,
							"linearizedBaseContracts": [
								831
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 824,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 831,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 832,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"C/collateral1.sol": {
				"ast": {
					"absolutePath": "C/collateral1.sol",
					"exportedSymbols": {
						"CollateralManager": [
							1081
						],
						"Context": [
							819
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							789
						]
					},
					"id": 1082,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 834,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 148,
							"src": "124:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 835,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 303,
							"src": "177:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 836,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1082,
							"sourceUnit": 790,
							"src": "240:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 837,
										"name": "Ownable",
										"nameLocations": [
											"337:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "337:7:9"
									},
									"id": 838,
									"nodeType": "InheritanceSpecifier",
									"src": "337:7:9"
								},
								{
									"baseName": {
										"id": 839,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"346:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "346:15:9"
									},
									"id": 840,
									"nodeType": "InheritanceSpecifier",
									"src": "346:15:9"
								}
							],
							"canonicalName": "CollateralManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1081,
							"linearizedBaseContracts": [
								1081,
								302,
								147,
								819
							],
							"name": "CollateralManager",
							"nameLocation": "316:17:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 844,
									"libraryName": {
										"id": 841,
										"name": "SafeERC20",
										"nameLocations": [
											"374:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 789,
										"src": "374:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "368:27:9",
									"typeName": {
										"id": 843,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 842,
											"name": "IERC20",
											"nameLocations": [
												"388:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "388:6:9"
										},
										"referencedDeclaration": 380,
										"src": "388:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "e744092e",
									"id": 848,
									"mutability": "mutable",
									"name": "allowedTokens",
									"nameLocation": "501:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1081,
									"src": "469:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 847,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 845,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "477:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "469:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 846,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "488:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39ecf9ba",
									"id": 854,
									"mutability": "mutable",
									"name": "collateralBalances",
									"nameLocation": "656:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 1081,
									"src": "601:73:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 853,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 849,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "609:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "601:47:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 852,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 850,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "628:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "620:27:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 851,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "639:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f1c0dd7e9b98bbff859029005ef89b127af049cd18df1a8d79f0b7e019911e56",
									"id": 862,
									"name": "CollateralDeposited",
									"nameLocation": "741:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "777:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "761:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "799:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "783:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "814:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "806:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:61:9"
									},
									"src": "735:87:9"
								},
								{
									"anonymous": false,
									"eventSelector": "45892a46e6cef329bb642da6d69846d324db43d19008edc141ed82382eda1bee",
									"id": 870,
									"name": "CollateralWithdrawn",
									"nameLocation": "833:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "869:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "853:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "891:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "875:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "906:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "898:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:61:9"
									},
									"src": "827:87:9"
								},
								{
									"anonymous": false,
									"eventSelector": "f849d00bc67e9e4bf072df9680646c59b8c5380160834c2e1d4896ce5ec81f75",
									"id": 874,
									"name": "AllowedTokenAdded",
									"nameLocation": "925:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "959:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "943:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:23:9"
									},
									"src": "919:47:9"
								},
								{
									"anonymous": false,
									"eventSelector": "bf996b4fd74f0c7159bb017b1db415b0d9a6f13129f46d0b93309d170b78df31",
									"id": 878,
									"name": "AllowedTokenRemoved",
									"nameLocation": "977:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1013:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "997:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "996:23:9"
									},
									"src": "971:49:9"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "1140:78:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 883,
																"name": "allowedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "1158:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 885,
															"indexExpression": {
																"id": 884,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "1172:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1158:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206e6f7420616c6c6f776564",
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1180:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b",
																"typeString": "literal_string \"Token not allowed\""
															},
															"value": "Token not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b",
																"typeString": "literal_string \"Token not allowed\""
															}
														],
														"id": 882,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1150:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1150:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "1150:50:9"
											},
											{
												"id": 889,
												"nodeType": "PlaceholderStatement",
												"src": "1210:1:9"
											}
										]
									},
									"id": 891,
									"name": "onlyAllowedToken",
									"nameLocation": "1108:16:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1133:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "1125:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:15:9"
									},
									"src": "1099:119:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "1317:2:9",
										"statements": []
									},
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "1224:54:9",
										"text": "@notice Constructor initializes the contract owner"
									},
									"id": 900,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 895,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1305:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1309:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1305:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 897,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 894,
												"name": "Ownable",
												"nameLocations": [
													"1297:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1297:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1297:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1294:2:9"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1317:0:9"
									},
									"scope": 1081,
									"src": "1283:36:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "1510:146:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 909,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "1528:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1545:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1537:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 910,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1537:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1537:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1528:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1549:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 908,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1520:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1520:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "1520:53:9"
											},
											{
												"expression": {
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 918,
															"name": "allowedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "1583:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 920,
														"indexExpression": {
															"id": 919,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "1597:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1583:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1606:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1583:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "1583:27:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 925,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "1643:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 924,
														"name": "AllowedTokenAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "1625:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1625:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "EmitStatement",
												"src": "1620:29:9"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "1325:121:9",
										"text": "@notice Owner can add an ERC20 token to the allowed list\n @param token The address of the ERC20 token to allow"
									},
									"functionSelector": "4178617f",
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 906,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 905,
												"name": "onlyOwner",
												"nameLocations": [
													"1500:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1500:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1500:9:9"
										}
									],
									"name": "addAllowedToken",
									"nameLocation": "1460:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1484:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1476:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1476:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1475:15:9"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1510:0:9"
									},
									"scope": 1081,
									"src": "1451:205:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "1856:146:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 938,
																"name": "allowedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "1874:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 940,
															"indexExpression": {
																"id": 939,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "1888:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1874:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206e6f7420616c6c6f776564",
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1896:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b",
																"typeString": "literal_string \"Token not allowed\""
															},
															"value": "Token not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b",
																"typeString": "literal_string \"Token not allowed\""
															}
														],
														"id": 937,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1866:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1866:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "1866:50:9"
											},
											{
												"expression": {
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 944,
															"name": "allowedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "1926:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 946,
														"indexExpression": {
															"id": 945,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "1940:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1926:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1949:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1926:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "1926:28:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 951,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "1989:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 950,
														"name": "AllowedTokenRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "1969:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1969:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "EmitStatement",
												"src": "1964:31:9"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "1662:127:9",
										"text": "@notice Owner can remove an ERC20 token from the allowed list\n @param token The address of the ERC20 token to remove"
									},
									"functionSelector": "90469a9d",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 935,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 934,
												"name": "onlyOwner",
												"nameLocations": [
													"1846:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1846:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1846:9:9"
										}
									],
									"name": "removeAllowedToken",
									"nameLocation": "1803:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1830:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1822:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:15:9"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1856:0:9"
									},
									"scope": 1081,
									"src": "1794:208:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "2351:307:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 969,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "2369:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2378:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2369:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2381:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 968,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2361:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2361:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "2361:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 979,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2499:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2503:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2499:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 983,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2519:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CollateralManager_$1081",
																		"typeString": "contract CollateralManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CollateralManager_$1081",
																		"typeString": "contract CollateralManager"
																	}
																],
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2511:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 981,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2511:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 985,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "2526:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 976,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "2475:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 975,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "2468:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2468:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2482:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "2468:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2468:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "2468:65:9"
											},
											{
												"expression": {
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 988,
																"name": "collateralBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "2543:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 992,
															"indexExpression": {
																"expression": {
																	"id": 989,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2562:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2566:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2562:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2543:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 993,
														"indexExpression": {
															"id": 991,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "2574:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2543:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 994,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "2584:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2543:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "2543:47:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 998,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2625:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2629:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2625:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1000,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "2637:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1001,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "2644:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 997,
														"name": "CollateralDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "2605:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2605:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "EmitStatement",
												"src": "2600:51:9"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "2008:206:9",
										"text": "@notice Allows a user to deposit a specified amount of an allowed token as collateral\n @param token The address of the ERC20 token to deposit\n @param amount The amount of tokens to deposit"
									},
									"functionSelector": "a5d5db0c",
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 963,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 962,
												"name": "nonReentrant",
												"nameLocations": [
													"2302:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "2302:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2302:12:9"
										},
										{
											"arguments": [
												{
													"id": 965,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 958,
													"src": "2340:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 966,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 964,
												"name": "onlyAllowedToken",
												"nameLocations": [
													"2323:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 891,
												"src": "2323:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2323:23:9"
										}
									],
									"name": "depositCollateral",
									"nameLocation": "2228:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2254:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2246:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2269:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2261:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2261:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2245:31:9"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2351:0:9"
									},
									"scope": 1081,
									"src": "2219:439:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "2997:386:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1019,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "3015:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3024:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3015:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3027:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1018,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3007:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3007:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "3007:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1026,
																		"name": "collateralBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "3066:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1029,
																	"indexExpression": {
																		"expression": {
																			"id": 1027,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3085:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3089:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3085:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3066:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1031,
																"indexExpression": {
																	"id": 1030,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "3097:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3066:37:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1032,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "3107:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3066:47:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6c6c61746572616c",
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3115:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
																"typeString": "literal_string \"Insufficient collateral\""
															},
															"value": "Insufficient collateral"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
																"typeString": "literal_string \"Insufficient collateral\""
															}
														],
														"id": 1025,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3058:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3058:83:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "3058:83:9"
											},
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1037,
																"name": "collateralBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "3151:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1041,
															"indexExpression": {
																"expression": {
																	"id": 1038,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3170:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3174:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3170:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3151:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1042,
														"indexExpression": {
															"id": 1040,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "3182:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3151:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1043,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "3192:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3151:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "3151:47:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1050,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3296:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3300:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3296:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "3308:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1047,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "3276:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1046,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "3269:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3269:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3283:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "3269:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3269:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "3269:46:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1056,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3350:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3354:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3350:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "3362:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "3369:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1055,
														"name": "CollateralWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "3330:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3330:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "EmitStatement",
												"src": "3325:51:9"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "2664:195:9",
										"text": "@notice Allows a user to withdraw a specified amount of their collateral\n @param token The address of the ERC20 token to withdraw\n @param amount The amount of tokens to withdraw"
									},
									"functionSelector": "350c35e9",
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1013,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1012,
												"name": "nonReentrant",
												"nameLocations": [
													"2948:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "2948:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2948:12:9"
										},
										{
											"arguments": [
												{
													"id": 1015,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1008,
													"src": "2986:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1016,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1014,
												"name": "onlyAllowedToken",
												"nameLocations": [
													"2969:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 891,
												"src": "2969:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2969:23:9"
										}
									],
									"name": "withdrawCollateral",
									"nameLocation": "2873:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2900:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "2892:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2915:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "2907:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2907:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2891:31:9"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2997:0:9"
									},
									"scope": 1081,
									"src": "2864:519:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "3756:55:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1073,
															"name": "collateralBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "3773:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1075,
														"indexExpression": {
															"id": 1074,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "3792:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3773:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1077,
													"indexExpression": {
														"id": 1076,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "3798:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3773:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1072,
												"id": 1078,
												"nodeType": "Return",
												"src": "3766:38:9"
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "3389:243:9",
										"text": "@notice Returns the collateral balance for a given user and token\n @param user The address of the user\n @param token The address of the ERC20 token\n @return The amount of collateral the user has deposited for the token"
									},
									"functionSelector": "b7d5820b",
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCollateralBalance",
									"nameLocation": "3646:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3675:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "3667:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3667:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3689:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "3681:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3681:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3666:29:9"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "3743:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3743:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3742:9:9"
									},
									"scope": 1081,
									"src": "3637:174:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1082,
							"src": "307:3506:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								862,
								870,
								874,
								878
							]
						}
					],
					"src": "32:3782:9"
				},
				"id": 9
			}
		}
	}
}