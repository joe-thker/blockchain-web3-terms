{
	"id": "76713bbc00d5d2c49a5c27dd2c5a4f28",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"C/collateralMargin.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// Import OpenZeppelin libraries for security and token operations\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract CollateralManager is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // Mapping to keep track of allowed ERC20 tokens for collateral\n    mapping(address => bool) public allowedTokens;\n    // Mapping to store collateral factors for each token in basis points (e.g., 7500 for 75%)\n    mapping(address => uint256) public collateralFactors;\n    // Mapping to track user collateral balances: user => token => amount\n    mapping(address => mapping(address => uint256)) public collateralBalances;\n    // Mapping to track user borrow balances: user => token => borrowed amount\n    mapping(address => mapping(address => uint256)) public borrowBalances;\n\n    // Events for transparency and off-chain tracking\n    event CollateralDeposited(address indexed user, address indexed token, uint256 amount);\n    event CollateralWithdrawn(address indexed user, address indexed token, uint256 amount);\n    event AllowedTokenAdded(address indexed token);\n    event AllowedTokenRemoved(address indexed token);\n    event CollateralFactorUpdated(address indexed token, uint256 factor);\n    event Borrowed(address indexed user, address indexed token, uint256 amount);\n    event Repaid(address indexed user, address indexed token, uint256 amount);\n\n    // Modifier to ensure the token is allowed for collateral operations\n    modifier onlyAllowedToken(address token) {\n        require(allowedTokens[token], \"Token not allowed\");\n        _;\n    }\n\n    /// @notice Constructor initializes the contract owner\n    constructor() Ownable(msg.sender) {}\n\n    /// @notice Owner can add an ERC20 token to the allowed list\n    /// @param token The address of the ERC20 token to allow\n    function addAllowedToken(address token) external onlyOwner {\n        require(token != address(0), \"Invalid token address\");\n        allowedTokens[token] = true;\n        emit AllowedTokenAdded(token);\n    }\n\n    /// @notice Owner can remove an ERC20 token from the allowed list\n    /// @param token The address of the ERC20 token to remove\n    function removeAllowedToken(address token) external onlyOwner {\n        require(allowedTokens[token], \"Token not allowed\");\n        allowedTokens[token] = false;\n        emit AllowedTokenRemoved(token);\n    }\n\n    /// @notice Owner can set the collateral factor for an allowed token\n    /// @param token The address of the ERC20 token\n    /// @param factor The collateral factor in basis points (max 10000, which equals 100%)\n    function setCollateralFactor(address token, uint256 factor) external onlyOwner onlyAllowedToken(token) {\n        require(factor <= 10000, \"Factor must be <= 10000\");\n        collateralFactors[token] = factor;\n        emit CollateralFactorUpdated(token, factor);\n    }\n\n    /// @notice Allows a user to deposit a specified amount of an allowed token as collateral\n    /// @param token The address of the ERC20 token to deposit\n    /// @param amount The amount of tokens to deposit\n    function depositCollateral(address token, uint256 amount)\n        external\n        nonReentrant\n        onlyAllowedToken(token)\n    {\n        require(amount > 0, \"Amount must be > 0\");\n        // Transfer tokens from the user to this contract\n        IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\n        collateralBalances[msg.sender][token] += amount;\n        emit CollateralDeposited(msg.sender, token, amount);\n    }\n\n    /// @notice Allows a user to withdraw a specified amount of their collateral,\n    /// ensuring the remaining effective collateral covers any borrowings.\n    /// @param token The address of the ERC20 token to withdraw\n    /// @param amount The amount of tokens to withdraw\n    function withdrawCollateral(address token, uint256 amount)\n        external\n        nonReentrant\n        onlyAllowedToken(token)\n    {\n        require(amount > 0, \"Amount must be > 0\");\n        uint256 currentCollateral = collateralBalances[msg.sender][token];\n        require(currentCollateral >= amount, \"Insufficient collateral\");\n\n        // Calculate new collateral balance after withdrawal\n        uint256 newCollateralBalance = currentCollateral - amount;\n        // Compute effective collateral after withdrawal\n        uint256 effectiveCollateral = newCollateralBalance * collateralFactors[token] / 10000;\n        // Ensure that the remaining collateral covers the borrowed amount\n        require(effectiveCollateral >= borrowBalances[msg.sender][token], \"Withdrawal would undercollateralize position\");\n\n        collateralBalances[msg.sender][token] = newCollateralBalance;\n        IERC20(token).safeTransfer(msg.sender, amount);\n        emit CollateralWithdrawn(msg.sender, token, amount);\n    }\n\n    /// @notice Allows a user to borrow tokens against their collateral.\n    /// The new borrow balance cannot exceed the user's effective collateral.\n    /// @param token The address of the ERC20 token to borrow\n    /// @param amount The amount of tokens to borrow\n    function borrowCollateral(address token, uint256 amount)\n        external\n        nonReentrant\n        onlyAllowedToken(token)\n    {\n        require(amount > 0, \"Amount must be > 0\");\n        // Compute user's effective collateral value\n        uint256 effectiveCollateral = collateralBalances[msg.sender][token] * collateralFactors[token] / 10000;\n        uint256 newBorrowBalance = borrowBalances[msg.sender][token] + amount;\n        // Ensure that the new borrow does not exceed effective collateral\n        require(newBorrowBalance <= effectiveCollateral, \"Insufficient collateral for borrow\");\n\n        borrowBalances[msg.sender][token] = newBorrowBalance;\n        // Transfer the borrowed tokens to the user (assuming the contract holds sufficient liquidity)\n        IERC20(token).safeTransfer(msg.sender, amount);\n        emit Borrowed(msg.sender, token, amount);\n    }\n\n    /// @notice Allows a user to repay their borrowed tokens.\n    /// @param token The address of the ERC20 token to repay\n    /// @param amount The amount of tokens to repay\n    function repayBorrow(address token, uint256 amount)\n        external\n        nonReentrant\n        onlyAllowedToken(token)\n    {\n        require(amount > 0, \"Amount must be > 0\");\n        uint256 borrowed = borrowBalances[msg.sender][token];\n        require(borrowed >= amount, \"Repay amount exceeds borrowed balance\");\n\n        borrowBalances[msg.sender][token] = borrowed - amount;\n        // Transfer tokens from the user to this contract as repayment\n        IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\n        emit Repaid(msg.sender, token, amount);\n    }\n\n    /// @notice Returns the collateral balance for a given user and token.\n    /// @param user The address of the user\n    /// @param token The address of the ERC20 token\n    /// @return The amount of collateral the user has deposited for the token\n    function getCollateralBalance(address user, address token)\n        external\n        view\n        returns (uint256)\n    {\n        return collateralBalances[user][token];\n    }\n\n    /// @notice Computes the effective collateral for a user based on the collateral factor of the token.\n    /// @param user The address of the user\n    /// @param token The address of the ERC20 token\n    /// @return The effective collateral value after applying the collateral factor\n    function getEffectiveCollateral(address user, address token)\n        public\n        view\n        returns (uint256)\n    {\n        return collateralBalances[user][token] * collateralFactors[token] / 10000;\n    }\n\n    /// @notice Computes the collateral margin for a user,\n    /// defined as the effective collateral minus the borrowed amount.\n    /// A negative margin indicates that the position is undercollateralized.\n    /// @param user The address of the user\n    /// @param token The address of the ERC20 token\n    /// @return The collateral margin as a signed integer\n    function getCollateralMargin(address user, address token)\n        external\n        view\n        returns (int256)\n    {\n        uint256 effectiveCollateral = getEffectiveCollateral(user, token);\n        uint256 borrowed = borrowBalances[user][token];\n        if (effectiveCollateral >= borrowed) {\n            return int256(effectiveCollateral - borrowed);\n        } else {\n            return -int256(borrowed - effectiveCollateral);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID OR SUB 0xD RJUMP 0x556F PUSH8 0xAEDC1EA4BF304AC0 CREATE 0xDB 0xC9 MOD 0xA7 0x27 PUSH15 0x479159E0692A32ED7F64736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "698:8692:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID OR SUB 0xD RJUMP 0x556F PUSH8 0xAEDC1EA4BF304AC0 CREATE 0xDB 0xC9 MOD 0xA7 0x27 PUSH15 0x479159E0692A32ED7F64736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "698:8692:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"C/collateralMargin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"C/collateralMargin.sol": {
				"CollateralManager": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "AllowedTokenAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "AllowedTokenRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Borrowed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CollateralDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "factor",
									"type": "uint256"
								}
							],
							"name": "CollateralFactorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CollateralWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Repaid",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "addAllowedToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowedTokens",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "borrowBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "borrowCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "collateralBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "collateralFactors",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getCollateralBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getCollateralMargin",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getEffectiveCollateral",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "removeAllowedToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "repayBorrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "factor",
									"type": "uint256"
								}
							],
							"name": "setCollateralFactor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addAllowedToken(address)": {
								"params": {
									"token": "The address of the ERC20 token to allow"
								}
							},
							"borrowCollateral(address,uint256)": {
								"params": {
									"amount": "The amount of tokens to borrow",
									"token": "The address of the ERC20 token to borrow"
								}
							},
							"depositCollateral(address,uint256)": {
								"params": {
									"amount": "The amount of tokens to deposit",
									"token": "The address of the ERC20 token to deposit"
								}
							},
							"getCollateralBalance(address,address)": {
								"params": {
									"token": "The address of the ERC20 token",
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The amount of collateral the user has deposited for the token"
								}
							},
							"getCollateralMargin(address,address)": {
								"params": {
									"token": "The address of the ERC20 token",
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The collateral margin as a signed integer"
								}
							},
							"getEffectiveCollateral(address,address)": {
								"params": {
									"token": "The address of the ERC20 token",
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The effective collateral value after applying the collateral factor"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeAllowedToken(address)": {
								"params": {
									"token": "The address of the ERC20 token to remove"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"repayBorrow(address,uint256)": {
								"params": {
									"amount": "The amount of tokens to repay",
									"token": "The address of the ERC20 token to repay"
								}
							},
							"setCollateralFactor(address,uint256)": {
								"params": {
									"factor": "The collateral factor in basis points (max 10000, which equals 100%)",
									"token": "The address of the ERC20 token"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawCollateral(address,uint256)": {
								"params": {
									"amount": "The amount of tokens to withdraw",
									"token": "The address of the ERC20 token to withdraw"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"C/collateralMargin.sol\":307:8630  contract CollateralManager is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"C/collateralMargin.sol\":1817:1853  constructor() Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"C/collateralMargin.sol\":1839:1849  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"C/collateralMargin.sol\":307:8630  contract CollateralManager is Ownable, ReentrancyGuard {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_15:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_16:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_21\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_17:\n    /* \"#utility.yul\":328:352   */\n  tag_23\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_16\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_8:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_25\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"C/collateralMargin.sol\":307:8630  contract CollateralManager is Ownable, ReentrancyGuard {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"C/collateralMargin.sol\":307:8630  contract CollateralManager is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x90469a9d\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xc04f31ff\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xc04f31ff\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc3b8d9a3\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe744092e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xfc7d42d7\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x90469a9d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa5d5db0c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xabdb5ea8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb7d5820b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x6a0c7e9d\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x6a0c7e9d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8009f857\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x350c35e9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x39ecf9ba\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4178617f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x572d9888\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"C/collateralMargin.sol\":3965:4971  function withdrawCollateral(address token, uint256 amount)... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"C/collateralMargin.sol\":747:820  mapping(address => mapping(address => uint256)) public collateralBalances */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/collateralMargin.sol\":1985:2190  function addAllowedToken(address token) external onlyOwner {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"C/collateralMargin.sol\":615:667  mapping(address => uint256) public collateralFactors */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/collateralMargin.sol\":5243:6119  function borrowCollateral(address token, uint256 amount)... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"C/collateralMargin.sol\":7603:7812  function getEffectiveCollateral(address user, address token)... */\n    tag_9:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/collateralMargin.sol\":2328:2536  function removeAllowedToken(address token) external onlyOwner {... */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"C/collateralMargin.sol\":3242:3683  function depositCollateral(address token, uint256 amount)... */\n    tag_12:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"C/collateralMargin.sol\":6300:6882  function repayBorrow(address token, uint256 amount)... */\n    tag_13:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"C/collateralMargin.sol\":7137:7311  function getCollateralBalance(address user, address token)... */\n    tag_14:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/collateralMargin.sol\":2758:3025  function setCollateralFactor(address token, uint256 factor) external onlyOwner onlyAllowedToken(token) {... */\n    tag_15:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"C/collateralMargin.sol\":8180:8628  function getCollateralMargin(address user, address token)... */\n    tag_16:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/collateralMargin.sol\":469:514  mapping(address => bool) public allowedTokens */\n    tag_17:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"C/collateralMargin.sol\":905:974  mapping(address => mapping(address => uint256)) public borrowBalances */\n    tag_19:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/collateralMargin.sol\":3965:4971  function withdrawCollateral(address token, uint256 amount)... */\n    tag_26:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_88\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_89\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_88:\n        /* \"C/collateralMargin.sol\":4087:4092  token */\n      dup2\n        /* \"C/collateralMargin.sol\":1692:1705  allowedTokens */\n      0x02\n        /* \"C/collateralMargin.sol\":1692:1712  allowedTokens[token] */\n      0x00\n        /* \"C/collateralMargin.sol\":1706:1711  token */\n      dup3\n        /* \"C/collateralMargin.sol\":1692:1712  allowedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"C/collateralMargin.sol\":1684:1734  require(allowedTokens[token], \"Token not allowed\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"C/collateralMargin.sol\":4125:4126  0 */\n      0x00\n        /* \"C/collateralMargin.sol\":4116:4122  amount */\n      dup3\n        /* \"C/collateralMargin.sol\":4116:4126  amount > 0 */\n      gt\n        /* \"C/collateralMargin.sol\":4108:4149  require(amount > 0, \"Amount must be > 0\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"C/collateralMargin.sol\":4159:4184  uint256 currentCollateral */\n      0x00\n        /* \"C/collateralMargin.sol\":4187:4205  collateralBalances */\n      0x04\n        /* \"C/collateralMargin.sol\":4187:4217  collateralBalances[msg.sender] */\n      0x00\n        /* \"C/collateralMargin.sol\":4206:4216  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":4187:4217  collateralBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":4187:4224  collateralBalances[msg.sender][token] */\n      0x00\n        /* \"C/collateralMargin.sol\":4218:4223  token */\n      dup6\n        /* \"C/collateralMargin.sol\":4187:4224  collateralBalances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/collateralMargin.sol\":4159:4224  uint256 currentCollateral = collateralBalances[msg.sender][token] */\n      swap1\n      pop\n        /* \"C/collateralMargin.sol\":4263:4269  amount */\n      dup3\n        /* \"C/collateralMargin.sol\":4242:4259  currentCollateral */\n      dup2\n        /* \"C/collateralMargin.sol\":4242:4269  currentCollateral >= amount */\n      lt\n      iszero\n        /* \"C/collateralMargin.sol\":4234:4297  require(currentCollateral >= amount, \"Insufficient collateral\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"C/collateralMargin.sol\":4369:4397  uint256 newCollateralBalance */\n      0x00\n        /* \"C/collateralMargin.sol\":4420:4426  amount */\n      dup4\n        /* \"C/collateralMargin.sol\":4400:4417  currentCollateral */\n      dup3\n        /* \"C/collateralMargin.sol\":4400:4426  currentCollateral - amount */\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"C/collateralMargin.sol\":4369:4426  uint256 newCollateralBalance = currentCollateral - amount */\n      swap1\n      pop\n        /* \"C/collateralMargin.sol\":4493:4520  uint256 effectiveCollateral */\n      0x00\n        /* \"C/collateralMargin.sol\":4573:4578  10000 */\n      0x2710\n        /* \"C/collateralMargin.sol\":4546:4563  collateralFactors */\n      0x03\n        /* \"C/collateralMargin.sol\":4546:4570  collateralFactors[token] */\n      0x00\n        /* \"C/collateralMargin.sol\":4564:4569  token */\n      dup9\n        /* \"C/collateralMargin.sol\":4546:4570  collateralFactors[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/collateralMargin.sol\":4523:4543  newCollateralBalance */\n      dup4\n        /* \"C/collateralMargin.sol\":4523:4570  newCollateralBalance * collateralFactors[token] */\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"C/collateralMargin.sol\":4523:4578  newCollateralBalance * collateralFactors[token] / 10000 */\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"C/collateralMargin.sol\":4493:4578  uint256 effectiveCollateral = newCollateralBalance * collateralFactors[token] / 10000 */\n      swap1\n      pop\n        /* \"C/collateralMargin.sol\":4694:4708  borrowBalances */\n      0x05\n        /* \"C/collateralMargin.sol\":4694:4720  borrowBalances[msg.sender] */\n      0x00\n        /* \"C/collateralMargin.sol\":4709:4719  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":4694:4720  borrowBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":4694:4727  borrowBalances[msg.sender][token] */\n      0x00\n        /* \"C/collateralMargin.sol\":4721:4726  token */\n      dup8\n        /* \"C/collateralMargin.sol\":4694:4727  borrowBalances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/collateralMargin.sol\":4671:4690  effectiveCollateral */\n      dup2\n        /* \"C/collateralMargin.sol\":4671:4727  effectiveCollateral >= borrowBalances[msg.sender][token] */\n      lt\n      iszero\n        /* \"C/collateralMargin.sol\":4663:4776  require(effectiveCollateral >= borrowBalances[msg.sender][token], \"Withdrawal would undercollateralize position\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"C/collateralMargin.sol\":4827:4847  newCollateralBalance */\n      dup2\n        /* \"C/collateralMargin.sol\":4787:4805  collateralBalances */\n      0x04\n        /* \"C/collateralMargin.sol\":4787:4817  collateralBalances[msg.sender] */\n      0x00\n        /* \"C/collateralMargin.sol\":4806:4816  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":4787:4817  collateralBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":4787:4824  collateralBalances[msg.sender][token] */\n      0x00\n        /* \"C/collateralMargin.sol\":4818:4823  token */\n      dup9\n        /* \"C/collateralMargin.sol\":4787:4824  collateralBalances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":4787:4847  collateralBalances[msg.sender][token] = newCollateralBalance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/collateralMargin.sol\":4857:4903  IERC20(token).safeTransfer(msg.sender, amount) */\n      tag_110\n        /* \"C/collateralMargin.sol\":4884:4894  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":4896:4902  amount */\n      dup7\n        /* \"C/collateralMargin.sol\":4864:4869  token */\n      dup9\n        /* \"C/collateralMargin.sol\":4857:4883  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_111\n      swap1\n        /* \"C/collateralMargin.sol\":4857:4903  IERC20(token).safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"C/collateralMargin.sol\":4950:4955  token */\n      dup6\n        /* \"C/collateralMargin.sol\":4918:4964  CollateralWithdrawn(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/collateralMargin.sol\":4938:4948  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":4918:4964  CollateralWithdrawn(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x45892a46e6cef329bb642da6d69846d324db43d19008edc141ed82382eda1bee\n        /* \"C/collateralMargin.sol\":4957:4963  amount */\n      dup8\n        /* \"C/collateralMargin.sol\":4918:4964  CollateralWithdrawn(msg.sender, token, amount) */\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"C/collateralMargin.sol\":4098:4971  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_113\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_114\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_113:\n        /* \"C/collateralMargin.sol\":3965:4971  function withdrawCollateral(address token, uint256 amount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"C/collateralMargin.sol\":747:820  mapping(address => mapping(address => uint256)) public collateralBalances */\n    tag_30:\n      mstore(0x20, 0x04)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"C/collateralMargin.sol\":1985:2190  function addAllowedToken(address token) external onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"C/collateralMargin.sol\":2079:2080  0 */\n      0x00\n        /* \"C/collateralMargin.sol\":2062:2081  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/collateralMargin.sol\":2062:2067  token */\n      dup2\n        /* \"C/collateralMargin.sol\":2062:2081  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"C/collateralMargin.sol\":2054:2107  require(token != address(0), \"Invalid token address\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"C/collateralMargin.sol\":2140:2144  true */\n      0x01\n        /* \"C/collateralMargin.sol\":2117:2130  allowedTokens */\n      0x02\n        /* \"C/collateralMargin.sol\":2117:2137  allowedTokens[token] */\n      0x00\n        /* \"C/collateralMargin.sol\":2131:2136  token */\n      dup4\n        /* \"C/collateralMargin.sol\":2117:2137  allowedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/collateralMargin.sol\":2117:2144  allowedTokens[token] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"C/collateralMargin.sol\":2177:2182  token */\n      dup1\n        /* \"C/collateralMargin.sol\":2159:2183  AllowedTokenAdded(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf849d00bc67e9e4bf072df9680646c59b8c5380160834c2e1d4896ce5ec81f75\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/collateralMargin.sol\":1985:2190  function addAllowedToken(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"C/collateralMargin.sol\":615:667  mapping(address => uint256) public collateralFactors */\n    tag_39:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"C/collateralMargin.sol\":5243:6119  function borrowCollateral(address token, uint256 amount)... */\n    tag_43:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_123\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_89\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_123:\n        /* \"C/collateralMargin.sol\":5363:5368  token */\n      dup2\n        /* \"C/collateralMargin.sol\":1692:1705  allowedTokens */\n      0x02\n        /* \"C/collateralMargin.sol\":1692:1712  allowedTokens[token] */\n      0x00\n        /* \"C/collateralMargin.sol\":1706:1711  token */\n      dup3\n        /* \"C/collateralMargin.sol\":1692:1712  allowedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"C/collateralMargin.sol\":1684:1734  require(allowedTokens[token], \"Token not allowed\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_93\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"C/collateralMargin.sol\":5401:5402  0 */\n      0x00\n        /* \"C/collateralMargin.sol\":5392:5398  amount */\n      dup3\n        /* \"C/collateralMargin.sol\":5392:5402  amount > 0 */\n      gt\n        /* \"C/collateralMargin.sol\":5384:5425  require(amount > 0, \"Amount must be > 0\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_97\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"C/collateralMargin.sol\":5488:5515  uint256 effectiveCollateral */\n      0x00\n        /* \"C/collateralMargin.sol\":5585:5590  10000 */\n      0x2710\n        /* \"C/collateralMargin.sol\":5558:5575  collateralFactors */\n      0x03\n        /* \"C/collateralMargin.sol\":5558:5582  collateralFactors[token] */\n      0x00\n        /* \"C/collateralMargin.sol\":5576:5581  token */\n      dup7\n        /* \"C/collateralMargin.sol\":5558:5582  collateralFactors[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/collateralMargin.sol\":5518:5536  collateralBalances */\n      0x04\n        /* \"C/collateralMargin.sol\":5518:5548  collateralBalances[msg.sender] */\n      0x00\n        /* \"C/collateralMargin.sol\":5537:5547  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":5518:5548  collateralBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":5518:5555  collateralBalances[msg.sender][token] */\n      0x00\n        /* \"C/collateralMargin.sol\":5549:5554  token */\n      dup8\n        /* \"C/collateralMargin.sol\":5518:5555  collateralBalances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/collateralMargin.sol\":5518:5582  collateralBalances[msg.sender][token] * collateralFactors[token] */\n      tag_130\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_130:\n        /* \"C/collateralMargin.sol\":5518:5590  collateralBalances[msg.sender][token] * collateralFactors[token] / 10000 */\n      tag_131\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_131:\n        /* \"C/collateralMargin.sol\":5488:5590  uint256 effectiveCollateral = collateralBalances[msg.sender][token] * collateralFactors[token] / 10000 */\n      swap1\n      pop\n        /* \"C/collateralMargin.sol\":5600:5624  uint256 newBorrowBalance */\n      0x00\n        /* \"C/collateralMargin.sol\":5663:5669  amount */\n      dup4\n        /* \"C/collateralMargin.sol\":5627:5641  borrowBalances */\n      0x05\n        /* \"C/collateralMargin.sol\":5627:5653  borrowBalances[msg.sender] */\n      0x00\n        /* \"C/collateralMargin.sol\":5642:5652  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":5627:5653  borrowBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":5627:5660  borrowBalances[msg.sender][token] */\n      0x00\n        /* \"C/collateralMargin.sol\":5654:5659  token */\n      dup8\n        /* \"C/collateralMargin.sol\":5627:5660  borrowBalances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/collateralMargin.sol\":5627:5669  borrowBalances[msg.sender][token] + amount */\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"C/collateralMargin.sol\":5600:5669  uint256 newBorrowBalance = borrowBalances[msg.sender][token] + amount */\n      swap1\n      pop\n        /* \"C/collateralMargin.sol\":5782:5801  effectiveCollateral */\n      dup2\n        /* \"C/collateralMargin.sol\":5762:5778  newBorrowBalance */\n      dup2\n        /* \"C/collateralMargin.sol\":5762:5801  newBorrowBalance <= effectiveCollateral */\n      gt\n      iszero\n        /* \"C/collateralMargin.sol\":5754:5840  require(newBorrowBalance <= effectiveCollateral, \"Insufficient collateral for borrow\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"C/collateralMargin.sol\":5887:5903  newBorrowBalance */\n      dup1\n        /* \"C/collateralMargin.sol\":5851:5865  borrowBalances */\n      0x05\n        /* \"C/collateralMargin.sol\":5851:5877  borrowBalances[msg.sender] */\n      0x00\n        /* \"C/collateralMargin.sol\":5866:5876  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":5851:5877  borrowBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":5851:5884  borrowBalances[msg.sender][token] */\n      0x00\n        /* \"C/collateralMargin.sol\":5878:5883  token */\n      dup8\n        /* \"C/collateralMargin.sol\":5851:5884  borrowBalances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":5851:5903  borrowBalances[msg.sender][token] = newBorrowBalance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/collateralMargin.sol\":6016:6062  IERC20(token).safeTransfer(msg.sender, amount) */\n      tag_137\n        /* \"C/collateralMargin.sol\":6043:6053  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":6055:6061  amount */\n      dup6\n        /* \"C/collateralMargin.sol\":6023:6028  token */\n      dup8\n        /* \"C/collateralMargin.sol\":6016:6042  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_111\n      swap1\n        /* \"C/collateralMargin.sol\":6016:6062  IERC20(token).safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"C/collateralMargin.sol\":6098:6103  token */\n      dup5\n        /* \"C/collateralMargin.sol\":6077:6112  Borrowed(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/collateralMargin.sol\":6086:6096  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":6077:6112  Borrowed(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3fc499aeb0bb1cb58b6de8b02b3f86f4e7394e9690bef0110e32ced8a5631045\n        /* \"C/collateralMargin.sol\":6105:6111  amount */\n      dup7\n        /* \"C/collateralMargin.sol\":6077:6112  Borrowed(msg.sender, token, amount) */\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"C/collateralMargin.sol\":5374:6119  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_139\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_114\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_139:\n        /* \"C/collateralMargin.sol\":5243:6119  function borrowCollateral(address token, uint256 amount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"C/collateralMargin.sol\":7603:7812  function getEffectiveCollateral(address user, address token)... */\n    tag_48:\n        /* \"C/collateralMargin.sol\":7709:7716  uint256 */\n      0x00\n        /* \"C/collateralMargin.sol\":7800:7805  10000 */\n      0x2710\n        /* \"C/collateralMargin.sol\":7773:7790  collateralFactors */\n      0x03\n        /* \"C/collateralMargin.sol\":7773:7797  collateralFactors[token] */\n      0x00\n        /* \"C/collateralMargin.sol\":7791:7796  token */\n      dup5\n        /* \"C/collateralMargin.sol\":7773:7797  collateralFactors[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/collateralMargin.sol\":7739:7757  collateralBalances */\n      0x04\n        /* \"C/collateralMargin.sol\":7739:7763  collateralBalances[user] */\n      0x00\n        /* \"C/collateralMargin.sol\":7758:7762  user */\n      dup7\n        /* \"C/collateralMargin.sol\":7739:7763  collateralBalances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":7739:7770  collateralBalances[user][token] */\n      0x00\n        /* \"C/collateralMargin.sol\":7764:7769  token */\n      dup6\n        /* \"C/collateralMargin.sol\":7739:7770  collateralBalances[user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/collateralMargin.sol\":7739:7797  collateralBalances[user][token] * collateralFactors[token] */\n      tag_146\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_146:\n        /* \"C/collateralMargin.sol\":7739:7805  collateralBalances[user][token] * collateralFactors[token] / 10000 */\n      tag_147\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_147:\n        /* \"C/collateralMargin.sol\":7732:7805  return collateralBalances[user][token] * collateralFactors[token] / 10000 */\n      swap1\n      pop\n        /* \"C/collateralMargin.sol\":7603:7812  function getEffectiveCollateral(address user, address token)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"C/collateralMargin.sol\":2328:2536  function removeAllowedToken(address token) external onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"C/collateralMargin.sol\":2408:2421  allowedTokens */\n      0x02\n        /* \"C/collateralMargin.sol\":2408:2428  allowedTokens[token] */\n      0x00\n        /* \"C/collateralMargin.sol\":2422:2427  token */\n      dup3\n        /* \"C/collateralMargin.sol\":2408:2428  allowedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"C/collateralMargin.sol\":2400:2450  require(allowedTokens[token], \"Token not allowed\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_93\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"C/collateralMargin.sol\":2483:2488  false */\n      0x00\n        /* \"C/collateralMargin.sol\":2460:2473  allowedTokens */\n      0x02\n        /* \"C/collateralMargin.sol\":2460:2480  allowedTokens[token] */\n      0x00\n        /* \"C/collateralMargin.sol\":2474:2479  token */\n      dup4\n        /* \"C/collateralMargin.sol\":2460:2480  allowedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/collateralMargin.sol\":2460:2488  allowedTokens[token] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"C/collateralMargin.sol\":2523:2528  token */\n      dup1\n        /* \"C/collateralMargin.sol\":2503:2529  AllowedTokenRemoved(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbf996b4fd74f0c7159bb017b1db415b0d9a6f13129f46d0b93309d170b78df31\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/collateralMargin.sol\":2328:2536  function removeAllowedToken(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"C/collateralMargin.sol\":3242:3683  function depositCollateral(address token, uint256 amount)... */\n    tag_59:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_155\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_89\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_155:\n        /* \"C/collateralMargin.sol\":3363:3368  token */\n      dup2\n        /* \"C/collateralMargin.sol\":1692:1705  allowedTokens */\n      0x02\n        /* \"C/collateralMargin.sol\":1692:1712  allowedTokens[token] */\n      0x00\n        /* \"C/collateralMargin.sol\":1706:1711  token */\n      dup3\n        /* \"C/collateralMargin.sol\":1692:1712  allowedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"C/collateralMargin.sol\":1684:1734  require(allowedTokens[token], \"Token not allowed\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_93\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"C/collateralMargin.sol\":3401:3402  0 */\n      0x00\n        /* \"C/collateralMargin.sol\":3392:3398  amount */\n      dup3\n        /* \"C/collateralMargin.sol\":3392:3402  amount > 0 */\n      gt\n        /* \"C/collateralMargin.sol\":3384:3425  require(amount > 0, \"Amount must be > 0\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_97\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"C/collateralMargin.sol\":3493:3558  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_162\n        /* \"C/collateralMargin.sol\":3524:3534  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":3544:3548  this */\n      address\n        /* \"C/collateralMargin.sol\":3551:3557  amount */\n      dup5\n        /* \"C/collateralMargin.sol\":3500:3505  token */\n      dup7\n        /* \"C/collateralMargin.sol\":3493:3523  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_163\n      swap1\n        /* \"C/collateralMargin.sol\":3493:3558  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_162:\n        /* \"C/collateralMargin.sol\":3609:3615  amount */\n      dup2\n        /* \"C/collateralMargin.sol\":3568:3586  collateralBalances */\n      0x04\n        /* \"C/collateralMargin.sol\":3568:3598  collateralBalances[msg.sender] */\n      0x00\n        /* \"C/collateralMargin.sol\":3587:3597  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":3568:3598  collateralBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":3568:3605  collateralBalances[msg.sender][token] */\n      0x00\n        /* \"C/collateralMargin.sol\":3599:3604  token */\n      dup6\n        /* \"C/collateralMargin.sol\":3568:3605  collateralBalances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/collateralMargin.sol\":3568:3615  collateralBalances[msg.sender][token] += amount */\n      dup3\n      dup3\n      sload\n      tag_164\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_164:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/collateralMargin.sol\":3662:3667  token */\n      dup3\n        /* \"C/collateralMargin.sol\":3630:3676  CollateralDeposited(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/collateralMargin.sol\":3650:3660  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":3630:3676  CollateralDeposited(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf1c0dd7e9b98bbff859029005ef89b127af049cd18df1a8d79f0b7e019911e56\n        /* \"C/collateralMargin.sol\":3669:3675  amount */\n      dup5\n        /* \"C/collateralMargin.sol\":3630:3676  CollateralDeposited(msg.sender, token, amount) */\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_166\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_114\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_166:\n        /* \"C/collateralMargin.sol\":3242:3683  function depositCollateral(address token, uint256 amount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"C/collateralMargin.sol\":6300:6882  function repayBorrow(address token, uint256 amount)... */\n    tag_62:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_168\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_89\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_168:\n        /* \"C/collateralMargin.sol\":6415:6420  token */\n      dup2\n        /* \"C/collateralMargin.sol\":1692:1705  allowedTokens */\n      0x02\n        /* \"C/collateralMargin.sol\":1692:1712  allowedTokens[token] */\n      0x00\n        /* \"C/collateralMargin.sol\":1706:1711  token */\n      dup3\n        /* \"C/collateralMargin.sol\":1692:1712  allowedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"C/collateralMargin.sol\":1684:1734  require(allowedTokens[token], \"Token not allowed\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_93\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"C/collateralMargin.sol\":6453:6454  0 */\n      0x00\n        /* \"C/collateralMargin.sol\":6444:6450  amount */\n      dup3\n        /* \"C/collateralMargin.sol\":6444:6454  amount > 0 */\n      gt\n        /* \"C/collateralMargin.sol\":6436:6477  require(amount > 0, \"Amount must be > 0\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_97\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"C/collateralMargin.sol\":6487:6503  uint256 borrowed */\n      0x00\n        /* \"C/collateralMargin.sol\":6506:6520  borrowBalances */\n      0x05\n        /* \"C/collateralMargin.sol\":6506:6532  borrowBalances[msg.sender] */\n      0x00\n        /* \"C/collateralMargin.sol\":6521:6531  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":6506:6532  borrowBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":6506:6539  borrowBalances[msg.sender][token] */\n      0x00\n        /* \"C/collateralMargin.sol\":6533:6538  token */\n      dup6\n        /* \"C/collateralMargin.sol\":6506:6539  borrowBalances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/collateralMargin.sol\":6487:6539  uint256 borrowed = borrowBalances[msg.sender][token] */\n      swap1\n      pop\n        /* \"C/collateralMargin.sol\":6569:6575  amount */\n      dup3\n        /* \"C/collateralMargin.sol\":6557:6565  borrowed */\n      dup2\n        /* \"C/collateralMargin.sol\":6557:6575  borrowed >= amount */\n      lt\n      iszero\n        /* \"C/collateralMargin.sol\":6549:6617  require(borrowed >= amount, \"Repay amount exceeds borrowed balance\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"C/collateralMargin.sol\":6675:6681  amount */\n      dup3\n        /* \"C/collateralMargin.sol\":6664:6672  borrowed */\n      dup2\n        /* \"C/collateralMargin.sol\":6664:6681  borrowed - amount */\n      tag_178\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_178:\n        /* \"C/collateralMargin.sol\":6628:6642  borrowBalances */\n      0x05\n        /* \"C/collateralMargin.sol\":6628:6654  borrowBalances[msg.sender] */\n      0x00\n        /* \"C/collateralMargin.sol\":6643:6653  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":6628:6654  borrowBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":6628:6661  borrowBalances[msg.sender][token] */\n      0x00\n        /* \"C/collateralMargin.sol\":6655:6660  token */\n      dup7\n        /* \"C/collateralMargin.sol\":6628:6661  borrowBalances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":6628:6681  borrowBalances[msg.sender][token] = borrowed - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/collateralMargin.sol\":6762:6827  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_179\n        /* \"C/collateralMargin.sol\":6793:6803  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":6813:6817  this */\n      address\n        /* \"C/collateralMargin.sol\":6820:6826  amount */\n      dup6\n        /* \"C/collateralMargin.sol\":6769:6774  token */\n      dup8\n        /* \"C/collateralMargin.sol\":6762:6792  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_163\n      swap1\n        /* \"C/collateralMargin.sol\":6762:6827  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"C/collateralMargin.sol\":6861:6866  token */\n      dup4\n        /* \"C/collateralMargin.sol\":6842:6875  Repaid(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/collateralMargin.sol\":6849:6859  msg.sender */\n      caller\n        /* \"C/collateralMargin.sol\":6842:6875  Repaid(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0a3fbbea70e93f2daafa3102f5c9a1b8315e6d7a1e43e4bc020bc1162327470a\n        /* \"C/collateralMargin.sol\":6868:6874  amount */\n      dup6\n        /* \"C/collateralMargin.sol\":6842:6875  Repaid(msg.sender, token, amount) */\n      mload(0x40)\n      tag_180\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"C/collateralMargin.sol\":6426:6882  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_181\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_114\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_181:\n        /* \"C/collateralMargin.sol\":6300:6882  function repayBorrow(address token, uint256 amount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"C/collateralMargin.sol\":7137:7311  function getCollateralBalance(address user, address token)... */\n    tag_65:\n        /* \"C/collateralMargin.sol\":7243:7250  uint256 */\n      0x00\n        /* \"C/collateralMargin.sol\":7273:7291  collateralBalances */\n      0x04\n        /* \"C/collateralMargin.sol\":7273:7297  collateralBalances[user] */\n      0x00\n        /* \"C/collateralMargin.sol\":7292:7296  user */\n      dup5\n        /* \"C/collateralMargin.sol\":7273:7297  collateralBalances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":7273:7304  collateralBalances[user][token] */\n      0x00\n        /* \"C/collateralMargin.sol\":7298:7303  token */\n      dup4\n        /* \"C/collateralMargin.sol\":7273:7304  collateralBalances[user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/collateralMargin.sol\":7266:7304  return collateralBalances[user][token] */\n      swap1\n      pop\n        /* \"C/collateralMargin.sol\":7137:7311  function getCollateralBalance(address user, address token)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"C/collateralMargin.sol\":2758:3025  function setCollateralFactor(address token, uint256 factor) external onlyOwner onlyAllowedToken(token) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"C/collateralMargin.sol\":2854:2859  token */\n      dup2\n        /* \"C/collateralMargin.sol\":1692:1705  allowedTokens */\n      0x02\n        /* \"C/collateralMargin.sol\":1692:1712  allowedTokens[token] */\n      0x00\n        /* \"C/collateralMargin.sol\":1706:1711  token */\n      dup3\n        /* \"C/collateralMargin.sol\":1692:1712  allowedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"C/collateralMargin.sol\":1684:1734  require(allowedTokens[token], \"Token not allowed\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_93\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"C/collateralMargin.sol\":2889:2894  10000 */\n      0x2710\n        /* \"C/collateralMargin.sol\":2879:2885  factor */\n      dup3\n        /* \"C/collateralMargin.sol\":2879:2894  factor <= 10000 */\n      gt\n      iszero\n        /* \"C/collateralMargin.sol\":2871:2922  require(factor <= 10000, \"Factor must be <= 10000\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"C/collateralMargin.sol\":2959:2965  factor */\n      dup2\n        /* \"C/collateralMargin.sol\":2932:2949  collateralFactors */\n      0x03\n        /* \"C/collateralMargin.sol\":2932:2956  collateralFactors[token] */\n      0x00\n        /* \"C/collateralMargin.sol\":2950:2955  token */\n      dup6\n        /* \"C/collateralMargin.sol\":2932:2956  collateralFactors[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":2932:2965  collateralFactors[token] = factor */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/collateralMargin.sol\":3004:3009  token */\n      dup3\n        /* \"C/collateralMargin.sol\":2980:3018  CollateralFactorUpdated(token, factor) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x275d6207ccd4271a12c584febf2bcf32254205dfb4639ce1a9184d2e2609e2d0\n        /* \"C/collateralMargin.sol\":3011:3017  factor */\n      dup4\n        /* \"C/collateralMargin.sol\":2980:3018  CollateralFactorUpdated(token, factor) */\n      mload(0x40)\n      tag_192\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"C/collateralMargin.sol\":2758:3025  function setCollateralFactor(address token, uint256 factor) external onlyOwner onlyAllowedToken(token) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"C/collateralMargin.sol\":8180:8628  function getCollateralMargin(address user, address token)... */\n    tag_72:\n        /* \"C/collateralMargin.sol\":8285:8291  int256 */\n      0x00\n        /* \"C/collateralMargin.sol\":8307:8334  uint256 effectiveCollateral */\n      0x00\n        /* \"C/collateralMargin.sol\":8337:8372  getEffectiveCollateral(user, token) */\n      tag_194\n        /* \"C/collateralMargin.sol\":8360:8364  user */\n      dup5\n        /* \"C/collateralMargin.sol\":8366:8371  token */\n      dup5\n        /* \"C/collateralMargin.sol\":8337:8359  getEffectiveCollateral */\n      tag_48\n        /* \"C/collateralMargin.sol\":8337:8372  getEffectiveCollateral(user, token) */\n      jump\t// in\n    tag_194:\n        /* \"C/collateralMargin.sol\":8307:8372  uint256 effectiveCollateral = getEffectiveCollateral(user, token) */\n      swap1\n      pop\n        /* \"C/collateralMargin.sol\":8382:8398  uint256 borrowed */\n      0x00\n        /* \"C/collateralMargin.sol\":8401:8415  borrowBalances */\n      0x05\n        /* \"C/collateralMargin.sol\":8401:8421  borrowBalances[user] */\n      0x00\n        /* \"C/collateralMargin.sol\":8416:8420  user */\n      dup7\n        /* \"C/collateralMargin.sol\":8401:8421  borrowBalances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/collateralMargin.sol\":8401:8428  borrowBalances[user][token] */\n      0x00\n        /* \"C/collateralMargin.sol\":8422:8427  token */\n      dup6\n        /* \"C/collateralMargin.sol\":8401:8428  borrowBalances[user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/collateralMargin.sol\":8382:8428  uint256 borrowed = borrowBalances[user][token] */\n      swap1\n      pop\n        /* \"C/collateralMargin.sol\":8465:8473  borrowed */\n      dup1\n        /* \"C/collateralMargin.sol\":8442:8461  effectiveCollateral */\n      dup3\n        /* \"C/collateralMargin.sol\":8442:8473  effectiveCollateral >= borrowed */\n      lt\n        /* \"C/collateralMargin.sol\":8438:8622  if (effectiveCollateral >= borrowed) {... */\n      tag_195\n      jumpi\n        /* \"C/collateralMargin.sol\":8525:8533  borrowed */\n      dup1\n        /* \"C/collateralMargin.sol\":8503:8522  effectiveCollateral */\n      dup3\n        /* \"C/collateralMargin.sol\":8503:8533  effectiveCollateral - borrowed */\n      tag_196\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_196:\n        /* \"C/collateralMargin.sol\":8489:8534  return int256(effectiveCollateral - borrowed) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_193)\n        /* \"C/collateralMargin.sol\":8438:8622  if (effectiveCollateral >= borrowed) {... */\n    tag_195:\n        /* \"C/collateralMargin.sol\":8591:8610  effectiveCollateral */\n      dup2\n        /* \"C/collateralMargin.sol\":8580:8588  borrowed */\n      dup2\n        /* \"C/collateralMargin.sol\":8580:8610  borrowed - effectiveCollateral */\n      tag_198\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_198:\n        /* \"C/collateralMargin.sol\":8572:8611  -int256(borrowed - effectiveCollateral) */\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"C/collateralMargin.sol\":8565:8611  return -int256(borrowed - effectiveCollateral) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"C/collateralMargin.sol\":8180:8628  function getCollateralMargin(address user, address token)... */\n    tag_193:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"C/collateralMargin.sol\":469:514  mapping(address => bool) public allowedTokens */\n    tag_77:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"C/collateralMargin.sol\":905:974  mapping(address => mapping(address => uint256)) public borrowBalances */\n    tag_85:\n      mstore(0x20, 0x05)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_213\n      swap3\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_227\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_232)\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_237:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_239:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_240:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_279\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_239\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_241:\n        /* \"#utility.yul\":641:665   */\n      tag_281\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_240\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_282:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_242:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_284\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_241\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_243:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_244:\n        /* \"#utility.yul\":997:1021   */\n      tag_287\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_243\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_288:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_245:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_290\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_244\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_25:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      0x00\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_293\n      tag_237\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1290:1409   */\n    tag_292:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_294\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_242\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_295\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_245\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:2151   */\n    tag_29:\n        /* \"#utility.yul\":1745:1751   */\n      0x00\n        /* \"#utility.yul\":1753:1759   */\n      0x00\n        /* \"#utility.yul\":1802:1804   */\n      0x40\n        /* \"#utility.yul\":1790:1799   */\n      dup4\n        /* \"#utility.yul\":1781:1788   */\n      dup6\n        /* \"#utility.yul\":1777:1800   */\n      sub\n        /* \"#utility.yul\":1773:1805   */\n      slt\n        /* \"#utility.yul\":1770:1889   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":1808:1887   */\n      tag_298\n      tag_237\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":1770:1889   */\n    tag_297:\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1953:2006   */\n      tag_299\n        /* \"#utility.yul\":1998:2005   */\n      dup6\n        /* \"#utility.yul\":1989:1995   */\n      dup3\n        /* \"#utility.yul\":1978:1987   */\n      dup7\n        /* \"#utility.yul\":1974:1996   */\n      add\n        /* \"#utility.yul\":1953:2006   */\n      tag_242\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":1943:2006   */\n      swap3\n      pop\n        /* \"#utility.yul\":1899:2016   */\n      pop\n        /* \"#utility.yul\":2055:2057   */\n      0x20\n        /* \"#utility.yul\":2081:2134   */\n      tag_300\n        /* \"#utility.yul\":2126:2133   */\n      dup6\n        /* \"#utility.yul\":2117:2123   */\n      dup3\n        /* \"#utility.yul\":2106:2115   */\n      dup7\n        /* \"#utility.yul\":2102:2124   */\n      add\n        /* \"#utility.yul\":2081:2134   */\n      tag_242\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":2071:2134   */\n      swap2\n      pop\n        /* \"#utility.yul\":2026:2144   */\n      pop\n        /* \"#utility.yul\":1677:2151   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2157:2275   */\n    tag_246:\n        /* \"#utility.yul\":2244:2268   */\n      tag_302\n        /* \"#utility.yul\":2262:2267   */\n      dup2\n        /* \"#utility.yul\":2244:2268   */\n      tag_243\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2239:2242   */\n      dup3\n        /* \"#utility.yul\":2232:2269   */\n      mstore\n        /* \"#utility.yul\":2157:2275   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2281:2503   */\n    tag_32:\n        /* \"#utility.yul\":2374:2378   */\n      0x00\n        /* \"#utility.yul\":2412:2414   */\n      0x20\n        /* \"#utility.yul\":2401:2410   */\n      dup3\n        /* \"#utility.yul\":2397:2415   */\n      add\n        /* \"#utility.yul\":2389:2415   */\n      swap1\n      pop\n        /* \"#utility.yul\":2425:2496   */\n      tag_304\n        /* \"#utility.yul\":2493:2494   */\n      0x00\n        /* \"#utility.yul\":2482:2491   */\n      dup4\n        /* \"#utility.yul\":2478:2495   */\n      add\n        /* \"#utility.yul\":2469:2475   */\n      dup5\n        /* \"#utility.yul\":2425:2496   */\n      tag_246\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":2281:2503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2509:2838   */\n    tag_35:\n        /* \"#utility.yul\":2568:2574   */\n      0x00\n        /* \"#utility.yul\":2617:2619   */\n      0x20\n        /* \"#utility.yul\":2605:2614   */\n      dup3\n        /* \"#utility.yul\":2596:2603   */\n      dup5\n        /* \"#utility.yul\":2592:2615   */\n      sub\n        /* \"#utility.yul\":2588:2620   */\n      slt\n        /* \"#utility.yul\":2585:2704   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":2623:2702   */\n      tag_307\n      tag_237\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2585:2704   */\n    tag_306:\n        /* \"#utility.yul\":2743:2744   */\n      0x00\n        /* \"#utility.yul\":2768:2821   */\n      tag_308\n        /* \"#utility.yul\":2813:2820   */\n      dup5\n        /* \"#utility.yul\":2804:2810   */\n      dup3\n        /* \"#utility.yul\":2793:2802   */\n      dup6\n        /* \"#utility.yul\":2789:2811   */\n      add\n        /* \"#utility.yul\":2768:2821   */\n      tag_242\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2758:2821   */\n      swap2\n      pop\n        /* \"#utility.yul\":2714:2831   */\n      pop\n        /* \"#utility.yul\":2509:2838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2844:2962   */\n    tag_247:\n        /* \"#utility.yul\":2931:2955   */\n      tag_310\n        /* \"#utility.yul\":2949:2954   */\n      dup2\n        /* \"#utility.yul\":2931:2955   */\n      tag_240\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2926:2929   */\n      dup3\n        /* \"#utility.yul\":2919:2956   */\n      mstore\n        /* \"#utility.yul\":2844:2962   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2968:3190   */\n    tag_53:\n        /* \"#utility.yul\":3061:3065   */\n      0x00\n        /* \"#utility.yul\":3099:3101   */\n      0x20\n        /* \"#utility.yul\":3088:3097   */\n      dup3\n        /* \"#utility.yul\":3084:3102   */\n      add\n        /* \"#utility.yul\":3076:3102   */\n      swap1\n      pop\n        /* \"#utility.yul\":3112:3183   */\n      tag_312\n        /* \"#utility.yul\":3180:3181   */\n      0x00\n        /* \"#utility.yul\":3169:3178   */\n      dup4\n        /* \"#utility.yul\":3165:3182   */\n      add\n        /* \"#utility.yul\":3156:3162   */\n      dup5\n        /* \"#utility.yul\":3112:3183   */\n      tag_247\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":2968:3190   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3196:3272   */\n    tag_248:\n        /* \"#utility.yul\":3232:3239   */\n      0x00\n        /* \"#utility.yul\":3261:3266   */\n      dup2\n        /* \"#utility.yul\":3250:3266   */\n      swap1\n      pop\n        /* \"#utility.yul\":3196:3272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3278:3393   */\n    tag_249:\n        /* \"#utility.yul\":3363:3386   */\n      tag_315\n        /* \"#utility.yul\":3380:3385   */\n      dup2\n        /* \"#utility.yul\":3363:3386   */\n      tag_248\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":3358:3361   */\n      dup3\n        /* \"#utility.yul\":3351:3387   */\n      mstore\n        /* \"#utility.yul\":3278:3393   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3399:3617   */\n    tag_74:\n        /* \"#utility.yul\":3490:3494   */\n      0x00\n        /* \"#utility.yul\":3528:3530   */\n      0x20\n        /* \"#utility.yul\":3517:3526   */\n      dup3\n        /* \"#utility.yul\":3513:3531   */\n      add\n        /* \"#utility.yul\":3505:3531   */\n      swap1\n      pop\n        /* \"#utility.yul\":3541:3610   */\n      tag_317\n        /* \"#utility.yul\":3607:3608   */\n      0x00\n        /* \"#utility.yul\":3596:3605   */\n      dup4\n        /* \"#utility.yul\":3592:3609   */\n      add\n        /* \"#utility.yul\":3583:3589   */\n      dup5\n        /* \"#utility.yul\":3541:3610   */\n      tag_249\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3399:3617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3623:3713   */\n    tag_250:\n        /* \"#utility.yul\":3657:3664   */\n      0x00\n        /* \"#utility.yul\":3700:3705   */\n      dup2\n        /* \"#utility.yul\":3693:3706   */\n      iszero\n        /* \"#utility.yul\":3686:3707   */\n      iszero\n        /* \"#utility.yul\":3675:3707   */\n      swap1\n      pop\n        /* \"#utility.yul\":3623:3713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3719:3828   */\n    tag_251:\n        /* \"#utility.yul\":3800:3821   */\n      tag_320\n        /* \"#utility.yul\":3815:3820   */\n      dup2\n        /* \"#utility.yul\":3800:3821   */\n      tag_250\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":3795:3798   */\n      dup3\n        /* \"#utility.yul\":3788:3822   */\n      mstore\n        /* \"#utility.yul\":3719:3828   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3834:4044   */\n    tag_79:\n        /* \"#utility.yul\":3921:3925   */\n      0x00\n        /* \"#utility.yul\":3959:3961   */\n      0x20\n        /* \"#utility.yul\":3948:3957   */\n      dup3\n        /* \"#utility.yul\":3944:3962   */\n      add\n        /* \"#utility.yul\":3936:3962   */\n      swap1\n      pop\n        /* \"#utility.yul\":3972:4037   */\n      tag_322\n        /* \"#utility.yul\":4034:4035   */\n      0x00\n        /* \"#utility.yul\":4023:4032   */\n      dup4\n        /* \"#utility.yul\":4019:4036   */\n      add\n        /* \"#utility.yul\":4010:4016   */\n      dup5\n        /* \"#utility.yul\":3972:4037   */\n      tag_251\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3834:4044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4050:4219   */\n    tag_252:\n        /* \"#utility.yul\":4134:4145   */\n      0x00\n        /* \"#utility.yul\":4168:4174   */\n      dup3\n        /* \"#utility.yul\":4163:4166   */\n      dup3\n        /* \"#utility.yul\":4156:4175   */\n      mstore\n        /* \"#utility.yul\":4208:4212   */\n      0x20\n        /* \"#utility.yul\":4203:4206   */\n      dup3\n        /* \"#utility.yul\":4199:4213   */\n      add\n        /* \"#utility.yul\":4184:4213   */\n      swap1\n      pop\n        /* \"#utility.yul\":4050:4219   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4225:4392   */\n    tag_253:\n        /* \"#utility.yul\":4365:4384   */\n      0x546f6b656e206e6f7420616c6c6f776564000000000000000000000000000000\n        /* \"#utility.yul\":4361:4362   */\n      0x00\n        /* \"#utility.yul\":4353:4359   */\n      dup3\n        /* \"#utility.yul\":4349:4363   */\n      add\n        /* \"#utility.yul\":4342:4385   */\n      mstore\n        /* \"#utility.yul\":4225:4392   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4398:4764   */\n    tag_254:\n        /* \"#utility.yul\":4540:4543   */\n      0x00\n        /* \"#utility.yul\":4561:4628   */\n      tag_326\n        /* \"#utility.yul\":4625:4627   */\n      0x11\n        /* \"#utility.yul\":4620:4623   */\n      dup4\n        /* \"#utility.yul\":4561:4628   */\n      tag_252\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":4554:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4637:4730   */\n      tag_327\n        /* \"#utility.yul\":4726:4729   */\n      dup3\n        /* \"#utility.yul\":4637:4730   */\n      tag_253\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":4755:4757   */\n      0x20\n        /* \"#utility.yul\":4750:4753   */\n      dup3\n        /* \"#utility.yul\":4746:4758   */\n      add\n        /* \"#utility.yul\":4739:4758   */\n      swap1\n      pop\n        /* \"#utility.yul\":4398:4764   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4770:5189   */\n    tag_93:\n        /* \"#utility.yul\":4936:4940   */\n      0x00\n        /* \"#utility.yul\":4974:4976   */\n      0x20\n        /* \"#utility.yul\":4963:4972   */\n      dup3\n        /* \"#utility.yul\":4959:4977   */\n      add\n        /* \"#utility.yul\":4951:4977   */\n      swap1\n      pop\n        /* \"#utility.yul\":5023:5032   */\n      dup2\n        /* \"#utility.yul\":5017:5021   */\n      dup2\n        /* \"#utility.yul\":5013:5033   */\n      sub\n        /* \"#utility.yul\":5009:5010   */\n      0x00\n        /* \"#utility.yul\":4998:5007   */\n      dup4\n        /* \"#utility.yul\":4994:5011   */\n      add\n        /* \"#utility.yul\":4987:5034   */\n      mstore\n        /* \"#utility.yul\":5051:5182   */\n      tag_329\n        /* \"#utility.yul\":5177:5181   */\n      dup2\n        /* \"#utility.yul\":5051:5182   */\n      tag_254\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5043:5182   */\n      swap1\n      pop\n        /* \"#utility.yul\":4770:5189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5195:5363   */\n    tag_255:\n        /* \"#utility.yul\":5335:5355   */\n      0x416d6f756e74206d757374206265203e20300000000000000000000000000000\n        /* \"#utility.yul\":5331:5332   */\n      0x00\n        /* \"#utility.yul\":5323:5329   */\n      dup3\n        /* \"#utility.yul\":5319:5333   */\n      add\n        /* \"#utility.yul\":5312:5356   */\n      mstore\n        /* \"#utility.yul\":5195:5363   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5369:5735   */\n    tag_256:\n        /* \"#utility.yul\":5511:5514   */\n      0x00\n        /* \"#utility.yul\":5532:5599   */\n      tag_332\n        /* \"#utility.yul\":5596:5598   */\n      0x12\n        /* \"#utility.yul\":5591:5594   */\n      dup4\n        /* \"#utility.yul\":5532:5599   */\n      tag_252\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":5525:5599   */\n      swap2\n      pop\n        /* \"#utility.yul\":5608:5701   */\n      tag_333\n        /* \"#utility.yul\":5697:5700   */\n      dup3\n        /* \"#utility.yul\":5608:5701   */\n      tag_255\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":5726:5728   */\n      0x20\n        /* \"#utility.yul\":5721:5724   */\n      dup3\n        /* \"#utility.yul\":5717:5729   */\n      add\n        /* \"#utility.yul\":5710:5729   */\n      swap1\n      pop\n        /* \"#utility.yul\":5369:5735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5741:6160   */\n    tag_97:\n        /* \"#utility.yul\":5907:5911   */\n      0x00\n        /* \"#utility.yul\":5945:5947   */\n      0x20\n        /* \"#utility.yul\":5934:5943   */\n      dup3\n        /* \"#utility.yul\":5930:5948   */\n      add\n        /* \"#utility.yul\":5922:5948   */\n      swap1\n      pop\n        /* \"#utility.yul\":5994:6003   */\n      dup2\n        /* \"#utility.yul\":5988:5992   */\n      dup2\n        /* \"#utility.yul\":5984:6004   */\n      sub\n        /* \"#utility.yul\":5980:5981   */\n      0x00\n        /* \"#utility.yul\":5969:5978   */\n      dup4\n        /* \"#utility.yul\":5965:5982   */\n      add\n        /* \"#utility.yul\":5958:6005   */\n      mstore\n        /* \"#utility.yul\":6022:6153   */\n      tag_335\n        /* \"#utility.yul\":6148:6152   */\n      dup2\n        /* \"#utility.yul\":6022:6153   */\n      tag_256\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6014:6153   */\n      swap1\n      pop\n        /* \"#utility.yul\":5741:6160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6166:6339   */\n    tag_257:\n        /* \"#utility.yul\":6306:6331   */\n      0x496e73756666696369656e7420636f6c6c61746572616c000000000000000000\n        /* \"#utility.yul\":6302:6303   */\n      0x00\n        /* \"#utility.yul\":6294:6300   */\n      dup3\n        /* \"#utility.yul\":6290:6304   */\n      add\n        /* \"#utility.yul\":6283:6332   */\n      mstore\n        /* \"#utility.yul\":6166:6339   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6345:6711   */\n    tag_258:\n        /* \"#utility.yul\":6487:6490   */\n      0x00\n        /* \"#utility.yul\":6508:6575   */\n      tag_338\n        /* \"#utility.yul\":6572:6574   */\n      0x17\n        /* \"#utility.yul\":6567:6570   */\n      dup4\n        /* \"#utility.yul\":6508:6575   */\n      tag_252\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":6501:6575   */\n      swap2\n      pop\n        /* \"#utility.yul\":6584:6677   */\n      tag_339\n        /* \"#utility.yul\":6673:6676   */\n      dup3\n        /* \"#utility.yul\":6584:6677   */\n      tag_257\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6702:6704   */\n      0x20\n        /* \"#utility.yul\":6697:6700   */\n      dup3\n        /* \"#utility.yul\":6693:6705   */\n      add\n        /* \"#utility.yul\":6686:6705   */\n      swap1\n      pop\n        /* \"#utility.yul\":6345:6711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6717:7136   */\n    tag_100:\n        /* \"#utility.yul\":6883:6887   */\n      0x00\n        /* \"#utility.yul\":6921:6923   */\n      0x20\n        /* \"#utility.yul\":6910:6919   */\n      dup3\n        /* \"#utility.yul\":6906:6924   */\n      add\n        /* \"#utility.yul\":6898:6924   */\n      swap1\n      pop\n        /* \"#utility.yul\":6970:6979   */\n      dup2\n        /* \"#utility.yul\":6964:6968   */\n      dup2\n        /* \"#utility.yul\":6960:6980   */\n      sub\n        /* \"#utility.yul\":6956:6957   */\n      0x00\n        /* \"#utility.yul\":6945:6954   */\n      dup4\n        /* \"#utility.yul\":6941:6958   */\n      add\n        /* \"#utility.yul\":6934:6981   */\n      mstore\n        /* \"#utility.yul\":6998:7129   */\n      tag_341\n        /* \"#utility.yul\":7124:7128   */\n      dup2\n        /* \"#utility.yul\":6998:7129   */\n      tag_258\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6990:7129   */\n      swap1\n      pop\n        /* \"#utility.yul\":6717:7136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7142:7322   */\n    tag_259:\n        /* \"#utility.yul\":7190:7267   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7187:7188   */\n      0x00\n        /* \"#utility.yul\":7180:7268   */\n      mstore\n        /* \"#utility.yul\":7287:7291   */\n      0x11\n        /* \"#utility.yul\":7284:7285   */\n      0x04\n        /* \"#utility.yul\":7277:7292   */\n      mstore\n        /* \"#utility.yul\":7311:7315   */\n      0x24\n        /* \"#utility.yul\":7308:7309   */\n      0x00\n        /* \"#utility.yul\":7301:7316   */\n      revert\n        /* \"#utility.yul\":7328:7522   */\n    tag_102:\n        /* \"#utility.yul\":7368:7372   */\n      0x00\n        /* \"#utility.yul\":7388:7408   */\n      tag_344\n        /* \"#utility.yul\":7406:7407   */\n      dup3\n        /* \"#utility.yul\":7388:7408   */\n      tag_243\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7383:7408   */\n      swap2\n      pop\n        /* \"#utility.yul\":7422:7442   */\n      tag_345\n        /* \"#utility.yul\":7440:7441   */\n      dup4\n        /* \"#utility.yul\":7422:7442   */\n      tag_243\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":7417:7442   */\n      swap3\n      pop\n        /* \"#utility.yul\":7466:7467   */\n      dup3\n        /* \"#utility.yul\":7463:7464   */\n      dup3\n        /* \"#utility.yul\":7459:7468   */\n      sub\n        /* \"#utility.yul\":7451:7468   */\n      swap1\n      pop\n        /* \"#utility.yul\":7490:7491   */\n      dup2\n        /* \"#utility.yul\":7484:7488   */\n      dup2\n        /* \"#utility.yul\":7481:7492   */\n      gt\n        /* \"#utility.yul\":7478:7515   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":7495:7513   */\n      tag_347\n      tag_259\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":7478:7515   */\n    tag_346:\n        /* \"#utility.yul\":7328:7522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7528:7938   */\n    tag_104:\n        /* \"#utility.yul\":7568:7575   */\n      0x00\n        /* \"#utility.yul\":7591:7611   */\n      tag_349\n        /* \"#utility.yul\":7609:7610   */\n      dup3\n        /* \"#utility.yul\":7591:7611   */\n      tag_243\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":7586:7611   */\n      swap2\n      pop\n        /* \"#utility.yul\":7625:7645   */\n      tag_350\n        /* \"#utility.yul\":7643:7644   */\n      dup4\n        /* \"#utility.yul\":7625:7645   */\n      tag_243\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7620:7645   */\n      swap3\n      pop\n        /* \"#utility.yul\":7680:7681   */\n      dup3\n        /* \"#utility.yul\":7677:7678   */\n      dup3\n        /* \"#utility.yul\":7673:7682   */\n      mul\n        /* \"#utility.yul\":7702:7732   */\n      tag_351\n        /* \"#utility.yul\":7720:7731   */\n      dup2\n        /* \"#utility.yul\":7702:7732   */\n      tag_243\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7691:7732   */\n      swap2\n      pop\n        /* \"#utility.yul\":7881:7882   */\n      dup3\n        /* \"#utility.yul\":7872:7879   */\n      dup3\n        /* \"#utility.yul\":7868:7883   */\n      div\n        /* \"#utility.yul\":7865:7866   */\n      dup5\n        /* \"#utility.yul\":7862:7884   */\n      eq\n        /* \"#utility.yul\":7842:7843   */\n      dup4\n        /* \"#utility.yul\":7835:7844   */\n      iszero\n        /* \"#utility.yul\":7815:7898   */\n      or\n        /* \"#utility.yul\":7792:7931   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":7911:7929   */\n      tag_353\n      tag_259\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":7792:7931   */\n    tag_352:\n        /* \"#utility.yul\":7576:7938   */\n      pop\n        /* \"#utility.yul\":7528:7938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7944:8124   */\n    tag_260:\n        /* \"#utility.yul\":7992:8069   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7989:7990   */\n      0x00\n        /* \"#utility.yul\":7982:8070   */\n      mstore\n        /* \"#utility.yul\":8089:8093   */\n      0x12\n        /* \"#utility.yul\":8086:8087   */\n      0x04\n        /* \"#utility.yul\":8079:8094   */\n      mstore\n        /* \"#utility.yul\":8113:8117   */\n      0x24\n        /* \"#utility.yul\":8110:8111   */\n      0x00\n        /* \"#utility.yul\":8103:8118   */\n      revert\n        /* \"#utility.yul\":8130:8315   */\n    tag_106:\n        /* \"#utility.yul\":8170:8171   */\n      0x00\n        /* \"#utility.yul\":8187:8207   */\n      tag_356\n        /* \"#utility.yul\":8205:8206   */\n      dup3\n        /* \"#utility.yul\":8187:8207   */\n      tag_243\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":8182:8207   */\n      swap2\n      pop\n        /* \"#utility.yul\":8221:8241   */\n      tag_357\n        /* \"#utility.yul\":8239:8240   */\n      dup4\n        /* \"#utility.yul\":8221:8241   */\n      tag_243\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":8216:8241   */\n      swap3\n      pop\n        /* \"#utility.yul\":8260:8261   */\n      dup3\n        /* \"#utility.yul\":8250:8285   */\n      tag_358\n      jumpi\n        /* \"#utility.yul\":8265:8283   */\n      tag_359\n      tag_260\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8250:8285   */\n    tag_358:\n        /* \"#utility.yul\":8307:8308   */\n      dup3\n        /* \"#utility.yul\":8304:8305   */\n      dup3\n        /* \"#utility.yul\":8300:8309   */\n      div\n        /* \"#utility.yul\":8295:8309   */\n      swap1\n      pop\n        /* \"#utility.yul\":8130:8315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8321:8552   */\n    tag_261:\n        /* \"#utility.yul\":8461:8495   */\n      0x5769746864726177616c20776f756c6420756e646572636f6c6c61746572616c\n        /* \"#utility.yul\":8457:8458   */\n      0x00\n        /* \"#utility.yul\":8449:8455   */\n      dup3\n        /* \"#utility.yul\":8445:8459   */\n      add\n        /* \"#utility.yul\":8438:8496   */\n      mstore\n        /* \"#utility.yul\":8530:8544   */\n      0x697a6520706f736974696f6e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":8525:8527   */\n      0x20\n        /* \"#utility.yul\":8517:8523   */\n      dup3\n        /* \"#utility.yul\":8513:8528   */\n      add\n        /* \"#utility.yul\":8506:8545   */\n      mstore\n        /* \"#utility.yul\":8321:8552   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8558:8924   */\n    tag_262:\n        /* \"#utility.yul\":8700:8703   */\n      0x00\n        /* \"#utility.yul\":8721:8788   */\n      tag_362\n        /* \"#utility.yul\":8785:8787   */\n      0x2c\n        /* \"#utility.yul\":8780:8783   */\n      dup4\n        /* \"#utility.yul\":8721:8788   */\n      tag_252\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":8714:8788   */\n      swap2\n      pop\n        /* \"#utility.yul\":8797:8890   */\n      tag_363\n        /* \"#utility.yul\":8886:8889   */\n      dup3\n        /* \"#utility.yul\":8797:8890   */\n      tag_261\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":8915:8917   */\n      0x40\n        /* \"#utility.yul\":8910:8913   */\n      dup3\n        /* \"#utility.yul\":8906:8918   */\n      add\n        /* \"#utility.yul\":8899:8918   */\n      swap1\n      pop\n        /* \"#utility.yul\":8558:8924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8930:9349   */\n    tag_109:\n        /* \"#utility.yul\":9096:9100   */\n      0x00\n        /* \"#utility.yul\":9134:9136   */\n      0x20\n        /* \"#utility.yul\":9123:9132   */\n      dup3\n        /* \"#utility.yul\":9119:9137   */\n      add\n        /* \"#utility.yul\":9111:9137   */\n      swap1\n      pop\n        /* \"#utility.yul\":9183:9192   */\n      dup2\n        /* \"#utility.yul\":9177:9181   */\n      dup2\n        /* \"#utility.yul\":9173:9193   */\n      sub\n        /* \"#utility.yul\":9169:9170   */\n      0x00\n        /* \"#utility.yul\":9158:9167   */\n      dup4\n        /* \"#utility.yul\":9154:9171   */\n      add\n        /* \"#utility.yul\":9147:9194   */\n      mstore\n        /* \"#utility.yul\":9211:9342   */\n      tag_365\n        /* \"#utility.yul\":9337:9341   */\n      dup2\n        /* \"#utility.yul\":9211:9342   */\n      tag_262\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":9203:9342   */\n      swap1\n      pop\n        /* \"#utility.yul\":8930:9349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9355:9526   */\n    tag_263:\n        /* \"#utility.yul\":9495:9518   */\n      0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n        /* \"#utility.yul\":9491:9492   */\n      0x00\n        /* \"#utility.yul\":9483:9489   */\n      dup3\n        /* \"#utility.yul\":9479:9493   */\n      add\n        /* \"#utility.yul\":9472:9519   */\n      mstore\n        /* \"#utility.yul\":9355:9526   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9532:9898   */\n    tag_264:\n        /* \"#utility.yul\":9674:9677   */\n      0x00\n        /* \"#utility.yul\":9695:9762   */\n      tag_368\n        /* \"#utility.yul\":9759:9761   */\n      0x15\n        /* \"#utility.yul\":9754:9757   */\n      dup4\n        /* \"#utility.yul\":9695:9762   */\n      tag_252\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":9688:9762   */\n      swap2\n      pop\n        /* \"#utility.yul\":9771:9864   */\n      tag_369\n        /* \"#utility.yul\":9860:9863   */\n      dup3\n        /* \"#utility.yul\":9771:9864   */\n      tag_263\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":9889:9891   */\n      0x20\n        /* \"#utility.yul\":9884:9887   */\n      dup3\n        /* \"#utility.yul\":9880:9892   */\n      add\n        /* \"#utility.yul\":9873:9892   */\n      swap1\n      pop\n        /* \"#utility.yul\":9532:9898   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9904:10323   */\n    tag_121:\n        /* \"#utility.yul\":10070:10074   */\n      0x00\n        /* \"#utility.yul\":10108:10110   */\n      0x20\n        /* \"#utility.yul\":10097:10106   */\n      dup3\n        /* \"#utility.yul\":10093:10111   */\n      add\n        /* \"#utility.yul\":10085:10111   */\n      swap1\n      pop\n        /* \"#utility.yul\":10157:10166   */\n      dup2\n        /* \"#utility.yul\":10151:10155   */\n      dup2\n        /* \"#utility.yul\":10147:10167   */\n      sub\n        /* \"#utility.yul\":10143:10144   */\n      0x00\n        /* \"#utility.yul\":10132:10141   */\n      dup4\n        /* \"#utility.yul\":10128:10145   */\n      add\n        /* \"#utility.yul\":10121:10168   */\n      mstore\n        /* \"#utility.yul\":10185:10316   */\n      tag_371\n        /* \"#utility.yul\":10311:10315   */\n      dup2\n        /* \"#utility.yul\":10185:10316   */\n      tag_264\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10177:10316   */\n      swap1\n      pop\n        /* \"#utility.yul\":9904:10323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10329:10520   */\n    tag_133:\n        /* \"#utility.yul\":10369:10372   */\n      0x00\n        /* \"#utility.yul\":10388:10408   */\n      tag_373\n        /* \"#utility.yul\":10406:10407   */\n      dup3\n        /* \"#utility.yul\":10388:10408   */\n      tag_243\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":10383:10408   */\n      swap2\n      pop\n        /* \"#utility.yul\":10422:10442   */\n      tag_374\n        /* \"#utility.yul\":10440:10441   */\n      dup4\n        /* \"#utility.yul\":10422:10442   */\n      tag_243\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":10417:10442   */\n      swap3\n      pop\n        /* \"#utility.yul\":10465:10466   */\n      dup3\n        /* \"#utility.yul\":10462:10463   */\n      dup3\n        /* \"#utility.yul\":10458:10467   */\n      add\n        /* \"#utility.yul\":10451:10467   */\n      swap1\n      pop\n        /* \"#utility.yul\":10486:10489   */\n      dup1\n        /* \"#utility.yul\":10483:10484   */\n      dup3\n        /* \"#utility.yul\":10480:10490   */\n      gt\n        /* \"#utility.yul\":10477:10513   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":10493:10511   */\n      tag_376\n      tag_259\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":10477:10513   */\n    tag_375:\n        /* \"#utility.yul\":10329:10520   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10526:10747   */\n    tag_265:\n        /* \"#utility.yul\":10666:10700   */\n      0x496e73756666696369656e7420636f6c6c61746572616c20666f7220626f7272\n        /* \"#utility.yul\":10662:10663   */\n      0x00\n        /* \"#utility.yul\":10654:10660   */\n      dup3\n        /* \"#utility.yul\":10650:10664   */\n      add\n        /* \"#utility.yul\":10643:10701   */\n      mstore\n        /* \"#utility.yul\":10735:10739   */\n      0x6f77000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10730:10732   */\n      0x20\n        /* \"#utility.yul\":10722:10728   */\n      dup3\n        /* \"#utility.yul\":10718:10733   */\n      add\n        /* \"#utility.yul\":10711:10740   */\n      mstore\n        /* \"#utility.yul\":10526:10747   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10753:11119   */\n    tag_266:\n        /* \"#utility.yul\":10895:10898   */\n      0x00\n        /* \"#utility.yul\":10916:10983   */\n      tag_379\n        /* \"#utility.yul\":10980:10982   */\n      0x22\n        /* \"#utility.yul\":10975:10978   */\n      dup4\n        /* \"#utility.yul\":10916:10983   */\n      tag_252\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":10909:10983   */\n      swap2\n      pop\n        /* \"#utility.yul\":10992:11085   */\n      tag_380\n        /* \"#utility.yul\":11081:11084   */\n      dup3\n        /* \"#utility.yul\":10992:11085   */\n      tag_265\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":11110:11112   */\n      0x40\n        /* \"#utility.yul\":11105:11108   */\n      dup3\n        /* \"#utility.yul\":11101:11113   */\n      add\n        /* \"#utility.yul\":11094:11113   */\n      swap1\n      pop\n        /* \"#utility.yul\":10753:11119   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11125:11544   */\n    tag_136:\n        /* \"#utility.yul\":11291:11295   */\n      0x00\n        /* \"#utility.yul\":11329:11331   */\n      0x20\n        /* \"#utility.yul\":11318:11327   */\n      dup3\n        /* \"#utility.yul\":11314:11332   */\n      add\n        /* \"#utility.yul\":11306:11332   */\n      swap1\n      pop\n        /* \"#utility.yul\":11378:11387   */\n      dup2\n        /* \"#utility.yul\":11372:11376   */\n      dup2\n        /* \"#utility.yul\":11368:11388   */\n      sub\n        /* \"#utility.yul\":11364:11365   */\n      0x00\n        /* \"#utility.yul\":11353:11362   */\n      dup4\n        /* \"#utility.yul\":11349:11366   */\n      add\n        /* \"#utility.yul\":11342:11389   */\n      mstore\n        /* \"#utility.yul\":11406:11537   */\n      tag_382\n        /* \"#utility.yul\":11532:11536   */\n      dup2\n        /* \"#utility.yul\":11406:11537   */\n      tag_266\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11398:11537   */\n      swap1\n      pop\n        /* \"#utility.yul\":11125:11544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11550:11774   */\n    tag_267:\n        /* \"#utility.yul\":11690:11724   */\n      0x526570617920616d6f756e74206578636565647320626f72726f776564206261\n        /* \"#utility.yul\":11686:11687   */\n      0x00\n        /* \"#utility.yul\":11678:11684   */\n      dup3\n        /* \"#utility.yul\":11674:11688   */\n      add\n        /* \"#utility.yul\":11667:11725   */\n      mstore\n        /* \"#utility.yul\":11759:11766   */\n      0x6c616e6365000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11754:11756   */\n      0x20\n        /* \"#utility.yul\":11746:11752   */\n      dup3\n        /* \"#utility.yul\":11742:11757   */\n      add\n        /* \"#utility.yul\":11735:11767   */\n      mstore\n        /* \"#utility.yul\":11550:11774   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11780:12146   */\n    tag_268:\n        /* \"#utility.yul\":11922:11925   */\n      0x00\n        /* \"#utility.yul\":11943:12010   */\n      tag_385\n        /* \"#utility.yul\":12007:12009   */\n      0x25\n        /* \"#utility.yul\":12002:12005   */\n      dup4\n        /* \"#utility.yul\":11943:12010   */\n      tag_252\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11936:12010   */\n      swap2\n      pop\n        /* \"#utility.yul\":12019:12112   */\n      tag_386\n        /* \"#utility.yul\":12108:12111   */\n      dup3\n        /* \"#utility.yul\":12019:12112   */\n      tag_267\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":12137:12139   */\n      0x40\n        /* \"#utility.yul\":12132:12135   */\n      dup3\n        /* \"#utility.yul\":12128:12140   */\n      add\n        /* \"#utility.yul\":12121:12140   */\n      swap1\n      pop\n        /* \"#utility.yul\":11780:12146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12152:12571   */\n    tag_177:\n        /* \"#utility.yul\":12318:12322   */\n      0x00\n        /* \"#utility.yul\":12356:12358   */\n      0x20\n        /* \"#utility.yul\":12345:12354   */\n      dup3\n        /* \"#utility.yul\":12341:12359   */\n      add\n        /* \"#utility.yul\":12333:12359   */\n      swap1\n      pop\n        /* \"#utility.yul\":12405:12414   */\n      dup2\n        /* \"#utility.yul\":12399:12403   */\n      dup2\n        /* \"#utility.yul\":12395:12415   */\n      sub\n        /* \"#utility.yul\":12391:12392   */\n      0x00\n        /* \"#utility.yul\":12380:12389   */\n      dup4\n        /* \"#utility.yul\":12376:12393   */\n      add\n        /* \"#utility.yul\":12369:12416   */\n      mstore\n        /* \"#utility.yul\":12433:12564   */\n      tag_388\n        /* \"#utility.yul\":12559:12563   */\n      dup2\n        /* \"#utility.yul\":12433:12564   */\n      tag_268\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":12425:12564   */\n      swap1\n      pop\n        /* \"#utility.yul\":12152:12571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12577:12750   */\n    tag_269:\n        /* \"#utility.yul\":12717:12742   */\n      0x466163746f72206d757374206265203c3d203130303030000000000000000000\n        /* \"#utility.yul\":12713:12714   */\n      0x00\n        /* \"#utility.yul\":12705:12711   */\n      dup3\n        /* \"#utility.yul\":12701:12715   */\n      add\n        /* \"#utility.yul\":12694:12743   */\n      mstore\n        /* \"#utility.yul\":12577:12750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12756:13122   */\n    tag_270:\n        /* \"#utility.yul\":12898:12901   */\n      0x00\n        /* \"#utility.yul\":12919:12986   */\n      tag_391\n        /* \"#utility.yul\":12983:12985   */\n      0x17\n        /* \"#utility.yul\":12978:12981   */\n      dup4\n        /* \"#utility.yul\":12919:12986   */\n      tag_252\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":12912:12986   */\n      swap2\n      pop\n        /* \"#utility.yul\":12995:13088   */\n      tag_392\n        /* \"#utility.yul\":13084:13087   */\n      dup3\n        /* \"#utility.yul\":12995:13088   */\n      tag_269\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":13113:13115   */\n      0x20\n        /* \"#utility.yul\":13108:13111   */\n      dup3\n        /* \"#utility.yul\":13104:13116   */\n      add\n        /* \"#utility.yul\":13097:13116   */\n      swap1\n      pop\n        /* \"#utility.yul\":12756:13122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13128:13547   */\n    tag_191:\n        /* \"#utility.yul\":13294:13298   */\n      0x00\n        /* \"#utility.yul\":13332:13334   */\n      0x20\n        /* \"#utility.yul\":13321:13330   */\n      dup3\n        /* \"#utility.yul\":13317:13335   */\n      add\n        /* \"#utility.yul\":13309:13335   */\n      swap1\n      pop\n        /* \"#utility.yul\":13381:13390   */\n      dup2\n        /* \"#utility.yul\":13375:13379   */\n      dup2\n        /* \"#utility.yul\":13371:13391   */\n      sub\n        /* \"#utility.yul\":13367:13368   */\n      0x00\n        /* \"#utility.yul\":13356:13365   */\n      dup4\n        /* \"#utility.yul\":13352:13369   */\n      add\n        /* \"#utility.yul\":13345:13392   */\n      mstore\n        /* \"#utility.yul\":13409:13540   */\n      tag_394\n        /* \"#utility.yul\":13535:13539   */\n      dup2\n        /* \"#utility.yul\":13409:13540   */\n      tag_270\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":13401:13540   */\n      swap1\n      pop\n        /* \"#utility.yul\":13128:13547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13553:13781   */\n    tag_200:\n        /* \"#utility.yul\":13588:13591   */\n      0x00\n        /* \"#utility.yul\":13611:13634   */\n      tag_396\n        /* \"#utility.yul\":13628:13633   */\n      dup3\n        /* \"#utility.yul\":13611:13634   */\n      tag_248\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":13602:13634   */\n      swap2\n      pop\n        /* \"#utility.yul\":13656:13722   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13649:13654   */\n      dup3\n        /* \"#utility.yul\":13646:13723   */\n      sub\n        /* \"#utility.yul\":13643:13746   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":13726:13744   */\n      tag_398\n      tag_259\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":13643:13746   */\n    tag_397:\n        /* \"#utility.yul\":13769:13774   */\n      dup2\n        /* \"#utility.yul\":13766:13767   */\n      0x00\n        /* \"#utility.yul\":13762:13775   */\n      sub\n        /* \"#utility.yul\":13755:13775   */\n      swap1\n      pop\n        /* \"#utility.yul\":13553:13781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13787:13968   */\n    tag_271:\n        /* \"#utility.yul\":13927:13960   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":13923:13924   */\n      0x00\n        /* \"#utility.yul\":13915:13921   */\n      dup3\n        /* \"#utility.yul\":13911:13925   */\n      add\n        /* \"#utility.yul\":13904:13961   */\n      mstore\n        /* \"#utility.yul\":13787:13968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13974:14340   */\n    tag_272:\n        /* \"#utility.yul\":14116:14119   */\n      0x00\n        /* \"#utility.yul\":14137:14204   */\n      tag_401\n        /* \"#utility.yul\":14201:14203   */\n      0x1f\n        /* \"#utility.yul\":14196:14199   */\n      dup4\n        /* \"#utility.yul\":14137:14204   */\n      tag_252\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":14130:14204   */\n      swap2\n      pop\n        /* \"#utility.yul\":14213:14306   */\n      tag_402\n        /* \"#utility.yul\":14302:14305   */\n      dup3\n        /* \"#utility.yul\":14213:14306   */\n      tag_271\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":14331:14333   */\n      0x20\n        /* \"#utility.yul\":14326:14329   */\n      dup3\n        /* \"#utility.yul\":14322:14334   */\n      add\n        /* \"#utility.yul\":14315:14334   */\n      swap1\n      pop\n        /* \"#utility.yul\":13974:14340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14346:14765   */\n    tag_210:\n        /* \"#utility.yul\":14512:14516   */\n      0x00\n        /* \"#utility.yul\":14550:14552   */\n      0x20\n        /* \"#utility.yul\":14539:14548   */\n      dup3\n        /* \"#utility.yul\":14535:14553   */\n      add\n        /* \"#utility.yul\":14527:14553   */\n      swap1\n      pop\n        /* \"#utility.yul\":14599:14608   */\n      dup2\n        /* \"#utility.yul\":14593:14597   */\n      dup2\n        /* \"#utility.yul\":14589:14609   */\n      sub\n        /* \"#utility.yul\":14585:14586   */\n      0x00\n        /* \"#utility.yul\":14574:14583   */\n      dup4\n        /* \"#utility.yul\":14570:14587   */\n      add\n        /* \"#utility.yul\":14563:14610   */\n      mstore\n        /* \"#utility.yul\":14627:14758   */\n      tag_404\n        /* \"#utility.yul\":14753:14757   */\n      dup2\n        /* \"#utility.yul\":14627:14758   */\n      tag_272\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":14619:14758   */\n      swap1\n      pop\n        /* \"#utility.yul\":14346:14765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14771:15103   */\n    tag_214:\n        /* \"#utility.yul\":14892:14896   */\n      0x00\n        /* \"#utility.yul\":14930:14932   */\n      0x40\n        /* \"#utility.yul\":14919:14928   */\n      dup3\n        /* \"#utility.yul\":14915:14933   */\n      add\n        /* \"#utility.yul\":14907:14933   */\n      swap1\n      pop\n        /* \"#utility.yul\":14943:15014   */\n      tag_406\n        /* \"#utility.yul\":15011:15012   */\n      0x00\n        /* \"#utility.yul\":15000:15009   */\n      dup4\n        /* \"#utility.yul\":14996:15013   */\n      add\n        /* \"#utility.yul\":14987:14993   */\n      dup6\n        /* \"#utility.yul\":14943:15014   */\n      tag_247\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":15024:15096   */\n      tag_407\n        /* \"#utility.yul\":15092:15094   */\n      0x20\n        /* \"#utility.yul\":15081:15090   */\n      dup4\n        /* \"#utility.yul\":15077:15095   */\n      add\n        /* \"#utility.yul\":15068:15074   */\n      dup5\n        /* \"#utility.yul\":15024:15096   */\n      tag_246\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":14771:15103   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15109:15551   */\n    tag_228:\n        /* \"#utility.yul\":15258:15262   */\n      0x00\n        /* \"#utility.yul\":15296:15298   */\n      0x60\n        /* \"#utility.yul\":15285:15294   */\n      dup3\n        /* \"#utility.yul\":15281:15299   */\n      add\n        /* \"#utility.yul\":15273:15299   */\n      swap1\n      pop\n        /* \"#utility.yul\":15309:15380   */\n      tag_409\n        /* \"#utility.yul\":15377:15378   */\n      0x00\n        /* \"#utility.yul\":15366:15375   */\n      dup4\n        /* \"#utility.yul\":15362:15379   */\n      add\n        /* \"#utility.yul\":15353:15359   */\n      dup7\n        /* \"#utility.yul\":15309:15380   */\n      tag_247\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":15390:15462   */\n      tag_410\n        /* \"#utility.yul\":15458:15460   */\n      0x20\n        /* \"#utility.yul\":15447:15456   */\n      dup4\n        /* \"#utility.yul\":15443:15461   */\n      add\n        /* \"#utility.yul\":15434:15440   */\n      dup6\n        /* \"#utility.yul\":15390:15462   */\n      tag_247\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":15472:15544   */\n      tag_411\n        /* \"#utility.yul\":15540:15542   */\n      0x40\n        /* \"#utility.yul\":15529:15538   */\n      dup4\n        /* \"#utility.yul\":15525:15543   */\n      add\n        /* \"#utility.yul\":15516:15522   */\n      dup5\n        /* \"#utility.yul\":15472:15544   */\n      tag_246\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":15109:15551   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d3e1f4cb3c0be7b0fc4909fb4c06e84e4c3fb4d1b8bee12ea0abafb8bc7c1c5864736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_932": {
									"entryPoint": null,
									"id": 932,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 157,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:10",
										"nodeType": "YulBlock",
										"src": "0:590:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:10",
													"nodeType": "YulBlock",
													"src": "52:81:10",
													"statements": [
														{
															"nativeSrc": "62:65:10",
															"nodeType": "YulAssignment",
															"src": "62:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:10",
																		"nodeType": "YulLiteral",
																		"src": "84:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:10"
																},
																"nativeSrc": "73:54:10",
																"nodeType": "YulFunctionCall",
																"src": "73:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:126:10"
											},
											{
												"body": {
													"nativeSrc": "184:51:10",
													"nodeType": "YulBlock",
													"src": "184:51:10",
													"statements": [
														{
															"nativeSrc": "194:35:10",
															"nodeType": "YulAssignment",
															"src": "194:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:10"
																},
																"nativeSrc": "205:24:10",
																"nodeType": "YulFunctionCall",
																"src": "205:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:10",
														"nodeType": "YulTypedName",
														"src": "166:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:10",
														"nodeType": "YulTypedName",
														"src": "176:7:10",
														"type": ""
													}
												],
												"src": "139:96:10"
											},
											{
												"body": {
													"nativeSrc": "306:53:10",
													"nodeType": "YulBlock",
													"src": "306:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:10"
																		},
																		"nativeSrc": "328:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:10"
																},
																"nativeSrc": "316:37:10",
																"nodeType": "YulFunctionCall",
																"src": "316:37:10"
															},
															"nativeSrc": "316:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:10",
														"nodeType": "YulTypedName",
														"src": "294:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:10",
														"nodeType": "YulTypedName",
														"src": "301:3:10",
														"type": ""
													}
												],
												"src": "241:118:10"
											},
											{
												"body": {
													"nativeSrc": "463:124:10",
													"nodeType": "YulBlock",
													"src": "463:124:10",
													"statements": [
														{
															"nativeSrc": "473:26:10",
															"nodeType": "YulAssignment",
															"src": "473:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:10",
																		"nodeType": "YulLiteral",
																		"src": "496:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:10"
																},
																"nativeSrc": "481:18:10",
																"nodeType": "YulFunctionCall",
																"src": "481:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:10",
																				"nodeType": "YulLiteral",
																				"src": "577:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:10"
																		},
																		"nativeSrc": "562:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:10"
																},
																"nativeSrc": "509:71:10",
																"nodeType": "YulFunctionCall",
																"src": "509:71:10"
															},
															"nativeSrc": "509:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:10",
														"nodeType": "YulTypedName",
														"src": "435:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:10",
														"nodeType": "YulTypedName",
														"src": "447:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:10",
														"nodeType": "YulTypedName",
														"src": "458:4:10",
														"type": ""
													}
												],
												"src": "365:222:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610078919061019d565b60405180910390fd5b6100908161009d60201b60201c565b50600180819055506101b6565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101878261015e565b9050919050565b6101978161017d565b82525050565b5f6020820190506101b05f83018461018e565b92915050565b6121d8806101c35f395ff3fe608060405234801561000f575f5ffd5b5060043610610109575f3560e01c806390469a9d116100a0578063c04f31ff1161006f578063c04f31ff1461029d578063c3b8d9a3146102b9578063e744092e146102e9578063f2fde38b14610319578063fc7d42d71461033557610109565b806390469a9d14610219578063a5d5db0c14610235578063abdb5ea814610251578063b7d5820b1461026d57610109565b80636a0c7e9d116100dc5780636a0c7e9d146101a5578063715018a6146101c15780638009f857146101cb5780638da5cb5b146101fb57610109565b8063350c35e91461010d57806339ecf9ba146101295780634178617f14610159578063572d988814610175575b5f5ffd5b61012760048036038101906101229190611a4a565b610365565b005b610143600480360381019061013e9190611a88565b610738565b6040516101509190611ad5565b60405180910390f35b610173600480360381019061016e9190611aee565b610758565b005b61018f600480360381019061018a9190611aee565b610869565b60405161019c9190611ad5565b60405180910390f35b6101bf60048036038101906101ba9190611a4a565b61087e565b005b6101c9610c09565b005b6101e560048036038101906101e09190611a88565b610c1c565b6040516101f29190611ad5565b60405180910390f35b610203610cf3565b6040516102109190611b28565b60405180910390f35b610233600480360381019061022e9190611aee565b610d1a565b005b61024f600480360381019061024a9190611a4a565b610e45565b005b61026b60048036038101906102669190611a4a565b611046565b005b61028760048036038101906102829190611a88565b611301565b6040516102949190611ad5565b60405180910390f35b6102b760048036038101906102b29190611a4a565b611383565b005b6102d360048036038101906102ce9190611a88565b6114ef565b6040516102e09190611b59565b60405180910390f35b61030360048036038101906102fe9190611aee565b6115b5565b6040516103109190611b8c565b60405180910390f35b610333600480360381019061032e9190611aee565b6115d2565b005b61034f600480360381019061034a9190611a88565b611656565b60405161035c9190611ad5565b60405180910390f35b61036d611676565b8160025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166103f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ee90611bff565b60405180910390fd5b5f8211610439576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043090611c67565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156104f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ef90611ccf565b60405180910390fd5b5f83826105059190611d1a565b90505f61271060035f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054836105549190611d4d565b61055e9190611dbb565b905060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481101561061b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061290611e5b565b60405180910390fd5b8160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506106c333868873ffffffffffffffffffffffffffffffffffffffff166116c59092919063ffffffff16565b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f45892a46e6cef329bb642da6d69846d324db43d19008edc141ed82382eda1bee876040516107209190611ad5565b60405180910390a350505050610734611744565b5050565b6004602052815f5260405f20602052805f5260405f205f91509150505481565b61076061174d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c590611ec3565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167ff849d00bc67e9e4bf072df9680646c59b8c5380160834c2e1d4896ce5ec81f7560405160405180910390a250565b6003602052805f5260405f205f915090505481565b610886611676565b8160025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610910576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090790611bff565b60405180910390fd5b5f8211610952576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094990611c67565b60405180910390fd5b5f61271060035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a179190611d4d565b610a219190611dbb565b90505f8360055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610aa89190611ee1565b905081811115610aed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae490611f84565b60405180910390fd5b8060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610b9533858773ffffffffffffffffffffffffffffffffffffffff166116c59092919063ffffffff16565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3fc499aeb0bb1cb58b6de8b02b3f86f4e7394e9690bef0110e32ced8a563104586604051610bf29190611ad5565b60405180910390a3505050610c05611744565b5050565b610c1161174d565b610c1a5f6117d4565b565b5f61271060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610ce19190611d4d565b610ceb9190611dbb565b905092915050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610d2261174d565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610dab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da290611bff565b60405180910390fd5b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fbf996b4fd74f0c7159bb017b1db415b0d9a6f13129f46d0b93309d170b78df3160405160405180910390a250565b610e4d611676565b8160025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610ed7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ece90611bff565b60405180910390fd5b5f8211610f19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1090611c67565b60405180910390fd5b610f463330848673ffffffffffffffffffffffffffffffffffffffff16611895909392919063ffffffff16565b8160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610fcd9190611ee1565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff1c0dd7e9b98bbff859029005ef89b127af049cd18df1a8d79f0b7e019911e56846040516110319190611ad5565b60405180910390a350611042611744565b5050565b61104e611676565b8160025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166110d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110cf90611bff565b60405180910390fd5b5f821161111a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111190611c67565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156111d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d090612012565b60405180910390fd5b82816111e59190611d1a565b60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061128e3330858773ffffffffffffffffffffffffffffffffffffffff16611895909392919063ffffffff16565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0a3fbbea70e93f2daafa3102f5c9a1b8315e6d7a1e43e4bc020bc1162327470a856040516112eb9190611ad5565b60405180910390a350506112fd611744565b5050565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61138b61174d565b8160025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16611415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140c90611bff565b60405180910390fd5b61271082111561145a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114519061207a565b60405180910390fd5b8160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff167f275d6207ccd4271a12c584febf2bcf32254205dfb4639ce1a9184d2e2609e2d0836040516114e29190611ad5565b60405180910390a2505050565b5f5f6114fb8484610c1c565b90505f60055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905080821061159557808261158c9190611d1a565b925050506115af565b81816115a19190611d1a565b6115aa90612098565b925050505b92915050565b6002602052805f5260405f205f915054906101000a900460ff1681565b6115da61174d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361164a575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116419190611b28565b60405180910390fd5b611653816117d4565b50565b6005602052815f5260405f20602052805f5260405f205f91509150505481565b6002600154036116bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b290612128565b60405180910390fd5b6002600181905550565b61173f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016116f8929190612146565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611917565b505050565b60018081905550565b6117556119b2565b73ffffffffffffffffffffffffffffffffffffffff16611773610cf3565b73ffffffffffffffffffffffffffffffffffffffff16146117d2576117966119b2565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016117c99190611b28565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611911848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016118ca9392919061216d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611917565b50505050565b5f5f60205f8451602086015f885af180611936576040513d5f823e3d81fd5b3d92505f519150505f821461194f57600181141561196a565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156119ac57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016119a39190611b28565b60405180910390fd5b50505050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119e6826119bd565b9050919050565b6119f6816119dc565b8114611a00575f5ffd5b50565b5f81359050611a11816119ed565b92915050565b5f819050919050565b611a2981611a17565b8114611a33575f5ffd5b50565b5f81359050611a4481611a20565b92915050565b5f5f60408385031215611a6057611a5f6119b9565b5b5f611a6d85828601611a03565b9250506020611a7e85828601611a36565b9150509250929050565b5f5f60408385031215611a9e57611a9d6119b9565b5b5f611aab85828601611a03565b9250506020611abc85828601611a03565b9150509250929050565b611acf81611a17565b82525050565b5f602082019050611ae85f830184611ac6565b92915050565b5f60208284031215611b0357611b026119b9565b5b5f611b1084828501611a03565b91505092915050565b611b22816119dc565b82525050565b5f602082019050611b3b5f830184611b19565b92915050565b5f819050919050565b611b5381611b41565b82525050565b5f602082019050611b6c5f830184611b4a565b92915050565b5f8115159050919050565b611b8681611b72565b82525050565b5f602082019050611b9f5f830184611b7d565b92915050565b5f82825260208201905092915050565b7f546f6b656e206e6f7420616c6c6f7765640000000000000000000000000000005f82015250565b5f611be9601183611ba5565b9150611bf482611bb5565b602082019050919050565b5f6020820190508181035f830152611c1681611bdd565b9050919050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f611c51601283611ba5565b9150611c5c82611c1d565b602082019050919050565b5f6020820190508181035f830152611c7e81611c45565b9050919050565b7f496e73756666696369656e7420636f6c6c61746572616c0000000000000000005f82015250565b5f611cb9601783611ba5565b9150611cc482611c85565b602082019050919050565b5f6020820190508181035f830152611ce681611cad565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d2482611a17565b9150611d2f83611a17565b9250828203905081811115611d4757611d46611ced565b5b92915050565b5f611d5782611a17565b9150611d6283611a17565b9250828202611d7081611a17565b91508282048414831517611d8757611d86611ced565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611dc582611a17565b9150611dd083611a17565b925082611de057611ddf611d8e565b5b828204905092915050565b7f5769746864726177616c20776f756c6420756e646572636f6c6c61746572616c5f8201527f697a6520706f736974696f6e0000000000000000000000000000000000000000602082015250565b5f611e45602c83611ba5565b9150611e5082611deb565b604082019050919050565b5f6020820190508181035f830152611e7281611e39565b9050919050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f611ead601583611ba5565b9150611eb882611e79565b602082019050919050565b5f6020820190508181035f830152611eda81611ea1565b9050919050565b5f611eeb82611a17565b9150611ef683611a17565b9250828201905080821115611f0e57611f0d611ced565b5b92915050565b7f496e73756666696369656e7420636f6c6c61746572616c20666f7220626f72725f8201527f6f77000000000000000000000000000000000000000000000000000000000000602082015250565b5f611f6e602283611ba5565b9150611f7982611f14565b604082019050919050565b5f6020820190508181035f830152611f9b81611f62565b9050919050565b7f526570617920616d6f756e74206578636565647320626f72726f7765642062615f8201527f6c616e6365000000000000000000000000000000000000000000000000000000602082015250565b5f611ffc602583611ba5565b915061200782611fa2565b604082019050919050565b5f6020820190508181035f83015261202981611ff0565b9050919050565b7f466163746f72206d757374206265203c3d2031303030300000000000000000005f82015250565b5f612064601783611ba5565b915061206f82612030565b602082019050919050565b5f6020820190508181035f83015261209181612058565b9050919050565b5f6120a282611b41565b91507f800000000000000000000000000000000000000000000000000000000000000082036120d4576120d3611ced565b5b815f039050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612112601f83611ba5565b915061211d826120de565b602082019050919050565b5f6020820190508181035f83015261213f81612106565b9050919050565b5f6040820190506121595f830185611b19565b6121666020830184611ac6565b9392505050565b5f6060820190506121805f830186611b19565b61218d6020830185611b19565b61219a6040830184611ac6565b94935050505056fea2646970667358221220d3e1f4cb3c0be7b0fc4909fb4c06e84e4c3fb4d1b8bee12ea0abafb8bc7c1c5864736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x9D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x1B6 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x187 DUP3 PUSH2 0x15E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197 DUP2 PUSH2 0x17D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21D8 DUP1 PUSH2 0x1C3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90469A9D GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC04F31FF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC04F31FF EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xC3B8D9A3 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xE744092E EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xFC7D42D7 EQ PUSH2 0x335 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x90469A9D EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xA5D5DB0C EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xABDB5EA8 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xB7D5820B EQ PUSH2 0x26D JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6A0C7E9D GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x6A0C7E9D EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x8009F857 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FB JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x350C35E9 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x39ECF9BA EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x4178617F EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x572D9888 EQ PUSH2 0x175 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH2 0x869 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH2 0xC09 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH2 0xD1A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0xE45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x1046 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1B8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x333 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH2 0x15D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH2 0x1676 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x439 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x430 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EF SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP3 PUSH2 0x505 SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x3 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 PUSH2 0x554 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x612 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6C3 CALLER DUP7 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16C5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x45892A46E6CEF329BB642DA6D69846D324DB43D19008EDC141ED82382EDA1BEE DUP8 PUSH1 0x40 MLOAD PUSH2 0x720 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0x734 PUSH2 0x1744 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x760 PUSH2 0x174D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C5 SWAP1 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF849D00BC67E9E4BF072DF9680646C59B8C5380160834C2E1D4896CE5EC81F75 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x886 PUSH2 0x1676 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x949 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA17 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH2 0xA21 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE4 SWAP1 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xB95 CALLER DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16C5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3FC499AEB0BB1CB58B6DE8B02B3F86F4E7394E9690BEF0110E32CED8A5631045 DUP7 PUSH1 0x40 MLOAD PUSH2 0xBF2 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0xC05 PUSH2 0x1744 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC11 PUSH2 0x174D JUMP JUMPDEST PUSH2 0xC1A PUSH0 PUSH2 0x17D4 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD22 PUSH2 0x174D JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA2 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBF996B4FD74F0C7159BB017B1DB415B0D9A6F13129F46D0B93309D170B78DF31 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xE4D PUSH2 0x1676 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xED7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECE SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0xF19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF10 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF46 CALLER ADDRESS DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1895 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFCD SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF1C0DD7E9B98BBFF859029005EF89B127AF049CD18DF1A8D79F0B7E019911E56 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1031 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x1042 PUSH2 0x1744 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x104E PUSH2 0x1676 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CF SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x111A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1111 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D0 SWAP1 PUSH2 0x2012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH2 0x11E5 SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x128E CALLER ADDRESS DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1895 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA3FBBEA70E93F2DAAFA3102F5C9A1B8315E6D7A1E43E4BC020BC1162327470A DUP6 PUSH1 0x40 MLOAD PUSH2 0x12EB SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x12FD PUSH2 0x1744 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x138B PUSH2 0x174D JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140C SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP3 GT ISZERO PUSH2 0x145A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1451 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x275D6207CCD4271A12C584FEBF2BCF32254205DFB4639CE1A9184D2E2609E2D0 DUP4 PUSH1 0x40 MLOAD PUSH2 0x14E2 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x14FB DUP5 DUP5 PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 LT PUSH2 0x1595 JUMPI DUP1 DUP3 PUSH2 0x158C SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x15AF JUMP JUMPDEST DUP2 DUP2 PUSH2 0x15A1 SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0x15AA SWAP1 PUSH2 0x2098 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x15DA PUSH2 0x174D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x164A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1641 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1653 DUP2 PUSH2 0x17D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x16BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x173F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16F8 SWAP3 SWAP2 SWAP1 PUSH2 0x2146 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1917 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1755 PUSH2 0x19B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1773 PUSH2 0xCF3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17D2 JUMPI PUSH2 0x1796 PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C9 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1911 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x18CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1917 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1936 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x194F JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x196A JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x19AC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A3 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19E6 DUP3 PUSH2 0x19BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F6 DUP2 PUSH2 0x19DC JUMP JUMPDEST DUP2 EQ PUSH2 0x1A00 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A11 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A29 DUP2 PUSH2 0x1A17 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A33 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A44 DUP2 PUSH2 0x1A20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A60 JUMPI PUSH2 0x1A5F PUSH2 0x19B9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A6D DUP6 DUP3 DUP7 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A7E DUP6 DUP3 DUP7 ADD PUSH2 0x1A36 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A9E JUMPI PUSH2 0x1A9D PUSH2 0x19B9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AAB DUP6 DUP3 DUP7 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ABC DUP6 DUP3 DUP7 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACF DUP2 PUSH2 0x1A17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B03 JUMPI PUSH2 0x1B02 PUSH2 0x19B9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B10 DUP5 DUP3 DUP6 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B22 DUP2 PUSH2 0x19DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3B PUSH0 DUP4 ADD DUP5 PUSH2 0x1B19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B53 DUP2 PUSH2 0x1B41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6C PUSH0 DUP4 ADD DUP5 PUSH2 0x1B4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B86 DUP2 PUSH2 0x1B72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B9F PUSH0 DUP4 ADD DUP5 PUSH2 0x1B7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420616C6C6F776564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BE9 PUSH1 0x11 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF4 DUP3 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C16 DUP2 PUSH2 0x1BDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C51 PUSH1 0x12 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5C DUP3 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C7E DUP2 PUSH2 0x1C45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB9 PUSH1 0x17 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC4 DUP3 PUSH2 0x1C85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CE6 DUP2 PUSH2 0x1CAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D24 DUP3 PUSH2 0x1A17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2F DUP4 PUSH2 0x1A17 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D47 JUMPI PUSH2 0x1D46 PUSH2 0x1CED JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D57 DUP3 PUSH2 0x1A17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D62 DUP4 PUSH2 0x1A17 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D70 DUP2 PUSH2 0x1A17 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D87 JUMPI PUSH2 0x1D86 PUSH2 0x1CED JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DC5 DUP3 PUSH2 0x1A17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD0 DUP4 PUSH2 0x1A17 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DE0 JUMPI PUSH2 0x1DDF PUSH2 0x1D8E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20776F756C6420756E646572636F6C6C61746572616C PUSH0 DUP3 ADD MSTORE PUSH32 0x697A6520706F736974696F6E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E45 PUSH1 0x2C DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E50 DUP3 PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E72 DUP2 PUSH2 0x1E39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAD PUSH1 0x15 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB8 DUP3 PUSH2 0x1E79 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EDA DUP2 PUSH2 0x1EA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEB DUP3 PUSH2 0x1A17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF6 DUP4 PUSH2 0x1A17 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F0E JUMPI PUSH2 0x1F0D PUSH2 0x1CED JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C20666F7220626F7272 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F77000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F6E PUSH1 0x22 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F79 DUP3 PUSH2 0x1F14 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F9B DUP2 PUSH2 0x1F62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526570617920616D6F756E74206578636565647320626F72726F776564206261 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C616E6365000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FFC PUSH1 0x25 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2007 DUP3 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2029 DUP2 PUSH2 0x1FF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x466163746F72206D757374206265203C3D203130303030000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2064 PUSH1 0x17 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x206F DUP3 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2091 DUP2 PUSH2 0x2058 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20A2 DUP3 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x20D4 JUMPI PUSH2 0x20D3 PUSH2 0x1CED JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2112 PUSH1 0x1F DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x211D DUP3 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x213F DUP2 PUSH2 0x2106 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2159 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x2166 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AC6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2180 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x218D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x219A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AC6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 RJUMPI 0xF4CB EXTCODECOPY SIGNEXTEND SWAPN 0xB0 0xFC BLOBHASH MULMOD EXTSTATICCALL 0x4C MOD 0xE8 0x4E 0x4C EXTCODEHASH 0xB4 DATALOADN 0xB8BE RJUMPI 0x2EA0 0xAB 0xAF 0xB8 0xBC PUSH29 0x1C5864736F6C634300081D003300000000000000000000000000000000 ",
							"sourceMap": "307:8323:9:-:0;;;1817:36;;;;;;;;;;1839:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;307:8323:9;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;307:8323:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_747": {
									"entryPoint": 6423,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5965,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_801": {
									"entryPoint": 6578,
									"id": 801,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 5956,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 5750,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 6100,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addAllowedToken_961": {
									"entryPoint": 1880,
									"id": 961,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowedTokens_848": {
									"entryPoint": 5557,
									"id": 848,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@borrowBalances_864": {
									"entryPoint": 5718,
									"id": 864,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@borrowCollateral_1238": {
									"entryPoint": 2174,
									"id": 1238,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@collateralBalances_858": {
									"entryPoint": 1848,
									"id": 858,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@collateralFactors_852": {
									"entryPoint": 2153,
									"id": 852,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositCollateral_1069": {
									"entryPoint": 3653,
									"id": 1069,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getCollateralBalance_1323": {
									"entryPoint": 4865,
									"id": 1323,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getCollateralMargin_1393": {
									"entryPoint": 5359,
									"id": 1393,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getEffectiveCollateral_1346": {
									"entryPoint": 3100,
									"id": 1346,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 3315,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeAllowedToken_987": {
									"entryPoint": 3354,
									"id": 987,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 3081,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@repayBorrow_1306": {
									"entryPoint": 4166,
									"id": 1306,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_452": {
									"entryPoint": 6293,
									"id": 452,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 5829,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setCollateralFactor_1019": {
									"entryPoint": 4995,
									"id": 1019,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 5586,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawCollateral_1159": {
									"entryPoint": 869,
									"id": 1159,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 6986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_240498d7579bea075a03e85335d7e0cf15113dc3a56e365a5a3e62864ea057ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4c5353a6055dceb26ed4ee990197a6fedbded8b234b7bec8b5a421767149976d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_60a50693cd6710402e4138e1cc38d3898d07421a4993f4bc27b72d5c442c766b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d723c5210232a1ee5d4f00c6eaa61ffd90af53d796bbd326e2a3aed6c85c4784_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8557,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8518,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 7001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_240498d7579bea075a03e85335d7e0cf15113dc3a56e365a5a3e62864ea057ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4c5353a6055dceb26ed4ee990197a6fedbded8b234b7bec8b5a421767149976d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_60a50693cd6710402e4138e1cc38d3898d07421a4993f4bc27b72d5c442c766b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d723c5210232a1ee5d4f00c6eaa61ffd90af53d796bbd326e2a3aed6c85c4784__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 6977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"negate_t_int256": {
									"entryPoint": 8344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7405,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7566,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6585,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb": {
									"entryPoint": 7197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_240498d7579bea075a03e85335d7e0cf15113dc3a56e365a5a3e62864ea057ef": {
									"entryPoint": 8098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4c5353a6055dceb26ed4ee990197a6fedbded8b234b7bec8b5a421767149976d": {
									"entryPoint": 7659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_60a50693cd6710402e4138e1cc38d3898d07421a4993f4bc27b72d5c442c766b": {
									"entryPoint": 8240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b": {
									"entryPoint": 7093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa": {
									"entryPoint": 7301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 7801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d723c5210232a1ee5d4f00c6eaa61ffd90af53d796bbd326e2a3aed6c85c4784": {
									"entryPoint": 7956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 8414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15554:10",
										"nodeType": "YulBlock",
										"src": "0:15554:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "748:87:10",
													"nodeType": "YulBlock",
													"src": "748:87:10",
													"statements": [
														{
															"nativeSrc": "758:29:10",
															"nodeType": "YulAssignment",
															"src": "758:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:10"
																},
																"nativeSrc": "767:20:10",
																"nodeType": "YulFunctionCall",
																"src": "767:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:10"
																},
																"nativeSrc": "796:33:10",
																"nodeType": "YulFunctionCall",
																"src": "796:33:10"
															},
															"nativeSrc": "796:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:10",
														"nodeType": "YulTypedName",
														"src": "726:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:10",
														"nodeType": "YulTypedName",
														"src": "734:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:10",
														"nodeType": "YulTypedName",
														"src": "742:5:10",
														"type": ""
													}
												],
												"src": "696:139:10"
											},
											{
												"body": {
													"nativeSrc": "886:32:10",
													"nodeType": "YulBlock",
													"src": "886:32:10",
													"statements": [
														{
															"nativeSrc": "896:16:10",
															"nodeType": "YulAssignment",
															"src": "896:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:10",
																"nodeType": "YulIdentifier",
																"src": "907:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:10",
														"nodeType": "YulTypedName",
														"src": "868:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:10",
														"nodeType": "YulTypedName",
														"src": "878:7:10",
														"type": ""
													}
												],
												"src": "841:77:10"
											},
											{
												"body": {
													"nativeSrc": "967:79:10",
													"nodeType": "YulBlock",
													"src": "967:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:10",
																"nodeType": "YulBlock",
																"src": "1024:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:10"
																			},
																			"nativeSrc": "1026:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:10"
																		},
																		"nativeSrc": "1026:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:10"
																				},
																				"nativeSrc": "997:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:10"
																		},
																		"nativeSrc": "987:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:10"
																},
																"nativeSrc": "980:43:10",
																"nodeType": "YulFunctionCall",
																"src": "980:43:10"
															},
															"nativeSrc": "977:63:10",
															"nodeType": "YulIf",
															"src": "977:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:10",
														"nodeType": "YulTypedName",
														"src": "960:5:10",
														"type": ""
													}
												],
												"src": "924:122:10"
											},
											{
												"body": {
													"nativeSrc": "1104:87:10",
													"nodeType": "YulBlock",
													"src": "1104:87:10",
													"statements": [
														{
															"nativeSrc": "1114:29:10",
															"nodeType": "YulAssignment",
															"src": "1114:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:10"
																},
																"nativeSrc": "1123:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:10"
																},
																"nativeSrc": "1152:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:10"
															},
															"nativeSrc": "1152:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:10",
														"nodeType": "YulTypedName",
														"src": "1082:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:10",
														"nodeType": "YulTypedName",
														"src": "1090:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:10",
														"nodeType": "YulTypedName",
														"src": "1098:5:10",
														"type": ""
													}
												],
												"src": "1052:139:10"
											},
											{
												"body": {
													"nativeSrc": "1280:391:10",
													"nodeType": "YulBlock",
													"src": "1280:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:10",
																"nodeType": "YulBlock",
																"src": "1326:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:10"
																			},
																			"nativeSrc": "1328:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:10"
																		},
																		"nativeSrc": "1328:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:10"
																		},
																		"nativeSrc": "1297:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:10"
																},
																"nativeSrc": "1293:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:10"
															},
															"nativeSrc": "1290:119:10",
															"nodeType": "YulIf",
															"src": "1290:119:10"
														},
														{
															"nativeSrc": "1419:117:10",
															"nodeType": "YulBlock",
															"src": "1419:117:10",
															"statements": [
																{
																	"nativeSrc": "1434:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:10"
																				},
																				"nativeSrc": "1494:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:10"
																		},
																		"nativeSrc": "1473:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:10",
															"nodeType": "YulBlock",
															"src": "1546:118:10",
															"statements": [
																{
																	"nativeSrc": "1561:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:10"
																				},
																				"nativeSrc": "1622:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:10"
																		},
																		"nativeSrc": "1601:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:10",
														"nodeType": "YulTypedName",
														"src": "1242:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:10",
														"nodeType": "YulTypedName",
														"src": "1253:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:10",
														"nodeType": "YulTypedName",
														"src": "1265:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:10",
														"nodeType": "YulTypedName",
														"src": "1273:6:10",
														"type": ""
													}
												],
												"src": "1197:474:10"
											},
											{
												"body": {
													"nativeSrc": "1760:391:10",
													"nodeType": "YulBlock",
													"src": "1760:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1806:83:10",
																"nodeType": "YulBlock",
																"src": "1806:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1808:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1808:77:10"
																			},
																			"nativeSrc": "1808:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1808:79:10"
																		},
																		"nativeSrc": "1808:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1808:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1781:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1781:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1790:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1790:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1777:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1777:3:10"
																		},
																		"nativeSrc": "1777:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1777:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1802:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1802:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1773:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1773:3:10"
																},
																"nativeSrc": "1773:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1773:32:10"
															},
															"nativeSrc": "1770:119:10",
															"nodeType": "YulIf",
															"src": "1770:119:10"
														},
														{
															"nativeSrc": "1899:117:10",
															"nodeType": "YulBlock",
															"src": "1899:117:10",
															"statements": [
																{
																	"nativeSrc": "1914:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1914:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1928:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1918:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1918:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1943:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1943:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1978:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1978:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1989:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1989:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1974:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1974:3:10"
																				},
																				"nativeSrc": "1974:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1974:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1998:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1953:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1953:20:10"
																		},
																		"nativeSrc": "1953:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1953:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1943:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1943:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2026:118:10",
															"nodeType": "YulBlock",
															"src": "2026:118:10",
															"statements": [
																{
																	"nativeSrc": "2041:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2041:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2055:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2055:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2045:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2045:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2071:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2071:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2106:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2106:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2117:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2117:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2102:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2102:3:10"
																				},
																				"nativeSrc": "2102:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2102:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2126:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2126:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2081:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2081:20:10"
																		},
																		"nativeSrc": "2081:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2081:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2071:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2071:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "1677:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1722:9:10",
														"nodeType": "YulTypedName",
														"src": "1722:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1733:7:10",
														"nodeType": "YulTypedName",
														"src": "1733:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1745:6:10",
														"nodeType": "YulTypedName",
														"src": "1745:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1753:6:10",
														"nodeType": "YulTypedName",
														"src": "1753:6:10",
														"type": ""
													}
												],
												"src": "1677:474:10"
											},
											{
												"body": {
													"nativeSrc": "2222:53:10",
													"nodeType": "YulBlock",
													"src": "2222:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2239:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2239:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2262:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2262:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2244:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2244:17:10"
																		},
																		"nativeSrc": "2244:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2244:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2232:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2232:6:10"
																},
																"nativeSrc": "2232:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2232:37:10"
															},
															"nativeSrc": "2232:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2232:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2157:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:10",
														"nodeType": "YulTypedName",
														"src": "2210:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2217:3:10",
														"nodeType": "YulTypedName",
														"src": "2217:3:10",
														"type": ""
													}
												],
												"src": "2157:118:10"
											},
											{
												"body": {
													"nativeSrc": "2379:124:10",
													"nodeType": "YulBlock",
													"src": "2379:124:10",
													"statements": [
														{
															"nativeSrc": "2389:26:10",
															"nodeType": "YulAssignment",
															"src": "2389:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2401:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2401:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2412:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2412:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2397:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2397:3:10"
																},
																"nativeSrc": "2397:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2397:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2389:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2389:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2469:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2482:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2482:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2493:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2493:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2478:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:10"
																		},
																		"nativeSrc": "2478:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2478:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2425:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2425:43:10"
																},
																"nativeSrc": "2425:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2425:71:10"
															},
															"nativeSrc": "2425:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2425:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2281:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2351:9:10",
														"nodeType": "YulTypedName",
														"src": "2351:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2363:6:10",
														"nodeType": "YulTypedName",
														"src": "2363:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2374:4:10",
														"nodeType": "YulTypedName",
														"src": "2374:4:10",
														"type": ""
													}
												],
												"src": "2281:222:10"
											},
											{
												"body": {
													"nativeSrc": "2575:263:10",
													"nodeType": "YulBlock",
													"src": "2575:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2621:83:10",
																"nodeType": "YulBlock",
																"src": "2621:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2623:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2623:77:10"
																			},
																			"nativeSrc": "2623:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2623:79:10"
																		},
																		"nativeSrc": "2623:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2623:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2596:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2596:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2605:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2605:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2592:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:10"
																		},
																		"nativeSrc": "2592:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2592:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2617:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2617:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2588:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2588:3:10"
																},
																"nativeSrc": "2588:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2588:32:10"
															},
															"nativeSrc": "2585:119:10",
															"nodeType": "YulIf",
															"src": "2585:119:10"
														},
														{
															"nativeSrc": "2714:117:10",
															"nodeType": "YulBlock",
															"src": "2714:117:10",
															"statements": [
																{
																	"nativeSrc": "2729:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2729:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2743:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2743:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2733:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2733:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2758:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2758:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2793:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2793:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2804:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2804:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2789:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2789:3:10"
																				},
																				"nativeSrc": "2789:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2789:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2813:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2813:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2768:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2768:20:10"
																		},
																		"nativeSrc": "2768:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2768:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2758:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2758:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2509:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2545:9:10",
														"nodeType": "YulTypedName",
														"src": "2545:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2556:7:10",
														"nodeType": "YulTypedName",
														"src": "2556:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2568:6:10",
														"nodeType": "YulTypedName",
														"src": "2568:6:10",
														"type": ""
													}
												],
												"src": "2509:329:10"
											},
											{
												"body": {
													"nativeSrc": "2909:53:10",
													"nodeType": "YulBlock",
													"src": "2909:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2926:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2926:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2949:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2949:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2931:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2931:17:10"
																		},
																		"nativeSrc": "2931:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2931:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2919:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2919:6:10"
																},
																"nativeSrc": "2919:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2919:37:10"
															},
															"nativeSrc": "2919:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2919:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2844:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2897:5:10",
														"nodeType": "YulTypedName",
														"src": "2897:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2904:3:10",
														"nodeType": "YulTypedName",
														"src": "2904:3:10",
														"type": ""
													}
												],
												"src": "2844:118:10"
											},
											{
												"body": {
													"nativeSrc": "3066:124:10",
													"nodeType": "YulBlock",
													"src": "3066:124:10",
													"statements": [
														{
															"nativeSrc": "3076:26:10",
															"nodeType": "YulAssignment",
															"src": "3076:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3088:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3088:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3099:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3099:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3084:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3084:3:10"
																},
																"nativeSrc": "3084:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3084:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3076:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3076:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3156:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3156:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3169:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3169:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3180:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3180:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3165:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:10"
																		},
																		"nativeSrc": "3165:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3165:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3112:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3112:43:10"
																},
																"nativeSrc": "3112:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3112:71:10"
															},
															"nativeSrc": "3112:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3112:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2968:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3038:9:10",
														"nodeType": "YulTypedName",
														"src": "3038:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3050:6:10",
														"nodeType": "YulTypedName",
														"src": "3050:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3061:4:10",
														"nodeType": "YulTypedName",
														"src": "3061:4:10",
														"type": ""
													}
												],
												"src": "2968:222:10"
											},
											{
												"body": {
													"nativeSrc": "3240:32:10",
													"nodeType": "YulBlock",
													"src": "3240:32:10",
													"statements": [
														{
															"nativeSrc": "3250:16:10",
															"nodeType": "YulAssignment",
															"src": "3250:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "3261:5:10",
																"nodeType": "YulIdentifier",
																"src": "3261:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3250:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3250:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "3196:76:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3222:5:10",
														"nodeType": "YulTypedName",
														"src": "3222:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3232:7:10",
														"nodeType": "YulTypedName",
														"src": "3232:7:10",
														"type": ""
													}
												],
												"src": "3196:76:10"
											},
											{
												"body": {
													"nativeSrc": "3341:52:10",
													"nodeType": "YulBlock",
													"src": "3341:52:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3358:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3358:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3380:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3380:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nativeSrc": "3363:16:10",
																			"nodeType": "YulIdentifier",
																			"src": "3363:16:10"
																		},
																		"nativeSrc": "3363:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3363:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3351:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3351:6:10"
																},
																"nativeSrc": "3351:36:10",
																"nodeType": "YulFunctionCall",
																"src": "3351:36:10"
															},
															"nativeSrc": "3351:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "3351:36:10"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nativeSrc": "3278:115:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3329:5:10",
														"nodeType": "YulTypedName",
														"src": "3329:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3336:3:10",
														"nodeType": "YulTypedName",
														"src": "3336:3:10",
														"type": ""
													}
												],
												"src": "3278:115:10"
											},
											{
												"body": {
													"nativeSrc": "3495:122:10",
													"nodeType": "YulBlock",
													"src": "3495:122:10",
													"statements": [
														{
															"nativeSrc": "3505:26:10",
															"nodeType": "YulAssignment",
															"src": "3505:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3517:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3517:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3528:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3528:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3513:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3513:3:10"
																},
																"nativeSrc": "3513:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3513:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3505:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3505:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3583:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3583:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3596:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3596:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3607:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3607:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3592:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3592:3:10"
																		},
																		"nativeSrc": "3592:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3592:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "3541:41:10",
																	"nodeType": "YulIdentifier",
																	"src": "3541:41:10"
																},
																"nativeSrc": "3541:69:10",
																"nodeType": "YulFunctionCall",
																"src": "3541:69:10"
															},
															"nativeSrc": "3541:69:10",
															"nodeType": "YulExpressionStatement",
															"src": "3541:69:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "3399:218:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3467:9:10",
														"nodeType": "YulTypedName",
														"src": "3467:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3479:6:10",
														"nodeType": "YulTypedName",
														"src": "3479:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3490:4:10",
														"nodeType": "YulTypedName",
														"src": "3490:4:10",
														"type": ""
													}
												],
												"src": "3399:218:10"
											},
											{
												"body": {
													"nativeSrc": "3665:48:10",
													"nodeType": "YulBlock",
													"src": "3665:48:10",
													"statements": [
														{
															"nativeSrc": "3675:32:10",
															"nodeType": "YulAssignment",
															"src": "3675:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3700:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3700:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3693:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3693:6:10"
																		},
																		"nativeSrc": "3693:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3693:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3686:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:10"
																},
																"nativeSrc": "3686:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3686:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3675:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3675:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3623:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3647:5:10",
														"nodeType": "YulTypedName",
														"src": "3647:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3657:7:10",
														"nodeType": "YulTypedName",
														"src": "3657:7:10",
														"type": ""
													}
												],
												"src": "3623:90:10"
											},
											{
												"body": {
													"nativeSrc": "3778:50:10",
													"nodeType": "YulBlock",
													"src": "3778:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3795:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3795:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3815:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3815:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3800:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3800:14:10"
																		},
																		"nativeSrc": "3800:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3800:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3788:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3788:6:10"
																},
																"nativeSrc": "3788:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3788:34:10"
															},
															"nativeSrc": "3788:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3788:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3719:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3766:5:10",
														"nodeType": "YulTypedName",
														"src": "3766:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3773:3:10",
														"nodeType": "YulTypedName",
														"src": "3773:3:10",
														"type": ""
													}
												],
												"src": "3719:109:10"
											},
											{
												"body": {
													"nativeSrc": "3926:118:10",
													"nodeType": "YulBlock",
													"src": "3926:118:10",
													"statements": [
														{
															"nativeSrc": "3936:26:10",
															"nodeType": "YulAssignment",
															"src": "3936:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3948:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3948:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3959:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3959:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3944:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3944:3:10"
																},
																"nativeSrc": "3944:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3944:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3936:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3936:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4010:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4010:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4023:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4023:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4034:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4034:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4019:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4019:3:10"
																		},
																		"nativeSrc": "4019:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4019:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3972:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3972:37:10"
																},
																"nativeSrc": "3972:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3972:65:10"
															},
															"nativeSrc": "3972:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3972:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3834:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3898:9:10",
														"nodeType": "YulTypedName",
														"src": "3898:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3910:6:10",
														"nodeType": "YulTypedName",
														"src": "3910:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3921:4:10",
														"nodeType": "YulTypedName",
														"src": "3921:4:10",
														"type": ""
													}
												],
												"src": "3834:210:10"
											},
											{
												"body": {
													"nativeSrc": "4146:73:10",
													"nodeType": "YulBlock",
													"src": "4146:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4163:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4163:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4168:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4168:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4156:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4156:6:10"
																},
																"nativeSrc": "4156:19:10",
																"nodeType": "YulFunctionCall",
																"src": "4156:19:10"
															},
															"nativeSrc": "4156:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "4156:19:10"
														},
														{
															"nativeSrc": "4184:29:10",
															"nodeType": "YulAssignment",
															"src": "4184:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4203:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4203:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4208:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4208:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4199:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4199:3:10"
																},
																"nativeSrc": "4199:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4199:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4184:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "4184:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4050:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4118:3:10",
														"nodeType": "YulTypedName",
														"src": "4118:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4123:6:10",
														"nodeType": "YulTypedName",
														"src": "4123:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4134:11:10",
														"nodeType": "YulTypedName",
														"src": "4134:11:10",
														"type": ""
													}
												],
												"src": "4050:169:10"
											},
											{
												"body": {
													"nativeSrc": "4331:61:10",
													"nodeType": "YulBlock",
													"src": "4331:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4353:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4353:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4361:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4361:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:10"
																		},
																		"nativeSrc": "4349:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:14:10"
																	},
																	{
																		"hexValue": "546f6b656e206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "4365:19:10",
																		"nodeType": "YulLiteral",
																		"src": "4365:19:10",
																		"type": "",
																		"value": "Token not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4342:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4342:6:10"
																},
																"nativeSrc": "4342:43:10",
																"nodeType": "YulFunctionCall",
																"src": "4342:43:10"
															},
															"nativeSrc": "4342:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "4342:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b",
												"nativeSrc": "4225:167:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4323:6:10",
														"nodeType": "YulTypedName",
														"src": "4323:6:10",
														"type": ""
													}
												],
												"src": "4225:167:10"
											},
											{
												"body": {
													"nativeSrc": "4544:220:10",
													"nodeType": "YulBlock",
													"src": "4544:220:10",
													"statements": [
														{
															"nativeSrc": "4554:74:10",
															"nodeType": "YulAssignment",
															"src": "4554:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4620:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4620:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4625:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4625:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4561:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "4561:58:10"
																},
																"nativeSrc": "4561:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4561:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4554:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4554:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4726:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4726:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b",
																	"nativeSrc": "4637:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "4637:88:10"
																},
																"nativeSrc": "4637:93:10",
																"nodeType": "YulFunctionCall",
																"src": "4637:93:10"
															},
															"nativeSrc": "4637:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "4637:93:10"
														},
														{
															"nativeSrc": "4739:19:10",
															"nodeType": "YulAssignment",
															"src": "4739:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4750:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4750:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4755:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4755:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4746:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4746:3:10"
																},
																"nativeSrc": "4746:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4746:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4739:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4739:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4398:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4532:3:10",
														"nodeType": "YulTypedName",
														"src": "4532:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4540:3:10",
														"nodeType": "YulTypedName",
														"src": "4540:3:10",
														"type": ""
													}
												],
												"src": "4398:366:10"
											},
											{
												"body": {
													"nativeSrc": "4941:248:10",
													"nodeType": "YulBlock",
													"src": "4941:248:10",
													"statements": [
														{
															"nativeSrc": "4951:26:10",
															"nodeType": "YulAssignment",
															"src": "4951:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4963:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4963:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4974:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4974:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4959:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4959:3:10"
																},
																"nativeSrc": "4959:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4959:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4951:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4951:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4998:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4998:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4994:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4994:3:10"
																		},
																		"nativeSrc": "4994:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4994:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5017:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5017:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5023:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5023:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5013:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5013:3:10"
																		},
																		"nativeSrc": "5013:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5013:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4987:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4987:6:10"
																},
																"nativeSrc": "4987:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4987:47:10"
															},
															"nativeSrc": "4987:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4987:47:10"
														},
														{
															"nativeSrc": "5043:139:10",
															"nodeType": "YulAssignment",
															"src": "5043:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5177:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5177:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5051:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "5051:124:10"
																},
																"nativeSrc": "5051:131:10",
																"nodeType": "YulFunctionCall",
																"src": "5051:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5043:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5043:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4770:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4921:9:10",
														"nodeType": "YulTypedName",
														"src": "4921:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4936:4:10",
														"nodeType": "YulTypedName",
														"src": "4936:4:10",
														"type": ""
													}
												],
												"src": "4770:419:10"
											},
											{
												"body": {
													"nativeSrc": "5301:62:10",
													"nodeType": "YulBlock",
													"src": "5301:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5323:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5323:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5331:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5331:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5319:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5319:3:10"
																		},
																		"nativeSrc": "5319:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5319:14:10"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "5335:20:10",
																		"nodeType": "YulLiteral",
																		"src": "5335:20:10",
																		"type": "",
																		"value": "Amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5312:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5312:6:10"
																},
																"nativeSrc": "5312:44:10",
																"nodeType": "YulFunctionCall",
																"src": "5312:44:10"
															},
															"nativeSrc": "5312:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "5312:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
												"nativeSrc": "5195:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5293:6:10",
														"nodeType": "YulTypedName",
														"src": "5293:6:10",
														"type": ""
													}
												],
												"src": "5195:168:10"
											},
											{
												"body": {
													"nativeSrc": "5515:220:10",
													"nodeType": "YulBlock",
													"src": "5515:220:10",
													"statements": [
														{
															"nativeSrc": "5525:74:10",
															"nodeType": "YulAssignment",
															"src": "5525:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5591:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5591:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5596:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5596:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5532:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5532:58:10"
																},
																"nativeSrc": "5532:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5532:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5525:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5525:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5697:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5697:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																	"nativeSrc": "5608:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5608:88:10"
																},
																"nativeSrc": "5608:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5608:93:10"
															},
															"nativeSrc": "5608:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5608:93:10"
														},
														{
															"nativeSrc": "5710:19:10",
															"nodeType": "YulAssignment",
															"src": "5710:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5721:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5721:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5726:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5726:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5717:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5717:3:10"
																},
																"nativeSrc": "5717:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5717:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5710:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5710:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5369:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5503:3:10",
														"nodeType": "YulTypedName",
														"src": "5503:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5511:3:10",
														"nodeType": "YulTypedName",
														"src": "5511:3:10",
														"type": ""
													}
												],
												"src": "5369:366:10"
											},
											{
												"body": {
													"nativeSrc": "5912:248:10",
													"nodeType": "YulBlock",
													"src": "5912:248:10",
													"statements": [
														{
															"nativeSrc": "5922:26:10",
															"nodeType": "YulAssignment",
															"src": "5922:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5934:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5934:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5945:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5945:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5930:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5930:3:10"
																},
																"nativeSrc": "5930:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5930:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5922:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5922:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5969:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5969:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5980:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5980:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5965:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5965:3:10"
																		},
																		"nativeSrc": "5965:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5965:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5988:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5988:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5994:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5994:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5984:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5984:3:10"
																		},
																		"nativeSrc": "5984:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5984:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5958:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5958:6:10"
																},
																"nativeSrc": "5958:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5958:47:10"
															},
															"nativeSrc": "5958:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5958:47:10"
														},
														{
															"nativeSrc": "6014:139:10",
															"nodeType": "YulAssignment",
															"src": "6014:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6148:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6148:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6022:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6022:124:10"
																},
																"nativeSrc": "6022:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6022:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6014:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6014:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5741:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5892:9:10",
														"nodeType": "YulTypedName",
														"src": "5892:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5907:4:10",
														"nodeType": "YulTypedName",
														"src": "5907:4:10",
														"type": ""
													}
												],
												"src": "5741:419:10"
											},
											{
												"body": {
													"nativeSrc": "6272:67:10",
													"nodeType": "YulBlock",
													"src": "6272:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6294:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6294:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6302:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6302:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6290:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6290:3:10"
																		},
																		"nativeSrc": "6290:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6290:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420636f6c6c61746572616c",
																		"kind": "string",
																		"nativeSrc": "6306:25:10",
																		"nodeType": "YulLiteral",
																		"src": "6306:25:10",
																		"type": "",
																		"value": "Insufficient collateral"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6283:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6283:6:10"
																},
																"nativeSrc": "6283:49:10",
																"nodeType": "YulFunctionCall",
																"src": "6283:49:10"
															},
															"nativeSrc": "6283:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "6283:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
												"nativeSrc": "6166:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6264:6:10",
														"nodeType": "YulTypedName",
														"src": "6264:6:10",
														"type": ""
													}
												],
												"src": "6166:173:10"
											},
											{
												"body": {
													"nativeSrc": "6491:220:10",
													"nodeType": "YulBlock",
													"src": "6491:220:10",
													"statements": [
														{
															"nativeSrc": "6501:74:10",
															"nodeType": "YulAssignment",
															"src": "6501:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6567:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6567:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6572:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6572:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6508:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "6508:58:10"
																},
																"nativeSrc": "6508:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6508:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6501:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6501:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6673:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6673:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
																	"nativeSrc": "6584:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "6584:88:10"
																},
																"nativeSrc": "6584:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6584:93:10"
															},
															"nativeSrc": "6584:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "6584:93:10"
														},
														{
															"nativeSrc": "6686:19:10",
															"nodeType": "YulAssignment",
															"src": "6686:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6697:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6697:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6702:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6702:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6693:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6693:3:10"
																},
																"nativeSrc": "6693:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6693:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6686:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6686:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6345:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6479:3:10",
														"nodeType": "YulTypedName",
														"src": "6479:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6487:3:10",
														"nodeType": "YulTypedName",
														"src": "6487:3:10",
														"type": ""
													}
												],
												"src": "6345:366:10"
											},
											{
												"body": {
													"nativeSrc": "6888:248:10",
													"nodeType": "YulBlock",
													"src": "6888:248:10",
													"statements": [
														{
															"nativeSrc": "6898:26:10",
															"nodeType": "YulAssignment",
															"src": "6898:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6910:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6910:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6921:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6921:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6906:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6906:3:10"
																},
																"nativeSrc": "6906:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6906:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6898:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6898:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6945:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6945:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6956:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6956:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6941:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6941:3:10"
																		},
																		"nativeSrc": "6941:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6941:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6964:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6964:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6970:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6970:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6960:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6960:3:10"
																		},
																		"nativeSrc": "6960:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6960:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6934:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6934:6:10"
																},
																"nativeSrc": "6934:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6934:47:10"
															},
															"nativeSrc": "6934:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6934:47:10"
														},
														{
															"nativeSrc": "6990:139:10",
															"nodeType": "YulAssignment",
															"src": "6990:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7124:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7124:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6998:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6998:124:10"
																},
																"nativeSrc": "6998:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6998:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6990:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6990:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6717:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6868:9:10",
														"nodeType": "YulTypedName",
														"src": "6868:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6883:4:10",
														"nodeType": "YulTypedName",
														"src": "6883:4:10",
														"type": ""
													}
												],
												"src": "6717:419:10"
											},
											{
												"body": {
													"nativeSrc": "7170:152:10",
													"nodeType": "YulBlock",
													"src": "7170:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7187:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7187:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7190:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7190:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7180:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7180:6:10"
																},
																"nativeSrc": "7180:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7180:88:10"
															},
															"nativeSrc": "7180:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7180:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7284:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7284:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7287:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7287:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7277:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7277:6:10"
																},
																"nativeSrc": "7277:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7277:15:10"
															},
															"nativeSrc": "7277:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7277:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7308:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7308:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7311:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7311:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7301:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7301:6:10"
																},
																"nativeSrc": "7301:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7301:15:10"
															},
															"nativeSrc": "7301:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7301:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7142:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7142:180:10"
											},
											{
												"body": {
													"nativeSrc": "7373:149:10",
													"nodeType": "YulBlock",
													"src": "7373:149:10",
													"statements": [
														{
															"nativeSrc": "7383:25:10",
															"nodeType": "YulAssignment",
															"src": "7383:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7406:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7406:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7388:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7388:17:10"
																},
																"nativeSrc": "7388:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7388:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7383:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7383:1:10"
																}
															]
														},
														{
															"nativeSrc": "7417:25:10",
															"nodeType": "YulAssignment",
															"src": "7417:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7440:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7440:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7422:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7422:17:10"
																},
																"nativeSrc": "7422:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7422:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7417:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7417:1:10"
																}
															]
														},
														{
															"nativeSrc": "7451:17:10",
															"nodeType": "YulAssignment",
															"src": "7451:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7463:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7463:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7466:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7466:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7459:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7459:3:10"
																},
																"nativeSrc": "7459:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7459:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7451:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7451:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7493:22:10",
																"nodeType": "YulBlock",
																"src": "7493:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7495:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7495:16:10"
																			},
																			"nativeSrc": "7495:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7495:18:10"
																		},
																		"nativeSrc": "7495:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7495:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7484:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7484:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7490:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7490:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7481:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7481:2:10"
																},
																"nativeSrc": "7481:11:10",
																"nodeType": "YulFunctionCall",
																"src": "7481:11:10"
															},
															"nativeSrc": "7478:37:10",
															"nodeType": "YulIf",
															"src": "7478:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7328:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7359:1:10",
														"nodeType": "YulTypedName",
														"src": "7359:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7362:1:10",
														"nodeType": "YulTypedName",
														"src": "7362:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7368:4:10",
														"nodeType": "YulTypedName",
														"src": "7368:4:10",
														"type": ""
													}
												],
												"src": "7328:194:10"
											},
											{
												"body": {
													"nativeSrc": "7576:362:10",
													"nodeType": "YulBlock",
													"src": "7576:362:10",
													"statements": [
														{
															"nativeSrc": "7586:25:10",
															"nodeType": "YulAssignment",
															"src": "7586:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7609:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7609:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7591:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7591:17:10"
																},
																"nativeSrc": "7591:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7591:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7586:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7586:1:10"
																}
															]
														},
														{
															"nativeSrc": "7620:25:10",
															"nodeType": "YulAssignment",
															"src": "7620:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7643:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7643:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7625:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7625:17:10"
																},
																"nativeSrc": "7625:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7625:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7620:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7620:1:10"
																}
															]
														},
														{
															"nativeSrc": "7654:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7654:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7677:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7677:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7680:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7680:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7673:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7673:3:10"
																},
																"nativeSrc": "7673:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7673:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7658:11:10",
																	"nodeType": "YulTypedName",
																	"src": "7658:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7691:41:10",
															"nodeType": "YulAssignment",
															"src": "7691:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7720:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "7720:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7702:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7702:17:10"
																},
																"nativeSrc": "7702:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7702:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7691:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "7691:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7909:22:10",
																"nodeType": "YulBlock",
																"src": "7909:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7911:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7911:16:10"
																			},
																			"nativeSrc": "7911:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7911:18:10"
																		},
																		"nativeSrc": "7911:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7911:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7842:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "7842:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7835:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "7835:6:10"
																				},
																				"nativeSrc": "7835:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7835:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7865:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "7865:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7872:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "7872:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7881:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "7881:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7868:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "7868:3:10"
																						},
																						"nativeSrc": "7868:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "7868:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7862:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7862:2:10"
																				},
																				"nativeSrc": "7862:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7862:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7815:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7815:2:10"
																		},
																		"nativeSrc": "7815:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7815:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7795:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7795:6:10"
																},
																"nativeSrc": "7795:113:10",
																"nodeType": "YulFunctionCall",
																"src": "7795:113:10"
															},
															"nativeSrc": "7792:139:10",
															"nodeType": "YulIf",
															"src": "7792:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7528:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7559:1:10",
														"nodeType": "YulTypedName",
														"src": "7559:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7562:1:10",
														"nodeType": "YulTypedName",
														"src": "7562:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7568:7:10",
														"nodeType": "YulTypedName",
														"src": "7568:7:10",
														"type": ""
													}
												],
												"src": "7528:410:10"
											},
											{
												"body": {
													"nativeSrc": "7972:152:10",
													"nodeType": "YulBlock",
													"src": "7972:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7989:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7989:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7992:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7992:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7982:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:10"
																},
																"nativeSrc": "7982:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7982:88:10"
															},
															"nativeSrc": "7982:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7982:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8086:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8086:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8089:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8089:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8079:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8079:6:10"
																},
																"nativeSrc": "8079:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8079:15:10"
															},
															"nativeSrc": "8079:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8079:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8110:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8110:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8113:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8113:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8103:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8103:6:10"
																},
																"nativeSrc": "8103:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8103:15:10"
															},
															"nativeSrc": "8103:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8103:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7944:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7944:180:10"
											},
											{
												"body": {
													"nativeSrc": "8172:143:10",
													"nodeType": "YulBlock",
													"src": "8172:143:10",
													"statements": [
														{
															"nativeSrc": "8182:25:10",
															"nodeType": "YulAssignment",
															"src": "8182:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8205:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8205:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8187:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8187:17:10"
																},
																"nativeSrc": "8187:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8187:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8182:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8182:1:10"
																}
															]
														},
														{
															"nativeSrc": "8216:25:10",
															"nodeType": "YulAssignment",
															"src": "8216:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8239:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8239:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8221:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8221:17:10"
																},
																"nativeSrc": "8221:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8221:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8216:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8216:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8263:22:10",
																"nodeType": "YulBlock",
																"src": "8263:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8265:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8265:16:10"
																			},
																			"nativeSrc": "8265:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8265:18:10"
																		},
																		"nativeSrc": "8265:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8265:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8260:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8260:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8253:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8253:6:10"
																},
																"nativeSrc": "8253:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8253:9:10"
															},
															"nativeSrc": "8250:35:10",
															"nodeType": "YulIf",
															"src": "8250:35:10"
														},
														{
															"nativeSrc": "8295:14:10",
															"nodeType": "YulAssignment",
															"src": "8295:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8304:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8304:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8307:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8307:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8300:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8300:3:10"
																},
																"nativeSrc": "8300:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8300:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8295:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8295:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8130:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8161:1:10",
														"nodeType": "YulTypedName",
														"src": "8161:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8164:1:10",
														"nodeType": "YulTypedName",
														"src": "8164:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8170:1:10",
														"nodeType": "YulTypedName",
														"src": "8170:1:10",
														"type": ""
													}
												],
												"src": "8130:185:10"
											},
											{
												"body": {
													"nativeSrc": "8427:125:10",
													"nodeType": "YulBlock",
													"src": "8427:125:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8449:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8449:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8457:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8457:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8445:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8445:3:10"
																		},
																		"nativeSrc": "8445:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8445:14:10"
																	},
																	{
																		"hexValue": "5769746864726177616c20776f756c6420756e646572636f6c6c61746572616c",
																		"kind": "string",
																		"nativeSrc": "8461:34:10",
																		"nodeType": "YulLiteral",
																		"src": "8461:34:10",
																		"type": "",
																		"value": "Withdrawal would undercollateral"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8438:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8438:6:10"
																},
																"nativeSrc": "8438:58:10",
																"nodeType": "YulFunctionCall",
																"src": "8438:58:10"
															},
															"nativeSrc": "8438:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "8438:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8517:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8517:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8525:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8525:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8513:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8513:3:10"
																		},
																		"nativeSrc": "8513:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8513:15:10"
																	},
																	{
																		"hexValue": "697a6520706f736974696f6e",
																		"kind": "string",
																		"nativeSrc": "8530:14:10",
																		"nodeType": "YulLiteral",
																		"src": "8530:14:10",
																		"type": "",
																		"value": "ize position"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8506:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8506:6:10"
																},
																"nativeSrc": "8506:39:10",
																"nodeType": "YulFunctionCall",
																"src": "8506:39:10"
															},
															"nativeSrc": "8506:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "8506:39:10"
														}
													]
												},
												"name": "store_literal_in_memory_4c5353a6055dceb26ed4ee990197a6fedbded8b234b7bec8b5a421767149976d",
												"nativeSrc": "8321:231:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8419:6:10",
														"nodeType": "YulTypedName",
														"src": "8419:6:10",
														"type": ""
													}
												],
												"src": "8321:231:10"
											},
											{
												"body": {
													"nativeSrc": "8704:220:10",
													"nodeType": "YulBlock",
													"src": "8704:220:10",
													"statements": [
														{
															"nativeSrc": "8714:74:10",
															"nodeType": "YulAssignment",
															"src": "8714:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8780:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8780:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8785:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8785:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8721:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8721:58:10"
																},
																"nativeSrc": "8721:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8721:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8714:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8714:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8886:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8886:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4c5353a6055dceb26ed4ee990197a6fedbded8b234b7bec8b5a421767149976d",
																	"nativeSrc": "8797:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8797:88:10"
																},
																"nativeSrc": "8797:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8797:93:10"
															},
															"nativeSrc": "8797:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8797:93:10"
														},
														{
															"nativeSrc": "8899:19:10",
															"nodeType": "YulAssignment",
															"src": "8899:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8910:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8910:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8915:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8915:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8906:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8906:3:10"
																},
																"nativeSrc": "8906:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8906:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8899:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8899:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4c5353a6055dceb26ed4ee990197a6fedbded8b234b7bec8b5a421767149976d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8558:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8692:3:10",
														"nodeType": "YulTypedName",
														"src": "8692:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8700:3:10",
														"nodeType": "YulTypedName",
														"src": "8700:3:10",
														"type": ""
													}
												],
												"src": "8558:366:10"
											},
											{
												"body": {
													"nativeSrc": "9101:248:10",
													"nodeType": "YulBlock",
													"src": "9101:248:10",
													"statements": [
														{
															"nativeSrc": "9111:26:10",
															"nodeType": "YulAssignment",
															"src": "9111:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9123:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9123:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9134:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9134:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9119:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9119:3:10"
																},
																"nativeSrc": "9119:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9119:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9111:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9111:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9158:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9158:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9169:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9169:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9154:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9154:3:10"
																		},
																		"nativeSrc": "9154:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9154:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9177:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9177:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9183:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9183:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9173:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9173:3:10"
																		},
																		"nativeSrc": "9173:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9173:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9147:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9147:6:10"
																},
																"nativeSrc": "9147:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9147:47:10"
															},
															"nativeSrc": "9147:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9147:47:10"
														},
														{
															"nativeSrc": "9203:139:10",
															"nodeType": "YulAssignment",
															"src": "9203:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9337:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9337:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4c5353a6055dceb26ed4ee990197a6fedbded8b234b7bec8b5a421767149976d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9211:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9211:124:10"
																},
																"nativeSrc": "9211:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9211:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9203:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9203:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c5353a6055dceb26ed4ee990197a6fedbded8b234b7bec8b5a421767149976d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8930:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9081:9:10",
														"nodeType": "YulTypedName",
														"src": "9081:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9096:4:10",
														"nodeType": "YulTypedName",
														"src": "9096:4:10",
														"type": ""
													}
												],
												"src": "8930:419:10"
											},
											{
												"body": {
													"nativeSrc": "9461:65:10",
													"nodeType": "YulBlock",
													"src": "9461:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9483:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9483:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9491:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9491:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9479:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9479:3:10"
																		},
																		"nativeSrc": "9479:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9479:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "9495:23:10",
																		"nodeType": "YulLiteral",
																		"src": "9495:23:10",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9472:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9472:6:10"
																},
																"nativeSrc": "9472:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9472:47:10"
															},
															"nativeSrc": "9472:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9472:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nativeSrc": "9355:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9453:6:10",
														"nodeType": "YulTypedName",
														"src": "9453:6:10",
														"type": ""
													}
												],
												"src": "9355:171:10"
											},
											{
												"body": {
													"nativeSrc": "9678:220:10",
													"nodeType": "YulBlock",
													"src": "9678:220:10",
													"statements": [
														{
															"nativeSrc": "9688:74:10",
															"nodeType": "YulAssignment",
															"src": "9688:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9754:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9754:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9759:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9759:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9695:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9695:58:10"
																},
																"nativeSrc": "9695:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9695:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9688:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9688:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9860:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9860:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nativeSrc": "9771:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9771:88:10"
																},
																"nativeSrc": "9771:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9771:93:10"
															},
															"nativeSrc": "9771:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9771:93:10"
														},
														{
															"nativeSrc": "9873:19:10",
															"nodeType": "YulAssignment",
															"src": "9873:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9884:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9884:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9889:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9889:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9880:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9880:3:10"
																},
																"nativeSrc": "9880:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9880:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9873:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9873:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9532:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9666:3:10",
														"nodeType": "YulTypedName",
														"src": "9666:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9674:3:10",
														"nodeType": "YulTypedName",
														"src": "9674:3:10",
														"type": ""
													}
												],
												"src": "9532:366:10"
											},
											{
												"body": {
													"nativeSrc": "10075:248:10",
													"nodeType": "YulBlock",
													"src": "10075:248:10",
													"statements": [
														{
															"nativeSrc": "10085:26:10",
															"nodeType": "YulAssignment",
															"src": "10085:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10097:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10097:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10108:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10108:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10093:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10093:3:10"
																},
																"nativeSrc": "10093:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10093:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10085:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10085:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10132:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10132:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10143:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10143:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10128:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10128:3:10"
																		},
																		"nativeSrc": "10128:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10128:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10151:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10151:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10157:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10157:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10147:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10147:3:10"
																		},
																		"nativeSrc": "10147:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10147:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10121:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10121:6:10"
																},
																"nativeSrc": "10121:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10121:47:10"
															},
															"nativeSrc": "10121:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10121:47:10"
														},
														{
															"nativeSrc": "10177:139:10",
															"nodeType": "YulAssignment",
															"src": "10177:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10311:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10311:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10185:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10185:124:10"
																},
																"nativeSrc": "10185:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10185:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10177:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10177:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9904:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10055:9:10",
														"nodeType": "YulTypedName",
														"src": "10055:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10070:4:10",
														"nodeType": "YulTypedName",
														"src": "10070:4:10",
														"type": ""
													}
												],
												"src": "9904:419:10"
											},
											{
												"body": {
													"nativeSrc": "10373:147:10",
													"nodeType": "YulBlock",
													"src": "10373:147:10",
													"statements": [
														{
															"nativeSrc": "10383:25:10",
															"nodeType": "YulAssignment",
															"src": "10383:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10406:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10406:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10388:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10388:17:10"
																},
																"nativeSrc": "10388:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10388:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10383:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10383:1:10"
																}
															]
														},
														{
															"nativeSrc": "10417:25:10",
															"nodeType": "YulAssignment",
															"src": "10417:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10440:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10440:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10422:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10422:17:10"
																},
																"nativeSrc": "10422:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10422:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10417:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10417:1:10"
																}
															]
														},
														{
															"nativeSrc": "10451:16:10",
															"nodeType": "YulAssignment",
															"src": "10451:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10462:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10462:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10465:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10465:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10458:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10458:3:10"
																},
																"nativeSrc": "10458:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10458:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10451:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10451:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10491:22:10",
																"nodeType": "YulBlock",
																"src": "10491:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10493:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10493:16:10"
																			},
																			"nativeSrc": "10493:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10493:18:10"
																		},
																		"nativeSrc": "10493:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10493:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10483:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10483:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10486:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10486:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10480:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10480:2:10"
																},
																"nativeSrc": "10480:10:10",
																"nodeType": "YulFunctionCall",
																"src": "10480:10:10"
															},
															"nativeSrc": "10477:36:10",
															"nodeType": "YulIf",
															"src": "10477:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10329:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10360:1:10",
														"nodeType": "YulTypedName",
														"src": "10360:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10363:1:10",
														"nodeType": "YulTypedName",
														"src": "10363:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10369:3:10",
														"nodeType": "YulTypedName",
														"src": "10369:3:10",
														"type": ""
													}
												],
												"src": "10329:191:10"
											},
											{
												"body": {
													"nativeSrc": "10632:115:10",
													"nodeType": "YulBlock",
													"src": "10632:115:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10654:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10654:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10662:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10662:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10650:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10650:3:10"
																		},
																		"nativeSrc": "10650:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10650:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420636f6c6c61746572616c20666f7220626f7272",
																		"kind": "string",
																		"nativeSrc": "10666:34:10",
																		"nodeType": "YulLiteral",
																		"src": "10666:34:10",
																		"type": "",
																		"value": "Insufficient collateral for borr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10643:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10643:6:10"
																},
																"nativeSrc": "10643:58:10",
																"nodeType": "YulFunctionCall",
																"src": "10643:58:10"
															},
															"nativeSrc": "10643:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "10643:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10722:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10722:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10730:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10730:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10718:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10718:3:10"
																		},
																		"nativeSrc": "10718:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10718:15:10"
																	},
																	{
																		"hexValue": "6f77",
																		"kind": "string",
																		"nativeSrc": "10735:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10735:4:10",
																		"type": "",
																		"value": "ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10711:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10711:6:10"
																},
																"nativeSrc": "10711:29:10",
																"nodeType": "YulFunctionCall",
																"src": "10711:29:10"
															},
															"nativeSrc": "10711:29:10",
															"nodeType": "YulExpressionStatement",
															"src": "10711:29:10"
														}
													]
												},
												"name": "store_literal_in_memory_d723c5210232a1ee5d4f00c6eaa61ffd90af53d796bbd326e2a3aed6c85c4784",
												"nativeSrc": "10526:221:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10624:6:10",
														"nodeType": "YulTypedName",
														"src": "10624:6:10",
														"type": ""
													}
												],
												"src": "10526:221:10"
											},
											{
												"body": {
													"nativeSrc": "10899:220:10",
													"nodeType": "YulBlock",
													"src": "10899:220:10",
													"statements": [
														{
															"nativeSrc": "10909:74:10",
															"nodeType": "YulAssignment",
															"src": "10909:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10975:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10975:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10980:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10980:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10916:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10916:58:10"
																},
																"nativeSrc": "10916:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10916:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10909:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10909:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11081:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11081:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d723c5210232a1ee5d4f00c6eaa61ffd90af53d796bbd326e2a3aed6c85c4784",
																	"nativeSrc": "10992:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10992:88:10"
																},
																"nativeSrc": "10992:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10992:93:10"
															},
															"nativeSrc": "10992:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10992:93:10"
														},
														{
															"nativeSrc": "11094:19:10",
															"nodeType": "YulAssignment",
															"src": "11094:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11105:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11105:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11110:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11110:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11101:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11101:3:10"
																},
																"nativeSrc": "11101:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11101:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11094:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11094:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d723c5210232a1ee5d4f00c6eaa61ffd90af53d796bbd326e2a3aed6c85c4784_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10753:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10887:3:10",
														"nodeType": "YulTypedName",
														"src": "10887:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10895:3:10",
														"nodeType": "YulTypedName",
														"src": "10895:3:10",
														"type": ""
													}
												],
												"src": "10753:366:10"
											},
											{
												"body": {
													"nativeSrc": "11296:248:10",
													"nodeType": "YulBlock",
													"src": "11296:248:10",
													"statements": [
														{
															"nativeSrc": "11306:26:10",
															"nodeType": "YulAssignment",
															"src": "11306:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11318:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11318:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11329:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11329:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11314:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11314:3:10"
																},
																"nativeSrc": "11314:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11314:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11306:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11306:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11353:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11353:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11364:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11364:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11349:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11349:3:10"
																		},
																		"nativeSrc": "11349:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11349:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11372:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11372:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11378:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11378:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11368:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11368:3:10"
																		},
																		"nativeSrc": "11368:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11368:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11342:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11342:6:10"
																},
																"nativeSrc": "11342:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11342:47:10"
															},
															"nativeSrc": "11342:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11342:47:10"
														},
														{
															"nativeSrc": "11398:139:10",
															"nodeType": "YulAssignment",
															"src": "11398:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11532:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11532:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d723c5210232a1ee5d4f00c6eaa61ffd90af53d796bbd326e2a3aed6c85c4784_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11406:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11406:124:10"
																},
																"nativeSrc": "11406:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11406:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11398:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11398:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d723c5210232a1ee5d4f00c6eaa61ffd90af53d796bbd326e2a3aed6c85c4784__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11125:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11276:9:10",
														"nodeType": "YulTypedName",
														"src": "11276:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11291:4:10",
														"nodeType": "YulTypedName",
														"src": "11291:4:10",
														"type": ""
													}
												],
												"src": "11125:419:10"
											},
											{
												"body": {
													"nativeSrc": "11656:118:10",
													"nodeType": "YulBlock",
													"src": "11656:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11678:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11678:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11686:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11686:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11674:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11674:3:10"
																		},
																		"nativeSrc": "11674:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11674:14:10"
																	},
																	{
																		"hexValue": "526570617920616d6f756e74206578636565647320626f72726f776564206261",
																		"kind": "string",
																		"nativeSrc": "11690:34:10",
																		"nodeType": "YulLiteral",
																		"src": "11690:34:10",
																		"type": "",
																		"value": "Repay amount exceeds borrowed ba"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11667:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11667:6:10"
																},
																"nativeSrc": "11667:58:10",
																"nodeType": "YulFunctionCall",
																"src": "11667:58:10"
															},
															"nativeSrc": "11667:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "11667:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11746:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11746:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11754:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11754:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11742:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11742:3:10"
																		},
																		"nativeSrc": "11742:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11742:15:10"
																	},
																	{
																		"hexValue": "6c616e6365",
																		"kind": "string",
																		"nativeSrc": "11759:7:10",
																		"nodeType": "YulLiteral",
																		"src": "11759:7:10",
																		"type": "",
																		"value": "lance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11735:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11735:6:10"
																},
																"nativeSrc": "11735:32:10",
																"nodeType": "YulFunctionCall",
																"src": "11735:32:10"
															},
															"nativeSrc": "11735:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "11735:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_240498d7579bea075a03e85335d7e0cf15113dc3a56e365a5a3e62864ea057ef",
												"nativeSrc": "11550:224:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11648:6:10",
														"nodeType": "YulTypedName",
														"src": "11648:6:10",
														"type": ""
													}
												],
												"src": "11550:224:10"
											},
											{
												"body": {
													"nativeSrc": "11926:220:10",
													"nodeType": "YulBlock",
													"src": "11926:220:10",
													"statements": [
														{
															"nativeSrc": "11936:74:10",
															"nodeType": "YulAssignment",
															"src": "11936:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12002:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12002:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12007:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12007:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11943:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11943:58:10"
																},
																"nativeSrc": "11943:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11943:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11936:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11936:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12108:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12108:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_240498d7579bea075a03e85335d7e0cf15113dc3a56e365a5a3e62864ea057ef",
																	"nativeSrc": "12019:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12019:88:10"
																},
																"nativeSrc": "12019:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12019:93:10"
															},
															"nativeSrc": "12019:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12019:93:10"
														},
														{
															"nativeSrc": "12121:19:10",
															"nodeType": "YulAssignment",
															"src": "12121:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12132:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12132:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12137:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12137:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12128:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12128:3:10"
																},
																"nativeSrc": "12128:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12128:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12121:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12121:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_240498d7579bea075a03e85335d7e0cf15113dc3a56e365a5a3e62864ea057ef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11780:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11914:3:10",
														"nodeType": "YulTypedName",
														"src": "11914:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11922:3:10",
														"nodeType": "YulTypedName",
														"src": "11922:3:10",
														"type": ""
													}
												],
												"src": "11780:366:10"
											},
											{
												"body": {
													"nativeSrc": "12323:248:10",
													"nodeType": "YulBlock",
													"src": "12323:248:10",
													"statements": [
														{
															"nativeSrc": "12333:26:10",
															"nodeType": "YulAssignment",
															"src": "12333:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12345:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12345:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12356:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12356:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12341:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12341:3:10"
																},
																"nativeSrc": "12341:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12341:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12333:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12333:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12380:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12380:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12391:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12391:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12376:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12376:3:10"
																		},
																		"nativeSrc": "12376:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12376:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12399:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12399:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12405:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12405:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12395:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12395:3:10"
																		},
																		"nativeSrc": "12395:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12395:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12369:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12369:6:10"
																},
																"nativeSrc": "12369:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12369:47:10"
															},
															"nativeSrc": "12369:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12369:47:10"
														},
														{
															"nativeSrc": "12425:139:10",
															"nodeType": "YulAssignment",
															"src": "12425:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12559:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12559:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_240498d7579bea075a03e85335d7e0cf15113dc3a56e365a5a3e62864ea057ef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12433:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12433:124:10"
																},
																"nativeSrc": "12433:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12433:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12425:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12425:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_240498d7579bea075a03e85335d7e0cf15113dc3a56e365a5a3e62864ea057ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12152:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12303:9:10",
														"nodeType": "YulTypedName",
														"src": "12303:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12318:4:10",
														"nodeType": "YulTypedName",
														"src": "12318:4:10",
														"type": ""
													}
												],
												"src": "12152:419:10"
											},
											{
												"body": {
													"nativeSrc": "12683:67:10",
													"nodeType": "YulBlock",
													"src": "12683:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12705:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12705:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12713:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12713:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12701:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12701:3:10"
																		},
																		"nativeSrc": "12701:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12701:14:10"
																	},
																	{
																		"hexValue": "466163746f72206d757374206265203c3d203130303030",
																		"kind": "string",
																		"nativeSrc": "12717:25:10",
																		"nodeType": "YulLiteral",
																		"src": "12717:25:10",
																		"type": "",
																		"value": "Factor must be <= 10000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12694:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12694:6:10"
																},
																"nativeSrc": "12694:49:10",
																"nodeType": "YulFunctionCall",
																"src": "12694:49:10"
															},
															"nativeSrc": "12694:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "12694:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_60a50693cd6710402e4138e1cc38d3898d07421a4993f4bc27b72d5c442c766b",
												"nativeSrc": "12577:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12675:6:10",
														"nodeType": "YulTypedName",
														"src": "12675:6:10",
														"type": ""
													}
												],
												"src": "12577:173:10"
											},
											{
												"body": {
													"nativeSrc": "12902:220:10",
													"nodeType": "YulBlock",
													"src": "12902:220:10",
													"statements": [
														{
															"nativeSrc": "12912:74:10",
															"nodeType": "YulAssignment",
															"src": "12912:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12978:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12978:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12983:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12983:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12919:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12919:58:10"
																},
																"nativeSrc": "12919:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12919:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12912:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12912:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13084:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13084:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_60a50693cd6710402e4138e1cc38d3898d07421a4993f4bc27b72d5c442c766b",
																	"nativeSrc": "12995:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12995:88:10"
																},
																"nativeSrc": "12995:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12995:93:10"
															},
															"nativeSrc": "12995:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12995:93:10"
														},
														{
															"nativeSrc": "13097:19:10",
															"nodeType": "YulAssignment",
															"src": "13097:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13108:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13108:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13113:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13113:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13104:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13104:3:10"
																},
																"nativeSrc": "13104:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13104:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13097:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13097:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_60a50693cd6710402e4138e1cc38d3898d07421a4993f4bc27b72d5c442c766b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12756:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12890:3:10",
														"nodeType": "YulTypedName",
														"src": "12890:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12898:3:10",
														"nodeType": "YulTypedName",
														"src": "12898:3:10",
														"type": ""
													}
												],
												"src": "12756:366:10"
											},
											{
												"body": {
													"nativeSrc": "13299:248:10",
													"nodeType": "YulBlock",
													"src": "13299:248:10",
													"statements": [
														{
															"nativeSrc": "13309:26:10",
															"nodeType": "YulAssignment",
															"src": "13309:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13321:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13321:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13332:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13332:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13317:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13317:3:10"
																},
																"nativeSrc": "13317:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13317:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13309:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13309:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13356:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13356:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13367:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13367:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13352:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13352:3:10"
																		},
																		"nativeSrc": "13352:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13352:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13375:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13375:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13381:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13381:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13371:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13371:3:10"
																		},
																		"nativeSrc": "13371:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13371:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13345:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13345:6:10"
																},
																"nativeSrc": "13345:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13345:47:10"
															},
															"nativeSrc": "13345:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13345:47:10"
														},
														{
															"nativeSrc": "13401:139:10",
															"nodeType": "YulAssignment",
															"src": "13401:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13535:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13535:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_60a50693cd6710402e4138e1cc38d3898d07421a4993f4bc27b72d5c442c766b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13409:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13409:124:10"
																},
																"nativeSrc": "13409:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13409:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13401:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13401:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60a50693cd6710402e4138e1cc38d3898d07421a4993f4bc27b72d5c442c766b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13128:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13279:9:10",
														"nodeType": "YulTypedName",
														"src": "13279:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13294:4:10",
														"nodeType": "YulTypedName",
														"src": "13294:4:10",
														"type": ""
													}
												],
												"src": "13128:419:10"
											},
											{
												"body": {
													"nativeSrc": "13592:189:10",
													"nodeType": "YulBlock",
													"src": "13592:189:10",
													"statements": [
														{
															"nativeSrc": "13602:32:10",
															"nodeType": "YulAssignment",
															"src": "13602:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13628:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "13628:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "13611:16:10",
																	"nodeType": "YulIdentifier",
																	"src": "13611:16:10"
																},
																"nativeSrc": "13611:23:10",
																"nodeType": "YulFunctionCall",
																"src": "13611:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13602:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "13602:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13724:22:10",
																"nodeType": "YulBlock",
																"src": "13724:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13726:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "13726:16:10"
																			},
																			"nativeSrc": "13726:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13726:18:10"
																		},
																		"nativeSrc": "13726:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13726:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13649:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "13649:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13656:66:10",
																		"nodeType": "YulLiteral",
																		"src": "13656:66:10",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13646:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "13646:2:10"
																},
																"nativeSrc": "13646:77:10",
																"nodeType": "YulFunctionCall",
																"src": "13646:77:10"
															},
															"nativeSrc": "13643:103:10",
															"nodeType": "YulIf",
															"src": "13643:103:10"
														},
														{
															"nativeSrc": "13755:20:10",
															"nodeType": "YulAssignment",
															"src": "13755:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13766:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13766:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13769:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "13769:5:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13762:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13762:3:10"
																},
																"nativeSrc": "13762:13:10",
																"nodeType": "YulFunctionCall",
																"src": "13762:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13755:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13755:3:10"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nativeSrc": "13553:228:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13578:5:10",
														"nodeType": "YulTypedName",
														"src": "13578:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13588:3:10",
														"nodeType": "YulTypedName",
														"src": "13588:3:10",
														"type": ""
													}
												],
												"src": "13553:228:10"
											},
											{
												"body": {
													"nativeSrc": "13893:75:10",
													"nodeType": "YulBlock",
													"src": "13893:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13915:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13915:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13923:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13923:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13911:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13911:3:10"
																		},
																		"nativeSrc": "13911:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13911:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "13927:33:10",
																		"nodeType": "YulLiteral",
																		"src": "13927:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13904:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13904:6:10"
																},
																"nativeSrc": "13904:57:10",
																"nodeType": "YulFunctionCall",
																"src": "13904:57:10"
															},
															"nativeSrc": "13904:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "13904:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "13787:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13885:6:10",
														"nodeType": "YulTypedName",
														"src": "13885:6:10",
														"type": ""
													}
												],
												"src": "13787:181:10"
											},
											{
												"body": {
													"nativeSrc": "14120:220:10",
													"nodeType": "YulBlock",
													"src": "14120:220:10",
													"statements": [
														{
															"nativeSrc": "14130:74:10",
															"nodeType": "YulAssignment",
															"src": "14130:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14196:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14196:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14201:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14201:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14137:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14137:58:10"
																},
																"nativeSrc": "14137:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14137:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14130:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14130:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14302:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14302:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "14213:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14213:88:10"
																},
																"nativeSrc": "14213:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14213:93:10"
															},
															"nativeSrc": "14213:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14213:93:10"
														},
														{
															"nativeSrc": "14315:19:10",
															"nodeType": "YulAssignment",
															"src": "14315:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14326:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14326:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14331:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14331:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14322:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14322:3:10"
																},
																"nativeSrc": "14322:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14322:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14315:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14315:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13974:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14108:3:10",
														"nodeType": "YulTypedName",
														"src": "14108:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14116:3:10",
														"nodeType": "YulTypedName",
														"src": "14116:3:10",
														"type": ""
													}
												],
												"src": "13974:366:10"
											},
											{
												"body": {
													"nativeSrc": "14517:248:10",
													"nodeType": "YulBlock",
													"src": "14517:248:10",
													"statements": [
														{
															"nativeSrc": "14527:26:10",
															"nodeType": "YulAssignment",
															"src": "14527:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14539:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14539:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14550:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14550:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14535:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14535:3:10"
																},
																"nativeSrc": "14535:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14535:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14527:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14527:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14574:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14574:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14585:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14585:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14570:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14570:3:10"
																		},
																		"nativeSrc": "14570:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14570:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14593:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14593:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14599:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14599:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14589:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14589:3:10"
																		},
																		"nativeSrc": "14589:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14589:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14563:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14563:6:10"
																},
																"nativeSrc": "14563:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14563:47:10"
															},
															"nativeSrc": "14563:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14563:47:10"
														},
														{
															"nativeSrc": "14619:139:10",
															"nodeType": "YulAssignment",
															"src": "14619:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14753:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14753:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14627:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14627:124:10"
																},
																"nativeSrc": "14627:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14627:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14619:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14619:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14346:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14497:9:10",
														"nodeType": "YulTypedName",
														"src": "14497:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14512:4:10",
														"nodeType": "YulTypedName",
														"src": "14512:4:10",
														"type": ""
													}
												],
												"src": "14346:419:10"
											},
											{
												"body": {
													"nativeSrc": "14897:206:10",
													"nodeType": "YulBlock",
													"src": "14897:206:10",
													"statements": [
														{
															"nativeSrc": "14907:26:10",
															"nodeType": "YulAssignment",
															"src": "14907:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14919:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14919:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14930:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14930:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14915:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14915:3:10"
																},
																"nativeSrc": "14915:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14915:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14907:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14907:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14987:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14987:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15000:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15000:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15011:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15011:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14996:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14996:3:10"
																		},
																		"nativeSrc": "14996:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14996:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14943:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "14943:43:10"
																},
																"nativeSrc": "14943:71:10",
																"nodeType": "YulFunctionCall",
																"src": "14943:71:10"
															},
															"nativeSrc": "14943:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "14943:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15068:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15068:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15081:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15081:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15092:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15092:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15077:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15077:3:10"
																		},
																		"nativeSrc": "15077:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15077:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15024:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15024:43:10"
																},
																"nativeSrc": "15024:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15024:72:10"
															},
															"nativeSrc": "15024:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15024:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14771:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14861:9:10",
														"nodeType": "YulTypedName",
														"src": "14861:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14873:6:10",
														"nodeType": "YulTypedName",
														"src": "14873:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14881:6:10",
														"nodeType": "YulTypedName",
														"src": "14881:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14892:4:10",
														"nodeType": "YulTypedName",
														"src": "14892:4:10",
														"type": ""
													}
												],
												"src": "14771:332:10"
											},
											{
												"body": {
													"nativeSrc": "15263:288:10",
													"nodeType": "YulBlock",
													"src": "15263:288:10",
													"statements": [
														{
															"nativeSrc": "15273:26:10",
															"nodeType": "YulAssignment",
															"src": "15273:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15285:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15285:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15296:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15296:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15281:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15281:3:10"
																},
																"nativeSrc": "15281:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15281:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15273:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15273:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15353:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15353:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15366:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15366:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15377:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15377:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15362:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15362:3:10"
																		},
																		"nativeSrc": "15362:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15362:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15309:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15309:43:10"
																},
																"nativeSrc": "15309:71:10",
																"nodeType": "YulFunctionCall",
																"src": "15309:71:10"
															},
															"nativeSrc": "15309:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "15309:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15434:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15434:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15447:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15447:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15458:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15458:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15443:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15443:3:10"
																		},
																		"nativeSrc": "15443:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15443:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15390:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15390:43:10"
																},
																"nativeSrc": "15390:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15390:72:10"
															},
															"nativeSrc": "15390:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15390:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15516:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15516:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15529:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15529:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15540:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15540:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15525:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15525:3:10"
																		},
																		"nativeSrc": "15525:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15525:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15472:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15472:43:10"
																},
																"nativeSrc": "15472:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15472:72:10"
															},
															"nativeSrc": "15472:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15472:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15109:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15219:9:10",
														"nodeType": "YulTypedName",
														"src": "15219:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15231:6:10",
														"nodeType": "YulTypedName",
														"src": "15231:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15239:6:10",
														"nodeType": "YulTypedName",
														"src": "15239:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15247:6:10",
														"nodeType": "YulTypedName",
														"src": "15247:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15258:4:10",
														"nodeType": "YulTypedName",
														"src": "15258:4:10",
														"type": ""
													}
												],
												"src": "15109:442:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient collateral\")\n\n    }\n\n    function abi_encode_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_4c5353a6055dceb26ed4ee990197a6fedbded8b234b7bec8b5a421767149976d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal would undercollateral\")\n\n        mstore(add(memPtr, 32), \"ize position\")\n\n    }\n\n    function abi_encode_t_stringliteral_4c5353a6055dceb26ed4ee990197a6fedbded8b234b7bec8b5a421767149976d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_4c5353a6055dceb26ed4ee990197a6fedbded8b234b7bec8b5a421767149976d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4c5353a6055dceb26ed4ee990197a6fedbded8b234b7bec8b5a421767149976d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4c5353a6055dceb26ed4ee990197a6fedbded8b234b7bec8b5a421767149976d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_d723c5210232a1ee5d4f00c6eaa61ffd90af53d796bbd326e2a3aed6c85c4784(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient collateral for borr\")\n\n        mstore(add(memPtr, 32), \"ow\")\n\n    }\n\n    function abi_encode_t_stringliteral_d723c5210232a1ee5d4f00c6eaa61ffd90af53d796bbd326e2a3aed6c85c4784_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_d723c5210232a1ee5d4f00c6eaa61ffd90af53d796bbd326e2a3aed6c85c4784(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d723c5210232a1ee5d4f00c6eaa61ffd90af53d796bbd326e2a3aed6c85c4784__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d723c5210232a1ee5d4f00c6eaa61ffd90af53d796bbd326e2a3aed6c85c4784_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_240498d7579bea075a03e85335d7e0cf15113dc3a56e365a5a3e62864ea057ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Repay amount exceeds borrowed ba\")\n\n        mstore(add(memPtr, 32), \"lance\")\n\n    }\n\n    function abi_encode_t_stringliteral_240498d7579bea075a03e85335d7e0cf15113dc3a56e365a5a3e62864ea057ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_240498d7579bea075a03e85335d7e0cf15113dc3a56e365a5a3e62864ea057ef(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_240498d7579bea075a03e85335d7e0cf15113dc3a56e365a5a3e62864ea057ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_240498d7579bea075a03e85335d7e0cf15113dc3a56e365a5a3e62864ea057ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_60a50693cd6710402e4138e1cc38d3898d07421a4993f4bc27b72d5c442c766b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Factor must be <= 10000\")\n\n    }\n\n    function abi_encode_t_stringliteral_60a50693cd6710402e4138e1cc38d3898d07421a4993f4bc27b72d5c442c766b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_60a50693cd6710402e4138e1cc38d3898d07421a4993f4bc27b72d5c442c766b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_60a50693cd6710402e4138e1cc38d3898d07421a4993f4bc27b72d5c442c766b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_60a50693cd6710402e4138e1cc38d3898d07421a4993f4bc27b72d5c442c766b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function negate_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610109575f3560e01c806390469a9d116100a0578063c04f31ff1161006f578063c04f31ff1461029d578063c3b8d9a3146102b9578063e744092e146102e9578063f2fde38b14610319578063fc7d42d71461033557610109565b806390469a9d14610219578063a5d5db0c14610235578063abdb5ea814610251578063b7d5820b1461026d57610109565b80636a0c7e9d116100dc5780636a0c7e9d146101a5578063715018a6146101c15780638009f857146101cb5780638da5cb5b146101fb57610109565b8063350c35e91461010d57806339ecf9ba146101295780634178617f14610159578063572d988814610175575b5f5ffd5b61012760048036038101906101229190611a4a565b610365565b005b610143600480360381019061013e9190611a88565b610738565b6040516101509190611ad5565b60405180910390f35b610173600480360381019061016e9190611aee565b610758565b005b61018f600480360381019061018a9190611aee565b610869565b60405161019c9190611ad5565b60405180910390f35b6101bf60048036038101906101ba9190611a4a565b61087e565b005b6101c9610c09565b005b6101e560048036038101906101e09190611a88565b610c1c565b6040516101f29190611ad5565b60405180910390f35b610203610cf3565b6040516102109190611b28565b60405180910390f35b610233600480360381019061022e9190611aee565b610d1a565b005b61024f600480360381019061024a9190611a4a565b610e45565b005b61026b60048036038101906102669190611a4a565b611046565b005b61028760048036038101906102829190611a88565b611301565b6040516102949190611ad5565b60405180910390f35b6102b760048036038101906102b29190611a4a565b611383565b005b6102d360048036038101906102ce9190611a88565b6114ef565b6040516102e09190611b59565b60405180910390f35b61030360048036038101906102fe9190611aee565b6115b5565b6040516103109190611b8c565b60405180910390f35b610333600480360381019061032e9190611aee565b6115d2565b005b61034f600480360381019061034a9190611a88565b611656565b60405161035c9190611ad5565b60405180910390f35b61036d611676565b8160025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166103f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ee90611bff565b60405180910390fd5b5f8211610439576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043090611c67565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156104f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ef90611ccf565b60405180910390fd5b5f83826105059190611d1a565b90505f61271060035f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054836105549190611d4d565b61055e9190611dbb565b905060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481101561061b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061290611e5b565b60405180910390fd5b8160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506106c333868873ffffffffffffffffffffffffffffffffffffffff166116c59092919063ffffffff16565b8573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f45892a46e6cef329bb642da6d69846d324db43d19008edc141ed82382eda1bee876040516107209190611ad5565b60405180910390a350505050610734611744565b5050565b6004602052815f5260405f20602052805f5260405f205f91509150505481565b61076061174d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c590611ec3565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167ff849d00bc67e9e4bf072df9680646c59b8c5380160834c2e1d4896ce5ec81f7560405160405180910390a250565b6003602052805f5260405f205f915090505481565b610886611676565b8160025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610910576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090790611bff565b60405180910390fd5b5f8211610952576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094990611c67565b60405180910390fd5b5f61271060035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a179190611d4d565b610a219190611dbb565b90505f8360055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610aa89190611ee1565b905081811115610aed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae490611f84565b60405180910390fd5b8060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610b9533858773ffffffffffffffffffffffffffffffffffffffff166116c59092919063ffffffff16565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3fc499aeb0bb1cb58b6de8b02b3f86f4e7394e9690bef0110e32ced8a563104586604051610bf29190611ad5565b60405180910390a3505050610c05611744565b5050565b610c1161174d565b610c1a5f6117d4565b565b5f61271060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610ce19190611d4d565b610ceb9190611dbb565b905092915050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610d2261174d565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610dab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da290611bff565b60405180910390fd5b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fbf996b4fd74f0c7159bb017b1db415b0d9a6f13129f46d0b93309d170b78df3160405160405180910390a250565b610e4d611676565b8160025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610ed7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ece90611bff565b60405180910390fd5b5f8211610f19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1090611c67565b60405180910390fd5b610f463330848673ffffffffffffffffffffffffffffffffffffffff16611895909392919063ffffffff16565b8160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610fcd9190611ee1565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff1c0dd7e9b98bbff859029005ef89b127af049cd18df1a8d79f0b7e019911e56846040516110319190611ad5565b60405180910390a350611042611744565b5050565b61104e611676565b8160025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166110d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110cf90611bff565b60405180910390fd5b5f821161111a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111190611c67565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156111d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d090612012565b60405180910390fd5b82816111e59190611d1a565b60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061128e3330858773ffffffffffffffffffffffffffffffffffffffff16611895909392919063ffffffff16565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0a3fbbea70e93f2daafa3102f5c9a1b8315e6d7a1e43e4bc020bc1162327470a856040516112eb9190611ad5565b60405180910390a350506112fd611744565b5050565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61138b61174d565b8160025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16611415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140c90611bff565b60405180910390fd5b61271082111561145a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114519061207a565b60405180910390fd5b8160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff167f275d6207ccd4271a12c584febf2bcf32254205dfb4639ce1a9184d2e2609e2d0836040516114e29190611ad5565b60405180910390a2505050565b5f5f6114fb8484610c1c565b90505f60055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905080821061159557808261158c9190611d1a565b925050506115af565b81816115a19190611d1a565b6115aa90612098565b925050505b92915050565b6002602052805f5260405f205f915054906101000a900460ff1681565b6115da61174d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361164a575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116419190611b28565b60405180910390fd5b611653816117d4565b50565b6005602052815f5260405f20602052805f5260405f205f91509150505481565b6002600154036116bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b290612128565b60405180910390fd5b6002600181905550565b61173f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016116f8929190612146565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611917565b505050565b60018081905550565b6117556119b2565b73ffffffffffffffffffffffffffffffffffffffff16611773610cf3565b73ffffffffffffffffffffffffffffffffffffffff16146117d2576117966119b2565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016117c99190611b28565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611911848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016118ca9392919061216d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611917565b50505050565b5f5f60205f8451602086015f885af180611936576040513d5f823e3d81fd5b3d92505f519150505f821461194f57600181141561196a565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156119ac57836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016119a39190611b28565b60405180910390fd5b50505050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119e6826119bd565b9050919050565b6119f6816119dc565b8114611a00575f5ffd5b50565b5f81359050611a11816119ed565b92915050565b5f819050919050565b611a2981611a17565b8114611a33575f5ffd5b50565b5f81359050611a4481611a20565b92915050565b5f5f60408385031215611a6057611a5f6119b9565b5b5f611a6d85828601611a03565b9250506020611a7e85828601611a36565b9150509250929050565b5f5f60408385031215611a9e57611a9d6119b9565b5b5f611aab85828601611a03565b9250506020611abc85828601611a03565b9150509250929050565b611acf81611a17565b82525050565b5f602082019050611ae85f830184611ac6565b92915050565b5f60208284031215611b0357611b026119b9565b5b5f611b1084828501611a03565b91505092915050565b611b22816119dc565b82525050565b5f602082019050611b3b5f830184611b19565b92915050565b5f819050919050565b611b5381611b41565b82525050565b5f602082019050611b6c5f830184611b4a565b92915050565b5f8115159050919050565b611b8681611b72565b82525050565b5f602082019050611b9f5f830184611b7d565b92915050565b5f82825260208201905092915050565b7f546f6b656e206e6f7420616c6c6f7765640000000000000000000000000000005f82015250565b5f611be9601183611ba5565b9150611bf482611bb5565b602082019050919050565b5f6020820190508181035f830152611c1681611bdd565b9050919050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f611c51601283611ba5565b9150611c5c82611c1d565b602082019050919050565b5f6020820190508181035f830152611c7e81611c45565b9050919050565b7f496e73756666696369656e7420636f6c6c61746572616c0000000000000000005f82015250565b5f611cb9601783611ba5565b9150611cc482611c85565b602082019050919050565b5f6020820190508181035f830152611ce681611cad565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d2482611a17565b9150611d2f83611a17565b9250828203905081811115611d4757611d46611ced565b5b92915050565b5f611d5782611a17565b9150611d6283611a17565b9250828202611d7081611a17565b91508282048414831517611d8757611d86611ced565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611dc582611a17565b9150611dd083611a17565b925082611de057611ddf611d8e565b5b828204905092915050565b7f5769746864726177616c20776f756c6420756e646572636f6c6c61746572616c5f8201527f697a6520706f736974696f6e0000000000000000000000000000000000000000602082015250565b5f611e45602c83611ba5565b9150611e5082611deb565b604082019050919050565b5f6020820190508181035f830152611e7281611e39565b9050919050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f611ead601583611ba5565b9150611eb882611e79565b602082019050919050565b5f6020820190508181035f830152611eda81611ea1565b9050919050565b5f611eeb82611a17565b9150611ef683611a17565b9250828201905080821115611f0e57611f0d611ced565b5b92915050565b7f496e73756666696369656e7420636f6c6c61746572616c20666f7220626f72725f8201527f6f77000000000000000000000000000000000000000000000000000000000000602082015250565b5f611f6e602283611ba5565b9150611f7982611f14565b604082019050919050565b5f6020820190508181035f830152611f9b81611f62565b9050919050565b7f526570617920616d6f756e74206578636565647320626f72726f7765642062615f8201527f6c616e6365000000000000000000000000000000000000000000000000000000602082015250565b5f611ffc602583611ba5565b915061200782611fa2565b604082019050919050565b5f6020820190508181035f83015261202981611ff0565b9050919050565b7f466163746f72206d757374206265203c3d2031303030300000000000000000005f82015250565b5f612064601783611ba5565b915061206f82612030565b602082019050919050565b5f6020820190508181035f83015261209181612058565b9050919050565b5f6120a282611b41565b91507f800000000000000000000000000000000000000000000000000000000000000082036120d4576120d3611ced565b5b815f039050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612112601f83611ba5565b915061211d826120de565b602082019050919050565b5f6020820190508181035f83015261213f81612106565b9050919050565b5f6040820190506121595f830185611b19565b6121666020830184611ac6565b9392505050565b5f6060820190506121805f830186611b19565b61218d6020830185611b19565b61219a6040830184611ac6565b94935050505056fea2646970667358221220d3e1f4cb3c0be7b0fc4909fb4c06e84e4c3fb4d1b8bee12ea0abafb8bc7c1c5864736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90469A9D GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC04F31FF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC04F31FF EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xC3B8D9A3 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xE744092E EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xFC7D42D7 EQ PUSH2 0x335 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x90469A9D EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xA5D5DB0C EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xABDB5EA8 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xB7D5820B EQ PUSH2 0x26D JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6A0C7E9D GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x6A0C7E9D EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x8009F857 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FB JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x350C35E9 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x39ECF9BA EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x4178617F EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x572D9888 EQ PUSH2 0x175 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH2 0x869 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH2 0xC09 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH2 0xD1A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0xE45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x1046 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1A4A JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1B8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x333 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH2 0x15D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH2 0x1676 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EE SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x439 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x430 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EF SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP3 PUSH2 0x505 SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x3 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 PUSH2 0x554 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x612 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6C3 CALLER DUP7 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16C5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x45892A46E6CEF329BB642DA6D69846D324DB43D19008EDC141ED82382EDA1BEE DUP8 PUSH1 0x40 MLOAD PUSH2 0x720 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0x734 PUSH2 0x1744 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x760 PUSH2 0x174D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C5 SWAP1 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF849D00BC67E9E4BF072DF9680646C59B8C5380160834C2E1D4896CE5EC81F75 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x886 PUSH2 0x1676 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x949 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA17 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH2 0xA21 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE4 SWAP1 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xB95 CALLER DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16C5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3FC499AEB0BB1CB58B6DE8B02B3F86F4E7394E9690BEF0110E32CED8A5631045 DUP7 PUSH1 0x40 MLOAD PUSH2 0xBF2 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0xC05 PUSH2 0x1744 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC11 PUSH2 0x174D JUMP JUMPDEST PUSH2 0xC1A PUSH0 PUSH2 0x17D4 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD22 PUSH2 0x174D JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA2 SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBF996B4FD74F0C7159BB017B1DB415B0D9A6F13129F46D0B93309D170B78DF31 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xE4D PUSH2 0x1676 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xED7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECE SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0xF19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF10 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF46 CALLER ADDRESS DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1895 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFCD SWAP2 SWAP1 PUSH2 0x1EE1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF1C0DD7E9B98BBFF859029005EF89B127AF049CD18DF1A8D79F0B7E019911E56 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1031 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x1042 PUSH2 0x1744 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x104E PUSH2 0x1676 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CF SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x111A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1111 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D0 SWAP1 PUSH2 0x2012 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH2 0x11E5 SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x128E CALLER ADDRESS DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1895 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA3FBBEA70E93F2DAAFA3102F5C9A1B8315E6D7A1E43E4BC020BC1162327470A DUP6 PUSH1 0x40 MLOAD PUSH2 0x12EB SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x12FD PUSH2 0x1744 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x138B PUSH2 0x174D JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140C SWAP1 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP3 GT ISZERO PUSH2 0x145A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1451 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x275D6207CCD4271A12C584FEBF2BCF32254205DFB4639CE1A9184D2E2609E2D0 DUP4 PUSH1 0x40 MLOAD PUSH2 0x14E2 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x14FB DUP5 DUP5 PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 LT PUSH2 0x1595 JUMPI DUP1 DUP3 PUSH2 0x158C SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x15AF JUMP JUMPDEST DUP2 DUP2 PUSH2 0x15A1 SWAP2 SWAP1 PUSH2 0x1D1A JUMP JUMPDEST PUSH2 0x15AA SWAP1 PUSH2 0x2098 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x15DA PUSH2 0x174D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x164A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1641 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1653 DUP2 PUSH2 0x17D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x16BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x173F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16F8 SWAP3 SWAP2 SWAP1 PUSH2 0x2146 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1917 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1755 PUSH2 0x19B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1773 PUSH2 0xCF3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17D2 JUMPI PUSH2 0x1796 PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C9 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1911 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x18CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x216D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1917 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1936 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x194F JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x196A JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x19AC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A3 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19E6 DUP3 PUSH2 0x19BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F6 DUP2 PUSH2 0x19DC JUMP JUMPDEST DUP2 EQ PUSH2 0x1A00 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A11 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A29 DUP2 PUSH2 0x1A17 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A33 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A44 DUP2 PUSH2 0x1A20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A60 JUMPI PUSH2 0x1A5F PUSH2 0x19B9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A6D DUP6 DUP3 DUP7 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A7E DUP6 DUP3 DUP7 ADD PUSH2 0x1A36 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A9E JUMPI PUSH2 0x1A9D PUSH2 0x19B9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AAB DUP6 DUP3 DUP7 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ABC DUP6 DUP3 DUP7 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACF DUP2 PUSH2 0x1A17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AE8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B03 JUMPI PUSH2 0x1B02 PUSH2 0x19B9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B10 DUP5 DUP3 DUP6 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B22 DUP2 PUSH2 0x19DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3B PUSH0 DUP4 ADD DUP5 PUSH2 0x1B19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B53 DUP2 PUSH2 0x1B41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6C PUSH0 DUP4 ADD DUP5 PUSH2 0x1B4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B86 DUP2 PUSH2 0x1B72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B9F PUSH0 DUP4 ADD DUP5 PUSH2 0x1B7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420616C6C6F776564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BE9 PUSH1 0x11 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF4 DUP3 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C16 DUP2 PUSH2 0x1BDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C51 PUSH1 0x12 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5C DUP3 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C7E DUP2 PUSH2 0x1C45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB9 PUSH1 0x17 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC4 DUP3 PUSH2 0x1C85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CE6 DUP2 PUSH2 0x1CAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D24 DUP3 PUSH2 0x1A17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2F DUP4 PUSH2 0x1A17 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D47 JUMPI PUSH2 0x1D46 PUSH2 0x1CED JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D57 DUP3 PUSH2 0x1A17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D62 DUP4 PUSH2 0x1A17 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D70 DUP2 PUSH2 0x1A17 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D87 JUMPI PUSH2 0x1D86 PUSH2 0x1CED JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DC5 DUP3 PUSH2 0x1A17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD0 DUP4 PUSH2 0x1A17 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DE0 JUMPI PUSH2 0x1DDF PUSH2 0x1D8E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20776F756C6420756E646572636F6C6C61746572616C PUSH0 DUP3 ADD MSTORE PUSH32 0x697A6520706F736974696F6E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E45 PUSH1 0x2C DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E50 DUP3 PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E72 DUP2 PUSH2 0x1E39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAD PUSH1 0x15 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB8 DUP3 PUSH2 0x1E79 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EDA DUP2 PUSH2 0x1EA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEB DUP3 PUSH2 0x1A17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF6 DUP4 PUSH2 0x1A17 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F0E JUMPI PUSH2 0x1F0D PUSH2 0x1CED JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C20666F7220626F7272 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F77000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F6E PUSH1 0x22 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F79 DUP3 PUSH2 0x1F14 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F9B DUP2 PUSH2 0x1F62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526570617920616D6F756E74206578636565647320626F72726F776564206261 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C616E6365000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FFC PUSH1 0x25 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2007 DUP3 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2029 DUP2 PUSH2 0x1FF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x466163746F72206D757374206265203C3D203130303030000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2064 PUSH1 0x17 DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x206F DUP3 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2091 DUP2 PUSH2 0x2058 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20A2 DUP3 PUSH2 0x1B41 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x20D4 JUMPI PUSH2 0x20D3 PUSH2 0x1CED JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2112 PUSH1 0x1F DUP4 PUSH2 0x1BA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x211D DUP3 PUSH2 0x20DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x213F DUP2 PUSH2 0x2106 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2159 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x2166 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AC6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2180 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x218D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x219A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AC6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 RJUMPI 0xF4CB EXTCODECOPY SIGNEXTEND SWAPN 0xB0 0xFC BLOBHASH MULMOD EXTSTATICCALL 0x4C MOD 0xE8 0x4E 0x4C EXTCODEHASH 0xB4 DATALOADN 0xB8BE RJUMPI 0x2EA0 0xAB 0xAF 0xB8 0xBC PUSH29 0x1C5864736F6C634300081D003300000000000000000000000000000000 ",
							"sourceMap": "307:8323:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3965:1006;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;747:73;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1985:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;615:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5243:876;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;7603:209:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2328:208:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3242:441;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6300:582;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7137:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2758:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8180:448;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;469:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;905:69:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3965:1006;2261:21:4;:19;:21::i;:::-;4087:5:9::1;1692:13;:20;1706:5;1692:20;;;;;;;;;;;;;;;;;;;;;;;;;1684:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;4125:1:::2;4116:6;:10;4108:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;4159:25;4187:18;:30;4206:10;4187:30;;;;;;;;;;;;;;;:37;4218:5;4187:37;;;;;;;;;;;;;;;;4159:65;;4263:6;4242:17;:27;;4234:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4369:28;4420:6;4400:17;:26;;;;:::i;:::-;4369:57;;4493:27;4573:5;4546:17;:24;4564:5;4546:24;;;;;;;;;;;;;;;;4523:20;:47;;;;:::i;:::-;:55;;;;:::i;:::-;4493:85;;4694:14;:26;4709:10;4694:26;;;;;;;;;;;;;;;:33;4721:5;4694:33;;;;;;;;;;;;;;;;4671:19;:56;;4663:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;4827:20;4787:18;:30;4806:10;4787:30;;;;;;;;;;;;;;;:37;4818:5;4787:37;;;;;;;;;;;;;;;:60;;;;4857:46;4884:10;4896:6;4864:5;4857:26;;;;:46;;;;;:::i;:::-;4950:5;4918:46;;4938:10;4918:46;;;4957:6;4918:46;;;;;;:::i;:::-;;;;;;;;4098:873;;;2292:1:4::1;2303:20:::0;:18;:20::i;:::-;3965:1006:9;;:::o;747:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1985:205::-;1531:13:0;:11;:13::i;:::-;2079:1:9::1;2062:19;;:5;:19;;::::0;2054:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2140:4;2117:13;:20;2131:5;2117:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2177:5;2159:24;;;;;;;;;;;;1985:205:::0;:::o;615:52::-;;;;;;;;;;;;;;;;;:::o;5243:876::-;2261:21:4;:19;:21::i;:::-;5363:5:9::1;1692:13;:20;1706:5;1692:20;;;;;;;;;;;;;;;;;;;;;;;;;1684:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;5401:1:::2;5392:6;:10;5384:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;5488:27;5585:5;5558:17;:24;5576:5;5558:24;;;;;;;;;;;;;;;;5518:18;:30;5537:10;5518:30;;;;;;;;;;;;;;;:37;5549:5;5518:37;;;;;;;;;;;;;;;;:64;;;;:::i;:::-;:72;;;;:::i;:::-;5488:102;;5600:24;5663:6;5627:14;:26;5642:10;5627:26;;;;;;;;;;;;;;;:33;5654:5;5627:33;;;;;;;;;;;;;;;;:42;;;;:::i;:::-;5600:69;;5782:19;5762:16;:39;;5754:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;5887:16;5851:14;:26;5866:10;5851:26;;;;;;;;;;;;;;;:33;5878:5;5851:33;;;;;;;;;;;;;;;:52;;;;6016:46;6043:10;6055:6;6023:5;6016:26;;;;:46;;;;;:::i;:::-;6098:5;6077:35;;6086:10;6077:35;;;6105:6;6077:35;;;;;;:::i;:::-;;;;;;;;5374:745;;2292:1:4::1;2303:20:::0;:18;:20::i;:::-;5243:876:9;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;7603:209:9:-;7709:7;7800:5;7773:17;:24;7791:5;7773:24;;;;;;;;;;;;;;;;7739:18;:24;7758:4;7739:24;;;;;;;;;;;;;;;:31;7764:5;7739:31;;;;;;;;;;;;;;;;:58;;;;:::i;:::-;:66;;;;:::i;:::-;7732:73;;7603:209;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2328:208:9:-;1531:13:0;:11;:13::i;:::-;2408::9::1;:20;2422:5;2408:20;;;;;;;;;;;;;;;;;;;;;;;;;2400:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2483:5;2460:13;:20;2474:5;2460:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2523:5;2503:26;;;;;;;;;;;;2328:208:::0;:::o;3242:441::-;2261:21:4;:19;:21::i;:::-;3363:5:9::1;1692:13;:20;1706:5;1692:20;;;;;;;;;;;;;;;;;;;;;;;;;1684:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;3401:1:::2;3392:6;:10;3384:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;3493:65;3524:10;3544:4;3551:6;3500:5;3493:30;;;;:65;;;;;;:::i;:::-;3609:6;3568:18;:30;3587:10;3568:30;;;;;;;;;;;;;;;:37;3599:5;3568:37;;;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;;;;;;;3662:5;3630:46;;3650:10;3630:46;;;3669:6;3630:46;;;;;;:::i;:::-;;;;;;;;2292:1:4::1;2303:20:::0;:18;:20::i;:::-;3242:441:9;;:::o;6300:582::-;2261:21:4;:19;:21::i;:::-;6415:5:9::1;1692:13;:20;1706:5;1692:20;;;;;;;;;;;;;;;;;;;;;;;;;1684:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;6453:1:::2;6444:6;:10;6436:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;6487:16;6506:14;:26;6521:10;6506:26;;;;;;;;;;;;;;;:33;6533:5;6506:33;;;;;;;;;;;;;;;;6487:52;;6569:6;6557:8;:18;;6549:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6675:6;6664:8;:17;;;;:::i;:::-;6628:14;:26;6643:10;6628:26;;;;;;;;;;;;;;;:33;6655:5;6628:33;;;;;;;;;;;;;;;:53;;;;6762:65;6793:10;6813:4;6820:6;6769:5;6762:30;;;;:65;;;;;;:::i;:::-;6861:5;6842:33;;6849:10;6842:33;;;6868:6;6842:33;;;;;;:::i;:::-;;;;;;;;6426:456;2292:1:4::1;2303:20:::0;:18;:20::i;:::-;6300:582:9;;:::o;7137:174::-;7243:7;7273:18;:24;7292:4;7273:24;;;;;;;;;;;;;;;:31;7298:5;7273:31;;;;;;;;;;;;;;;;7266:38;;7137:174;;;;:::o;2758:267::-;1531:13:0;:11;:13::i;:::-;2854:5:9::1;1692:13;:20;1706:5;1692:20;;;;;;;;;;;;;;;;;;;;;;;;;1684:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2889:5:::2;2879:6;:15;;2871:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;2959:6;2932:17;:24;2950:5;2932:24;;;;;;;;;;;;;;;:33;;;;3004:5;2980:38;;;3011:6;2980:38;;;;;;:::i;:::-;;;;;;;;1554:1:0::1;2758:267:9::0;;:::o;8180:448::-;8285:6;8307:27;8337:35;8360:4;8366:5;8337:22;:35::i;:::-;8307:65;;8382:16;8401:14;:20;8416:4;8401:20;;;;;;;;;;;;;;;:27;8422:5;8401:27;;;;;;;;;;;;;;;;8382:46;;8465:8;8442:19;:31;8438:184;;8525:8;8503:19;:30;;;;:::i;:::-;8489:45;;;;;;8438:184;8591:19;8580:8;:30;;;;:::i;:::-;8572:39;;;:::i;:::-;8565:46;;;;8180:448;;;;;:::o;469:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;905:69:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;7686:720::-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:::-;1745:6;1753;1802:2;1790:9;1781:7;1777:23;1773:32;1770:119;;;1808:79;;:::i;:::-;1770:119;1928:1;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1899:117;2055:2;2081:53;2126:7;2117:6;2106:9;2102:22;2081:53;:::i;:::-;2071:63;;2026:118;1677:474;;;;;:::o;2157:118::-;2244:24;2262:5;2244:24;:::i;:::-;2239:3;2232:37;2157:118;;:::o;2281:222::-;2374:4;2412:2;2401:9;2397:18;2389:26;;2425:71;2493:1;2482:9;2478:17;2469:6;2425:71;:::i;:::-;2281:222;;;;:::o;2509:329::-;2568:6;2617:2;2605:9;2596:7;2592:23;2588:32;2585:119;;;2623:79;;:::i;:::-;2585:119;2743:1;2768:53;2813:7;2804:6;2793:9;2789:22;2768:53;:::i;:::-;2758:63;;2714:117;2509:329;;;;:::o;2844:118::-;2931:24;2949:5;2931:24;:::i;:::-;2926:3;2919:37;2844:118;;:::o;2968:222::-;3061:4;3099:2;3088:9;3084:18;3076:26;;3112:71;3180:1;3169:9;3165:17;3156:6;3112:71;:::i;:::-;2968:222;;;;:::o;3196:76::-;3232:7;3261:5;3250:16;;3196:76;;;:::o;3278:115::-;3363:23;3380:5;3363:23;:::i;:::-;3358:3;3351:36;3278:115;;:::o;3399:218::-;3490:4;3528:2;3517:9;3513:18;3505:26;;3541:69;3607:1;3596:9;3592:17;3583:6;3541:69;:::i;:::-;3399:218;;;;:::o;3623:90::-;3657:7;3700:5;3693:13;3686:21;3675:32;;3623:90;;;:::o;3719:109::-;3800:21;3815:5;3800:21;:::i;:::-;3795:3;3788:34;3719:109;;:::o;3834:210::-;3921:4;3959:2;3948:9;3944:18;3936:26;;3972:65;4034:1;4023:9;4019:17;4010:6;3972:65;:::i;:::-;3834:210;;;;:::o;4050:169::-;4134:11;4168:6;4163:3;4156:19;4208:4;4203:3;4199:14;4184:29;;4050:169;;;;:::o;4225:167::-;4365:19;4361:1;4353:6;4349:14;4342:43;4225:167;:::o;4398:366::-;4540:3;4561:67;4625:2;4620:3;4561:67;:::i;:::-;4554:74;;4637:93;4726:3;4637:93;:::i;:::-;4755:2;4750:3;4746:12;4739:19;;4398:366;;;:::o;4770:419::-;4936:4;4974:2;4963:9;4959:18;4951:26;;5023:9;5017:4;5013:20;5009:1;4998:9;4994:17;4987:47;5051:131;5177:4;5051:131;:::i;:::-;5043:139;;4770:419;;;:::o;5195:168::-;5335:20;5331:1;5323:6;5319:14;5312:44;5195:168;:::o;5369:366::-;5511:3;5532:67;5596:2;5591:3;5532:67;:::i;:::-;5525:74;;5608:93;5697:3;5608:93;:::i;:::-;5726:2;5721:3;5717:12;5710:19;;5369:366;;;:::o;5741:419::-;5907:4;5945:2;5934:9;5930:18;5922:26;;5994:9;5988:4;5984:20;5980:1;5969:9;5965:17;5958:47;6022:131;6148:4;6022:131;:::i;:::-;6014:139;;5741:419;;;:::o;6166:173::-;6306:25;6302:1;6294:6;6290:14;6283:49;6166:173;:::o;6345:366::-;6487:3;6508:67;6572:2;6567:3;6508:67;:::i;:::-;6501:74;;6584:93;6673:3;6584:93;:::i;:::-;6702:2;6697:3;6693:12;6686:19;;6345:366;;;:::o;6717:419::-;6883:4;6921:2;6910:9;6906:18;6898:26;;6970:9;6964:4;6960:20;6956:1;6945:9;6941:17;6934:47;6998:131;7124:4;6998:131;:::i;:::-;6990:139;;6717:419;;;:::o;7142:180::-;7190:77;7187:1;7180:88;7287:4;7284:1;7277:15;7311:4;7308:1;7301:15;7328:194;7368:4;7388:20;7406:1;7388:20;:::i;:::-;7383:25;;7422:20;7440:1;7422:20;:::i;:::-;7417:25;;7466:1;7463;7459:9;7451:17;;7490:1;7484:4;7481:11;7478:37;;;7495:18;;:::i;:::-;7478:37;7328:194;;;;:::o;7528:410::-;7568:7;7591:20;7609:1;7591:20;:::i;:::-;7586:25;;7625:20;7643:1;7625:20;:::i;:::-;7620:25;;7680:1;7677;7673:9;7702:30;7720:11;7702:30;:::i;:::-;7691:41;;7881:1;7872:7;7868:15;7865:1;7862:22;7842:1;7835:9;7815:83;7792:139;;7911:18;;:::i;:::-;7792:139;7576:362;7528:410;;;;:::o;7944:180::-;7992:77;7989:1;7982:88;8089:4;8086:1;8079:15;8113:4;8110:1;8103:15;8130:185;8170:1;8187:20;8205:1;8187:20;:::i;:::-;8182:25;;8221:20;8239:1;8221:20;:::i;:::-;8216:25;;8260:1;8250:35;;8265:18;;:::i;:::-;8250:35;8307:1;8304;8300:9;8295:14;;8130:185;;;;:::o;8321:231::-;8461:34;8457:1;8449:6;8445:14;8438:58;8530:14;8525:2;8517:6;8513:15;8506:39;8321:231;:::o;8558:366::-;8700:3;8721:67;8785:2;8780:3;8721:67;:::i;:::-;8714:74;;8797:93;8886:3;8797:93;:::i;:::-;8915:2;8910:3;8906:12;8899:19;;8558:366;;;:::o;8930:419::-;9096:4;9134:2;9123:9;9119:18;9111:26;;9183:9;9177:4;9173:20;9169:1;9158:9;9154:17;9147:47;9211:131;9337:4;9211:131;:::i;:::-;9203:139;;8930:419;;;:::o;9355:171::-;9495:23;9491:1;9483:6;9479:14;9472:47;9355:171;:::o;9532:366::-;9674:3;9695:67;9759:2;9754:3;9695:67;:::i;:::-;9688:74;;9771:93;9860:3;9771:93;:::i;:::-;9889:2;9884:3;9880:12;9873:19;;9532:366;;;:::o;9904:419::-;10070:4;10108:2;10097:9;10093:18;10085:26;;10157:9;10151:4;10147:20;10143:1;10132:9;10128:17;10121:47;10185:131;10311:4;10185:131;:::i;:::-;10177:139;;9904:419;;;:::o;10329:191::-;10369:3;10388:20;10406:1;10388:20;:::i;:::-;10383:25;;10422:20;10440:1;10422:20;:::i;:::-;10417:25;;10465:1;10462;10458:9;10451:16;;10486:3;10483:1;10480:10;10477:36;;;10493:18;;:::i;:::-;10477:36;10329:191;;;;:::o;10526:221::-;10666:34;10662:1;10654:6;10650:14;10643:58;10735:4;10730:2;10722:6;10718:15;10711:29;10526:221;:::o;10753:366::-;10895:3;10916:67;10980:2;10975:3;10916:67;:::i;:::-;10909:74;;10992:93;11081:3;10992:93;:::i;:::-;11110:2;11105:3;11101:12;11094:19;;10753:366;;;:::o;11125:419::-;11291:4;11329:2;11318:9;11314:18;11306:26;;11378:9;11372:4;11368:20;11364:1;11353:9;11349:17;11342:47;11406:131;11532:4;11406:131;:::i;:::-;11398:139;;11125:419;;;:::o;11550:224::-;11690:34;11686:1;11678:6;11674:14;11667:58;11759:7;11754:2;11746:6;11742:15;11735:32;11550:224;:::o;11780:366::-;11922:3;11943:67;12007:2;12002:3;11943:67;:::i;:::-;11936:74;;12019:93;12108:3;12019:93;:::i;:::-;12137:2;12132:3;12128:12;12121:19;;11780:366;;;:::o;12152:419::-;12318:4;12356:2;12345:9;12341:18;12333:26;;12405:9;12399:4;12395:20;12391:1;12380:9;12376:17;12369:47;12433:131;12559:4;12433:131;:::i;:::-;12425:139;;12152:419;;;:::o;12577:173::-;12717:25;12713:1;12705:6;12701:14;12694:49;12577:173;:::o;12756:366::-;12898:3;12919:67;12983:2;12978:3;12919:67;:::i;:::-;12912:74;;12995:93;13084:3;12995:93;:::i;:::-;13113:2;13108:3;13104:12;13097:19;;12756:366;;;:::o;13128:419::-;13294:4;13332:2;13321:9;13317:18;13309:26;;13381:9;13375:4;13371:20;13367:1;13356:9;13352:17;13345:47;13409:131;13535:4;13409:131;:::i;:::-;13401:139;;13128:419;;;:::o;13553:228::-;13588:3;13611:23;13628:5;13611:23;:::i;:::-;13602:32;;13656:66;13649:5;13646:77;13643:103;;13726:18;;:::i;:::-;13643:103;13769:5;13766:1;13762:13;13755:20;;13553:228;;;:::o;13787:181::-;13927:33;13923:1;13915:6;13911:14;13904:57;13787:181;:::o;13974:366::-;14116:3;14137:67;14201:2;14196:3;14137:67;:::i;:::-;14130:74;;14213:93;14302:3;14213:93;:::i;:::-;14331:2;14326:3;14322:12;14315:19;;13974:366;;;:::o;14346:419::-;14512:4;14550:2;14539:9;14535:18;14527:26;;14599:9;14593:4;14589:20;14585:1;14574:9;14570:17;14563:47;14627:131;14753:4;14627:131;:::i;:::-;14619:139;;14346:419;;;:::o;14771:332::-;14892:4;14930:2;14919:9;14915:18;14907:26;;14943:71;15011:1;15000:9;14996:17;14987:6;14943:71;:::i;:::-;15024:72;15092:2;15081:9;15077:18;15068:6;15024:72;:::i;:::-;14771:332;;;;;:::o;15109:442::-;15258:4;15296:2;15285:9;15281:18;15273:26;;15309:71;15377:1;15366:9;15362:17;15353:6;15309:71;:::i;:::-;15390:72;15458:2;15447:9;15443:18;15434:6;15390:72;:::i;:::-;15472;15540:2;15529:9;15525:18;15516:6;15472:72;:::i;:::-;15109:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1732800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addAllowedToken(address)": "infinite",
								"allowedTokens(address)": "2899",
								"borrowBalances(address,address)": "infinite",
								"borrowCollateral(address,uint256)": "infinite",
								"collateralBalances(address,address)": "infinite",
								"collateralFactors(address)": "2892",
								"depositCollateral(address,uint256)": "infinite",
								"getCollateralBalance(address,address)": "infinite",
								"getCollateralMargin(address,address)": "infinite",
								"getEffectiveCollateral(address,address)": "infinite",
								"owner()": "2603",
								"removeAllowedToken(address)": "infinite",
								"renounceOwnership()": "infinite",
								"repayBorrow(address,uint256)": "infinite",
								"setCollateralFactor(address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdrawCollateral(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 307,
									"end": 8630,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 307,
									"end": 8630,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 307,
									"end": 8630,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1817,
									"end": 1853,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1817,
									"end": 1853,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1817,
									"end": 1853,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1817,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1817,
									"end": 1853,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1817,
									"end": 1853,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1817,
									"end": 1853,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1817,
									"end": 1853,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1817,
									"end": 1853,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1817,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1817,
									"end": 1853,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1839,
									"end": 1849,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 307,
									"end": 8630,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 307,
									"end": 8630,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 307,
									"end": 8630,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 307,
									"end": 8630,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 307,
									"end": 8630,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 307,
									"end": 8630,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 307,
									"end": 8630,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 307,
									"end": 8630,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 307,
									"end": 8630,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 307,
									"end": 8630,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 307,
									"end": 8630,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d3e1f4cb3c0be7b0fc4909fb4c06e84e4c3fb4d1b8bee12ea0abafb8bc7c1c5864736f6c634300081d0033",
									".code": [
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "90469A9D"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "C04F31FF"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "C04F31FF"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "C3B8D9A3"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "E744092E"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "FC7D42D7"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "90469A9D"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "A5D5DB0C"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "ABDB5EA8"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "B7D5820B"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "6A0C7E9D"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "6A0C7E9D"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "8009F857"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "350C35E9"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "39ECF9BA"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "4178617F"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "572D9888"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 8630,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3965,
											"end": 4971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3965,
											"end": 4971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 747,
											"end": 820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 747,
											"end": 820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 747,
											"end": 820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1985,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1985,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 615,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 615,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 615,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 5243,
											"end": 6119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 5243,
											"end": 6119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 7603,
											"end": 7812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 7603,
											"end": 7812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 7603,
											"end": 7812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 2328,
											"end": 2536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2328,
											"end": 2536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3242,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3242,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 6300,
											"end": 6882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 6300,
											"end": 6882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 7137,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 7137,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 7137,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2758,
											"end": 3025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2758,
											"end": 3025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 8180,
											"end": 8628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 8180,
											"end": 8628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 8180,
											"end": 8628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 469,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 469,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 469,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 905,
											"end": 974,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 905,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 905,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 905,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1684,
											"end": 1734,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4122,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4116,
											"end": 4126,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4108,
											"end": 4149,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4108,
											"end": 4149,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4159,
											"end": 4184,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4187,
											"end": 4205,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4206,
											"end": 4216,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4223,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4224,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4159,
											"end": 4224,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4159,
											"end": 4224,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4269,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4242,
											"end": 4259,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4242,
											"end": 4269,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4242,
											"end": 4269,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4297,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 4234,
											"end": 4297,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4397,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4426,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4400,
											"end": 4417,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4400,
											"end": 4426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 4400,
											"end": 4426,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4400,
											"end": 4426,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4400,
											"end": 4426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 4400,
											"end": 4426,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4400,
											"end": 4426,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 4400,
											"end": 4426,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4426,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4426,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4493,
											"end": 4520,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4573,
											"end": 4578,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4546,
											"end": 4563,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4569,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4570,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4523,
											"end": 4543,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4523,
											"end": 4570,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 4523,
											"end": 4570,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4523,
											"end": 4570,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4523,
											"end": 4570,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 4523,
											"end": 4570,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4523,
											"end": 4570,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 4523,
											"end": 4570,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4523,
											"end": 4578,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 4523,
											"end": 4578,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4523,
											"end": 4578,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4523,
											"end": 4578,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4523,
											"end": 4578,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4523,
											"end": 4578,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 4523,
											"end": 4578,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4493,
											"end": 4578,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4493,
											"end": 4578,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4708,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4719,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4720,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4726,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4727,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4671,
											"end": 4690,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4671,
											"end": 4727,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4671,
											"end": 4727,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 4663,
											"end": 4776,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4663,
											"end": 4776,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4827,
											"end": 4847,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4816,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4817,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4823,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4824,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4847,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4847,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4847,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4847,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4903,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 4884,
											"end": 4894,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4902,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4864,
											"end": 4869,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4857,
											"end": 4883,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 4857,
											"end": 4883,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4903,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4903,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4903,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4857,
											"end": 4903,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4903,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4903,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 4857,
											"end": 4903,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4955,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 4948,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "45892A46E6CEF329BB642DA6D69846D324DB43D19008EDC141ED82382EDA1BEE"
										},
										{
											"begin": 4957,
											"end": 4963,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4918,
											"end": 4964,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4964,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 4098,
											"end": 4971,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4098,
											"end": 4971,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4098,
											"end": 4971,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3965,
											"end": 4971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2062,
											"end": 2081,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2067,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2062,
											"end": 2081,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2081,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2054,
											"end": 2107,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2054,
											"end": 2107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2117,
											"end": 2130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2136,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2177,
											"end": 2182,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2183,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F849D00BC67E9E4BF072DF9680646C59B8C5380160834C2E1D4896CE5EC81F75"
										},
										{
											"begin": 2159,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2159,
											"end": 2183,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2159,
											"end": 2183,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2183,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2183,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2183,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2183,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 667,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1684,
											"end": 1734,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5401,
											"end": 5402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5398,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5392,
											"end": 5402,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 5384,
											"end": 5425,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 5384,
											"end": 5425,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5488,
											"end": 5515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5585,
											"end": 5590,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 5558,
											"end": 5575,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5576,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5558,
											"end": 5582,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5536,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5547,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5548,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5549,
											"end": 5554,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5555,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5582,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5518,
											"end": 5582,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5582,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5582,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 5518,
											"end": 5582,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5582,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5518,
											"end": 5582,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5590,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 5518,
											"end": 5590,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5590,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5590,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 5518,
											"end": 5590,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5518,
											"end": 5590,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 5518,
											"end": 5590,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5488,
											"end": 5590,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5488,
											"end": 5590,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5624,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5663,
											"end": 5669,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5641,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5652,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5653,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5654,
											"end": 5659,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5660,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5669,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 5627,
											"end": 5669,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5669,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5669,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 5627,
											"end": 5669,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5669,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 5627,
											"end": 5669,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5669,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5669,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5801,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5778,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5801,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5801,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 5754,
											"end": 5840,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 5754,
											"end": 5840,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5887,
											"end": 5903,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5865,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5876,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5851,
											"end": 5877,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5878,
											"end": 5883,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5851,
											"end": 5884,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5903,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5903,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5903,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5903,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6016,
											"end": 6062,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 6043,
											"end": 6053,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6055,
											"end": 6061,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6028,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6016,
											"end": 6042,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6016,
											"end": 6042,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6016,
											"end": 6042,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 6016,
											"end": 6042,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6016,
											"end": 6062,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6016,
											"end": 6062,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6016,
											"end": 6062,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6016,
											"end": 6062,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6016,
											"end": 6062,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6016,
											"end": 6062,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6016,
											"end": 6062,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 6016,
											"end": 6062,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6098,
											"end": 6103,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3FC499AEB0BB1CB58B6DE8B02B3F86F4E7394E9690BEF0110E32CED8A5631045"
										},
										{
											"begin": 6105,
											"end": 6111,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 6077,
											"end": 6112,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6112,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 6119,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 6119,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 6119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7709,
											"end": 7716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7800,
											"end": 7805,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 7773,
											"end": 7790,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7796,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7797,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7757,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7758,
											"end": 7762,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7764,
											"end": 7769,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7770,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 7739,
											"end": 7797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 7739,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7797,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 7739,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 7739,
											"end": 7805,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 7739,
											"end": 7805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7805,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 7739,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7732,
											"end": 7805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7732,
											"end": 7805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7603,
											"end": 7812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2408,
											"end": 2421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2427,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2400,
											"end": 2450,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2400,
											"end": 2450,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2483,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2523,
											"end": 2528,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2503,
											"end": 2529,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "BF996B4FD74F0C7159BB017B1DB415B0D9A6F13129F46D0B93309D170B78DF31"
										},
										{
											"begin": 2503,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2529,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3363,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1684,
											"end": 1734,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3402,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3392,
											"end": 3398,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3392,
											"end": 3402,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3384,
											"end": 3425,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3384,
											"end": 3425,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3558,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 3524,
											"end": 3534,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3544,
											"end": 3548,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3557,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3505,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3523,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3493,
											"end": 3523,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3523,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3493,
											"end": 3523,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3558,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3558,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3558,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3558,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3558,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3493,
											"end": 3558,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3558,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3558,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 3493,
											"end": 3558,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3615,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3586,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3587,
											"end": 3597,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3568,
											"end": 3598,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3604,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3605,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3568,
											"end": 3615,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3615,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3667,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3650,
											"end": 3660,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "F1C0DD7E9B98BBFF859029005EF89B127AF049CD18DF1A8D79F0B7E019911E56"
										},
										{
											"begin": 3669,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 3630,
											"end": 3676,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3676,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6415,
											"end": 6420,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1684,
											"end": 1734,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6453,
											"end": 6454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6450,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6444,
											"end": 6454,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 6436,
											"end": 6477,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 6436,
											"end": 6477,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6487,
											"end": 6503,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6506,
											"end": 6520,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6531,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6506,
											"end": 6532,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6538,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6539,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6487,
											"end": 6539,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6487,
											"end": 6539,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6569,
											"end": 6575,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6565,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6575,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6575,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 6549,
											"end": 6617,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 6549,
											"end": 6617,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6675,
											"end": 6681,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6672,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 6664,
											"end": 6681,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6681,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 6664,
											"end": 6681,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6681,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 6664,
											"end": 6681,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6642,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6643,
											"end": 6653,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6654,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6655,
											"end": 6660,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6661,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6681,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6681,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6681,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6628,
											"end": 6681,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6827,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 6793,
											"end": 6803,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6813,
											"end": 6817,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6826,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6769,
											"end": 6774,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6792,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6762,
											"end": 6792,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6792,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6762,
											"end": 6792,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6827,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6827,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6827,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6827,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6827,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6762,
											"end": 6827,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6827,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6827,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 6762,
											"end": 6827,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6861,
											"end": 6866,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6859,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A3FBBEA70E93F2DAAFA3102F5C9A1B8315E6D7A1E43E4BC020BC1162327470A"
										},
										{
											"begin": 6868,
											"end": 6874,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 6842,
											"end": 6875,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6842,
											"end": 6875,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 6426,
											"end": 6882,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7243,
											"end": 7250,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7291,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7292,
											"end": 7296,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7298,
											"end": 7303,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7273,
											"end": 7304,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7266,
											"end": 7304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7266,
											"end": 7304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2859,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1692,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1684,
											"end": 1734,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1684,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2894,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 2879,
											"end": 2885,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2894,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2894,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 2871,
											"end": 2922,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 2871,
											"end": 2922,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 2965,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2949,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2950,
											"end": 2955,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2956,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2965,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2965,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2965,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2965,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3009,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "275D6207CCD4271A12C584FEBF2BCF32254205DFB4639CE1A9184D2E2609E2D0"
										},
										{
											"begin": 3011,
											"end": 3017,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2980,
											"end": 3018,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3018,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 3025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8285,
											"end": 8291,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8307,
											"end": 8334,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 8360,
											"end": 8364,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8366,
											"end": 8371,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8337,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 8337,
											"end": 8372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8337,
											"end": 8372,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 8337,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8307,
											"end": 8372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8307,
											"end": 8372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8398,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8401,
											"end": 8415,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8416,
											"end": 8420,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8401,
											"end": 8421,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8422,
											"end": 8427,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8428,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8428,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8428,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8465,
											"end": 8473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8442,
											"end": 8461,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8442,
											"end": 8473,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8438,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 8438,
											"end": 8622,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8525,
											"end": 8533,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8503,
											"end": 8522,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8503,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 8503,
											"end": 8533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8503,
											"end": 8533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8503,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 8503,
											"end": 8533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8503,
											"end": 8533,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 8503,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8489,
											"end": 8534,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8489,
											"end": 8534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8489,
											"end": 8534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8489,
											"end": 8534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8489,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 8489,
											"end": 8534,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8438,
											"end": 8622,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 8438,
											"end": 8622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8591,
											"end": 8610,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8588,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 8580,
											"end": 8610,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 8580,
											"end": 8610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8610,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 8580,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8572,
											"end": 8611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 8572,
											"end": 8611,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8572,
											"end": 8611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 8572,
											"end": 8611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8572,
											"end": 8611,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 8572,
											"end": 8611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8565,
											"end": 8611,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8565,
											"end": 8611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8565,
											"end": 8611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8565,
											"end": 8611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8180,
											"end": 8628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 469,
											"end": 514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 905,
											"end": 974,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 974,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 905,
											"end": 974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1804,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1790,
											"end": 1799,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1788,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1800,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1773,
											"end": 1805,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1889,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 1770,
											"end": 1889,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 1808,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 1808,
											"end": 1887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1887,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 1808,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1889,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 1770,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1953,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 2016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2057,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 2126,
											"end": 2133,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2124,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2081,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2071,
											"end": 2134,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2071,
											"end": 2134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 2262,
											"end": 2267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2244,
											"end": 2268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2242,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2269,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2414,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 2493,
											"end": 2494,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2491,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 2425,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2496,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 2425,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2619,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2614,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2603,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2615,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2620,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2623,
											"end": 2702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 2623,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 2585,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2743,
											"end": 2744,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2793,
											"end": 2802,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2789,
											"end": 2811,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2768,
											"end": 2821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 2768,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2821,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2714,
											"end": 2831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2962,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2844,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 2949,
											"end": 2954,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2931,
											"end": 2955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 2955,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 2931,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2926,
											"end": 2929,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2919,
											"end": 2956,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2962,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2962,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3190,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 2968,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3061,
											"end": 3065,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3101,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3097,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3102,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3102,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 3180,
											"end": 3181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3178,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3182,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 3112,
											"end": 3183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 3112,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3190,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3190,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3272,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3196,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3239,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3266,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3250,
											"end": 3266,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3250,
											"end": 3266,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3272,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3272,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3278,
											"end": 3393,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 3278,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 3380,
											"end": 3385,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3363,
											"end": 3386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3363,
											"end": 3386,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 3363,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3358,
											"end": 3361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3387,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3278,
											"end": 3393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3278,
											"end": 3393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3278,
											"end": 3393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3617,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 3399,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3490,
											"end": 3494,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3530,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3517,
											"end": 3526,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3513,
											"end": 3531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3531,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3531,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 3607,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3592,
											"end": 3609,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3583,
											"end": 3589,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 3541,
											"end": 3610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3610,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 3541,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3617,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3713,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 3623,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3700,
											"end": 3705,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3693,
											"end": 3706,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3675,
											"end": 3707,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3675,
											"end": 3707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3713,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3713,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3713,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3719,
											"end": 3828,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 3719,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 3815,
											"end": 3820,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 3800,
											"end": 3821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3821,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 3800,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3798,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3788,
											"end": 3822,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3719,
											"end": 3828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3719,
											"end": 3828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3719,
											"end": 3828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 4044,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 3834,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 3925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 3961,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3948,
											"end": 3957,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3944,
											"end": 3962,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3936,
											"end": 3962,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3936,
											"end": 3962,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 4034,
											"end": 4035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4023,
											"end": 4032,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4019,
											"end": 4036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4016,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 3972,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 4037,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 3972,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 4044,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 4044,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 4044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 4044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 4044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4050,
											"end": 4219,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 4050,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4145,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4156,
											"end": 4175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4212,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4203,
											"end": 4206,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4213,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4050,
											"end": 4219,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4050,
											"end": 4219,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4050,
											"end": 4219,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4050,
											"end": 4219,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4050,
											"end": 4219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4225,
											"end": 4392,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 4225,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4384,
											"name": "PUSH",
											"source": 10,
											"value": "546F6B656E206E6F7420616C6C6F776564000000000000000000000000000000"
										},
										{
											"begin": 4361,
											"end": 4362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4359,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4363,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4385,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4225,
											"end": 4392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4225,
											"end": 4392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4764,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 4398,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4561,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 4625,
											"end": 4627,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 4620,
											"end": 4623,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4561,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 4561,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4561,
											"end": 4628,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 4561,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4554,
											"end": 4628,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4554,
											"end": 4628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4637,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 4726,
											"end": 4729,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4637,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 4637,
											"end": 4730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4637,
											"end": 4730,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 4637,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4757,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4753,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 4758,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4739,
											"end": 4758,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4739,
											"end": 4758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4764,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4764,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 5189,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 4770,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4936,
											"end": 4940,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4974,
											"end": 4976,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4963,
											"end": 4972,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 4977,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4951,
											"end": 4977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4951,
											"end": 4977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5023,
											"end": 5032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5017,
											"end": 5021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5033,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5010,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5007,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 5011,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 5034,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 5177,
											"end": 5181,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 5051,
											"end": 5182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5182,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 5051,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5043,
											"end": 5182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5043,
											"end": 5182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 5189,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 5189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 5189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 5189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5195,
											"end": 5363,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 5195,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5355,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E74206D757374206265203E20300000000000000000000000000000"
										},
										{
											"begin": 5331,
											"end": 5332,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5323,
											"end": 5329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5312,
											"end": 5356,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5195,
											"end": 5363,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5195,
											"end": 5363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5511,
											"end": 5514,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 5596,
											"end": 5598,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 5591,
											"end": 5594,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5532,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 5532,
											"end": 5599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5532,
											"end": 5599,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 5532,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5599,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5608,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 5697,
											"end": 5700,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5608,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 5608,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5608,
											"end": 5701,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 5608,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5726,
											"end": 5728,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5721,
											"end": 5724,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5717,
											"end": 5729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5741,
											"end": 6160,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 5741,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5911,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5947,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5934,
											"end": 5943,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5930,
											"end": 5948,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5922,
											"end": 5948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5922,
											"end": 5948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6003,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5988,
											"end": 5992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5984,
											"end": 6004,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 5981,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5965,
											"end": 5982,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5958,
											"end": 6005,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6022,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 6148,
											"end": 6152,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6022,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 6022,
											"end": 6153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6022,
											"end": 6153,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 6022,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6014,
											"end": 6153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6014,
											"end": 6153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5741,
											"end": 6160,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5741,
											"end": 6160,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5741,
											"end": 6160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5741,
											"end": 6160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6166,
											"end": 6339,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 6166,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6306,
											"end": 6331,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E7420636F6C6C61746572616C000000000000000000"
										},
										{
											"begin": 6302,
											"end": 6303,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6294,
											"end": 6300,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6304,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6283,
											"end": 6332,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6166,
											"end": 6339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6166,
											"end": 6339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6345,
											"end": 6711,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 6345,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6487,
											"end": 6490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6508,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 6572,
											"end": 6574,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 6567,
											"end": 6570,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6508,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 6508,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6508,
											"end": 6575,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 6508,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6501,
											"end": 6575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6501,
											"end": 6575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6584,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 6673,
											"end": 6676,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6584,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 6584,
											"end": 6677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6584,
											"end": 6677,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 6584,
											"end": 6677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6702,
											"end": 6704,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6697,
											"end": 6700,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6693,
											"end": 6705,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6345,
											"end": 6711,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6345,
											"end": 6711,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6345,
											"end": 6711,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6345,
											"end": 6711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6717,
											"end": 7136,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6717,
											"end": 7136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6883,
											"end": 6887,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6921,
											"end": 6923,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6910,
											"end": 6919,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6906,
											"end": 6924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6898,
											"end": 6924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6898,
											"end": 6924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6970,
											"end": 6979,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6964,
											"end": 6968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 6980,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6956,
											"end": 6957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6945,
											"end": 6954,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6941,
											"end": 6958,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 6981,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6998,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 7124,
											"end": 7128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6998,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 6998,
											"end": 7129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6998,
											"end": 7129,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 6998,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 7129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6990,
											"end": 7129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6717,
											"end": 7136,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6717,
											"end": 7136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6717,
											"end": 7136,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6717,
											"end": 7136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7142,
											"end": 7322,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 7142,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7190,
											"end": 7267,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7187,
											"end": 7188,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7268,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7287,
											"end": 7291,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7284,
											"end": 7285,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7277,
											"end": 7292,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7311,
											"end": 7315,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7308,
											"end": 7309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7301,
											"end": 7316,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7522,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 7328,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7372,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7388,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 7406,
											"end": 7407,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7388,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7388,
											"end": 7408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7388,
											"end": 7408,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 7388,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7383,
											"end": 7408,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 7440,
											"end": 7441,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7422,
											"end": 7442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7442,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 7422,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7417,
											"end": 7442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7466,
											"end": 7467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7451,
											"end": 7468,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7451,
											"end": 7468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7490,
											"end": 7491,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7484,
											"end": 7488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7481,
											"end": 7492,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7478,
											"end": 7515,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7478,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 7478,
											"end": 7515,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 7495,
											"end": 7513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7478,
											"end": 7515,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 7478,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7522,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7522,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7528,
											"end": 7938,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 7528,
											"end": 7938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7568,
											"end": 7575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 7609,
											"end": 7610,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7591,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 7591,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7586,
											"end": 7611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7586,
											"end": 7611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7625,
											"end": 7645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 7643,
											"end": 7644,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7625,
											"end": 7645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7625,
											"end": 7645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7625,
											"end": 7645,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 7625,
											"end": 7645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7620,
											"end": 7645,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7620,
											"end": 7645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7677,
											"end": 7678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7682,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7702,
											"end": 7732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 7720,
											"end": 7731,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7702,
											"end": 7732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7702,
											"end": 7732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7702,
											"end": 7732,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 7702,
											"end": 7732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7732,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7881,
											"end": 7882,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7872,
											"end": 7879,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7883,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7865,
											"end": 7866,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7862,
											"end": 7884,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7842,
											"end": 7843,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7835,
											"end": 7844,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7815,
											"end": 7898,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 7792,
											"end": 7931,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7911,
											"end": 7929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 7911,
											"end": 7929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 7911,
											"end": 7929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7911,
											"end": 7929,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 7911,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7931,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 7792,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7576,
											"end": 7938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7528,
											"end": 7938,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7528,
											"end": 7938,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7528,
											"end": 7938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7528,
											"end": 7938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7528,
											"end": 7938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7944,
											"end": 8124,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 7944,
											"end": 8124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7992,
											"end": 8069,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7989,
											"end": 7990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 8070,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8089,
											"end": 8093,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 8086,
											"end": 8087,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8094,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8113,
											"end": 8117,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8110,
											"end": 8111,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8103,
											"end": 8118,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8130,
											"end": 8315,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 8130,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8170,
											"end": 8171,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 8205,
											"end": 8206,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 8187,
											"end": 8207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 8187,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8182,
											"end": 8207,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8182,
											"end": 8207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 8239,
											"end": 8240,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 8221,
											"end": 8241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8241,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 8221,
											"end": 8241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8216,
											"end": 8241,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8216,
											"end": 8241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8260,
											"end": 8261,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8250,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 8250,
											"end": 8285,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8265,
											"end": 8283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 8265,
											"end": 8283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 8265,
											"end": 8283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8265,
											"end": 8283,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 8265,
											"end": 8283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8250,
											"end": 8285,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 8250,
											"end": 8285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8307,
											"end": 8308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8304,
											"end": 8305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8300,
											"end": 8309,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8295,
											"end": 8309,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8295,
											"end": 8309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8130,
											"end": 8315,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8130,
											"end": 8315,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8130,
											"end": 8315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8130,
											"end": 8315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8130,
											"end": 8315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 8552,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 8321,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8461,
											"end": 8495,
											"name": "PUSH",
											"source": 10,
											"value": "5769746864726177616C20776F756C6420756E646572636F6C6C61746572616C"
										},
										{
											"begin": 8457,
											"end": 8458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8449,
											"end": 8455,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8445,
											"end": 8459,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8438,
											"end": 8496,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8530,
											"end": 8544,
											"name": "PUSH",
											"source": 10,
											"value": "697A6520706F736974696F6E0000000000000000000000000000000000000000"
										},
										{
											"begin": 8525,
											"end": 8527,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8517,
											"end": 8523,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8506,
											"end": 8545,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 8552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 8552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8558,
											"end": 8924,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 8558,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8700,
											"end": 8703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8721,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 8785,
											"end": 8787,
											"name": "PUSH",
											"source": 10,
											"value": "2C"
										},
										{
											"begin": 8780,
											"end": 8783,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8721,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 8721,
											"end": 8788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8721,
											"end": 8788,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 8721,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8714,
											"end": 8788,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8714,
											"end": 8788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8797,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 8886,
											"end": 8889,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8797,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 8797,
											"end": 8890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8797,
											"end": 8890,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 8797,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8915,
											"end": 8917,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8910,
											"end": 8913,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8906,
											"end": 8918,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8899,
											"end": 8918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8899,
											"end": 8918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8558,
											"end": 8924,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8558,
											"end": 8924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8558,
											"end": 8924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8558,
											"end": 8924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8930,
											"end": 9349,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 8930,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9096,
											"end": 9100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9134,
											"end": 9136,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9123,
											"end": 9132,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9137,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9111,
											"end": 9137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9111,
											"end": 9137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9192,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9177,
											"end": 9181,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9173,
											"end": 9193,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9170,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9158,
											"end": 9167,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9154,
											"end": 9171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9147,
											"end": 9194,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9211,
											"end": 9342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 9337,
											"end": 9341,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9211,
											"end": 9342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 9211,
											"end": 9342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9211,
											"end": 9342,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 9211,
											"end": 9342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9203,
											"end": 9342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9203,
											"end": 9342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8930,
											"end": 9349,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8930,
											"end": 9349,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8930,
											"end": 9349,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8930,
											"end": 9349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9526,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 9355,
											"end": 9526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9495,
											"end": 9518,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
										},
										{
											"begin": 9491,
											"end": 9492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9483,
											"end": 9489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9479,
											"end": 9493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9472,
											"end": 9519,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9532,
											"end": 9898,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 9532,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9674,
											"end": 9677,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9695,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 9759,
											"end": 9761,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 9754,
											"end": 9757,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9695,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 9695,
											"end": 9762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9695,
											"end": 9762,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 9695,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9688,
											"end": 9762,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9688,
											"end": 9762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 9860,
											"end": 9863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 9771,
											"end": 9864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9864,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 9771,
											"end": 9864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 9891,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9884,
											"end": 9887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9880,
											"end": 9892,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9873,
											"end": 9892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9873,
											"end": 9892,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9532,
											"end": 9898,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9532,
											"end": 9898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9532,
											"end": 9898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9532,
											"end": 9898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9904,
											"end": 10323,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 9904,
											"end": 10323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10070,
											"end": 10074,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10108,
											"end": 10110,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10097,
											"end": 10106,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10093,
											"end": 10111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10085,
											"end": 10111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10157,
											"end": 10166,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10151,
											"end": 10155,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10147,
											"end": 10167,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10143,
											"end": 10144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10132,
											"end": 10141,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10121,
											"end": 10168,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10185,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 10311,
											"end": 10315,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10185,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 10185,
											"end": 10316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10185,
											"end": 10316,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 10185,
											"end": 10316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10177,
											"end": 10316,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10177,
											"end": 10316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9904,
											"end": 10323,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9904,
											"end": 10323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9904,
											"end": 10323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9904,
											"end": 10323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10329,
											"end": 10520,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 10329,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10372,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10388,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 10406,
											"end": 10407,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10388,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 10388,
											"end": 10408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10388,
											"end": 10408,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 10388,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10383,
											"end": 10408,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10383,
											"end": 10408,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10422,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 10440,
											"end": 10441,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10422,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 10422,
											"end": 10442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10422,
											"end": 10442,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 10422,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10417,
											"end": 10442,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10417,
											"end": 10442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10465,
											"end": 10466,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10462,
											"end": 10463,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10451,
											"end": 10467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10486,
											"end": 10489,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10483,
											"end": 10484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10480,
											"end": 10490,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10477,
											"end": 10513,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10477,
											"end": 10513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 10477,
											"end": 10513,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10493,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 10493,
											"end": 10511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 10493,
											"end": 10511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10493,
											"end": 10511,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 10493,
											"end": 10511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10477,
											"end": 10513,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 10477,
											"end": 10513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10329,
											"end": 10520,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10329,
											"end": 10520,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10329,
											"end": 10520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10329,
											"end": 10520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10329,
											"end": 10520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10526,
											"end": 10747,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 10526,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10666,
											"end": 10700,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E7420636F6C6C61746572616C20666F7220626F7272"
										},
										{
											"begin": 10662,
											"end": 10663,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10654,
											"end": 10660,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10650,
											"end": 10664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10643,
											"end": 10701,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10735,
											"end": 10739,
											"name": "PUSH",
											"source": 10,
											"value": "6F77000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10730,
											"end": 10732,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10722,
											"end": 10728,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10733,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10711,
											"end": 10740,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10526,
											"end": 10747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10526,
											"end": 10747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10753,
											"end": 11119,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 10753,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 10898,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10916,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 10980,
											"end": 10982,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 10975,
											"end": 10978,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10916,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 10916,
											"end": 10983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10916,
											"end": 10983,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 10916,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10909,
											"end": 10983,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10909,
											"end": 10983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 11081,
											"end": 11084,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 10992,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10992,
											"end": 11085,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 10992,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11110,
											"end": 11112,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11105,
											"end": 11108,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11101,
											"end": 11113,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11094,
											"end": 11113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11094,
											"end": 11113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10753,
											"end": 11119,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10753,
											"end": 11119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10753,
											"end": 11119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10753,
											"end": 11119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11125,
											"end": 11544,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 11125,
											"end": 11544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11291,
											"end": 11295,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11329,
											"end": 11331,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11318,
											"end": 11327,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11314,
											"end": 11332,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11306,
											"end": 11332,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11306,
											"end": 11332,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11378,
											"end": 11387,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11372,
											"end": 11376,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11368,
											"end": 11388,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11364,
											"end": 11365,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11353,
											"end": 11362,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11349,
											"end": 11366,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11342,
											"end": 11389,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11406,
											"end": 11537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 11532,
											"end": 11536,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11406,
											"end": 11537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 11406,
											"end": 11537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11406,
											"end": 11537,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 11406,
											"end": 11537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11125,
											"end": 11544,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11125,
											"end": 11544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11125,
											"end": 11544,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11125,
											"end": 11544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11550,
											"end": 11774,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 11550,
											"end": 11774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11690,
											"end": 11724,
											"name": "PUSH",
											"source": 10,
											"value": "526570617920616D6F756E74206578636565647320626F72726F776564206261"
										},
										{
											"begin": 11686,
											"end": 11687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11678,
											"end": 11684,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11674,
											"end": 11688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11667,
											"end": 11725,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11759,
											"end": 11766,
											"name": "PUSH",
											"source": 10,
											"value": "6C616E6365000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11754,
											"end": 11756,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11742,
											"end": 11757,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11735,
											"end": 11767,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11550,
											"end": 11774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11550,
											"end": 11774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 12146,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 11780,
											"end": 12146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11922,
											"end": 11925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11943,
											"end": 12010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 12007,
											"end": 12009,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 12002,
											"end": 12005,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11943,
											"end": 12010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 11943,
											"end": 12010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11943,
											"end": 12010,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 11943,
											"end": 12010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11936,
											"end": 12010,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11936,
											"end": 12010,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12019,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 12108,
											"end": 12111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12019,
											"end": 12112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 12019,
											"end": 12112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12019,
											"end": 12112,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 12019,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12137,
											"end": 12139,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12132,
											"end": 12135,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12128,
											"end": 12140,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12121,
											"end": 12140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12121,
											"end": 12140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 12146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 12146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 12146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 12146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12152,
											"end": 12571,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 12152,
											"end": 12571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12356,
											"end": 12358,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12345,
											"end": 12354,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12341,
											"end": 12359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12333,
											"end": 12359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12333,
											"end": 12359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12405,
											"end": 12414,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12399,
											"end": 12403,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12395,
											"end": 12415,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12391,
											"end": 12392,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12380,
											"end": 12389,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12376,
											"end": 12393,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12369,
											"end": 12416,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12433,
											"end": 12564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 12559,
											"end": 12563,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12433,
											"end": 12564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 12433,
											"end": 12564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12433,
											"end": 12564,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 12433,
											"end": 12564,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12425,
											"end": 12564,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12425,
											"end": 12564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12152,
											"end": 12571,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12152,
											"end": 12571,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12152,
											"end": 12571,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12152,
											"end": 12571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12577,
											"end": 12750,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 12577,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12717,
											"end": 12742,
											"name": "PUSH",
											"source": 10,
											"value": "466163746F72206D757374206265203C3D203130303030000000000000000000"
										},
										{
											"begin": 12713,
											"end": 12714,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12705,
											"end": 12711,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12701,
											"end": 12715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12694,
											"end": 12743,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12577,
											"end": 12750,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12577,
											"end": 12750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 13122,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 12756,
											"end": 13122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12898,
											"end": 12901,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12919,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 12983,
											"end": 12985,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 12978,
											"end": 12981,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12919,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 12919,
											"end": 12986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12919,
											"end": 12986,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 12919,
											"end": 12986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12912,
											"end": 12986,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12912,
											"end": 12986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12995,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 13084,
											"end": 13087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12995,
											"end": 13088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 12995,
											"end": 13088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12995,
											"end": 13088,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 12995,
											"end": 13088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13113,
											"end": 13115,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13108,
											"end": 13111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13104,
											"end": 13116,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13097,
											"end": 13116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13097,
											"end": 13116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 13122,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 13122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 13122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 13122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13128,
											"end": 13547,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 13128,
											"end": 13547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13294,
											"end": 13298,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13332,
											"end": 13334,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13321,
											"end": 13330,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13317,
											"end": 13335,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13309,
											"end": 13335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13309,
											"end": 13335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13381,
											"end": 13390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13375,
											"end": 13379,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13371,
											"end": 13391,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13367,
											"end": 13368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13356,
											"end": 13365,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13352,
											"end": 13369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13345,
											"end": 13392,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13409,
											"end": 13540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 13535,
											"end": 13539,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13409,
											"end": 13540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 13409,
											"end": 13540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13409,
											"end": 13540,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 13409,
											"end": 13540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13401,
											"end": 13540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13401,
											"end": 13540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13128,
											"end": 13547,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13128,
											"end": 13547,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13128,
											"end": 13547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13128,
											"end": 13547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13781,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 13553,
											"end": 13781,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13591,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13611,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 13628,
											"end": 13633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13611,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 13611,
											"end": 13634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13611,
											"end": 13634,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 13611,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13602,
											"end": 13634,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13602,
											"end": 13634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13656,
											"end": 13722,
											"name": "PUSH",
											"source": 10,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13649,
											"end": 13654,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13646,
											"end": 13723,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 13643,
											"end": 13746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13726,
											"end": 13744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 13726,
											"end": 13744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 13726,
											"end": 13744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13726,
											"end": 13744,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 13726,
											"end": 13744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13746,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 13643,
											"end": 13746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13769,
											"end": 13774,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13766,
											"end": 13767,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13762,
											"end": 13775,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13755,
											"end": 13775,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13755,
											"end": 13775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13781,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13787,
											"end": 13968,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 13787,
											"end": 13968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13927,
											"end": 13960,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 13923,
											"end": 13924,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13915,
											"end": 13921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13911,
											"end": 13925,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13904,
											"end": 13961,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13787,
											"end": 13968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13787,
											"end": 13968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13974,
											"end": 14340,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 13974,
											"end": 14340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14116,
											"end": 14119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14137,
											"end": 14204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 14201,
											"end": 14203,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 14196,
											"end": 14199,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14137,
											"end": 14204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 14137,
											"end": 14204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14137,
											"end": 14204,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 14137,
											"end": 14204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14130,
											"end": 14204,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14130,
											"end": 14204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14213,
											"end": 14306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 14302,
											"end": 14305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14213,
											"end": 14306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 14213,
											"end": 14306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14213,
											"end": 14306,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 14213,
											"end": 14306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14331,
											"end": 14333,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14326,
											"end": 14329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14322,
											"end": 14334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14315,
											"end": 14334,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14315,
											"end": 14334,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13974,
											"end": 14340,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13974,
											"end": 14340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13974,
											"end": 14340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13974,
											"end": 14340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14346,
											"end": 14765,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 14346,
											"end": 14765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14512,
											"end": 14516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14550,
											"end": 14552,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14539,
											"end": 14548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14535,
											"end": 14553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14527,
											"end": 14553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14527,
											"end": 14553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14599,
											"end": 14608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14593,
											"end": 14597,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14589,
											"end": 14609,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14585,
											"end": 14586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14574,
											"end": 14583,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14570,
											"end": 14587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14563,
											"end": 14610,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14627,
											"end": 14758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 14753,
											"end": 14757,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14627,
											"end": 14758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 14627,
											"end": 14758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14627,
											"end": 14758,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 14627,
											"end": 14758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14619,
											"end": 14758,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14619,
											"end": 14758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14346,
											"end": 14765,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14346,
											"end": 14765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14346,
											"end": 14765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14346,
											"end": 14765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14771,
											"end": 15103,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 14771,
											"end": 15103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14892,
											"end": 14896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14930,
											"end": 14932,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14919,
											"end": 14928,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14915,
											"end": 14933,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14907,
											"end": 14933,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14907,
											"end": 14933,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14943,
											"end": 15014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 15011,
											"end": 15012,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15000,
											"end": 15009,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14996,
											"end": 15013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14987,
											"end": 14993,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14943,
											"end": 15014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 14943,
											"end": 15014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14943,
											"end": 15014,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 14943,
											"end": 15014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 15092,
											"end": 15094,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15081,
											"end": 15090,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15077,
											"end": 15095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15068,
											"end": 15074,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 15024,
											"end": 15096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15096,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 15024,
											"end": 15096,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14771,
											"end": 15103,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14771,
											"end": 15103,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14771,
											"end": 15103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14771,
											"end": 15103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14771,
											"end": 15103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14771,
											"end": 15103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15109,
											"end": 15551,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 15109,
											"end": 15551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15258,
											"end": 15262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15296,
											"end": 15298,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15285,
											"end": 15294,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15281,
											"end": 15299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15273,
											"end": 15299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15273,
											"end": 15299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15309,
											"end": 15380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 15377,
											"end": 15378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15366,
											"end": 15375,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15362,
											"end": 15379,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15353,
											"end": 15359,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15309,
											"end": 15380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 15309,
											"end": 15380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15309,
											"end": 15380,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 15309,
											"end": 15380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15390,
											"end": 15462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 15458,
											"end": 15460,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15447,
											"end": 15456,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15443,
											"end": 15461,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15434,
											"end": 15440,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15390,
											"end": 15462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 15390,
											"end": 15462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15390,
											"end": 15462,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 15390,
											"end": 15462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15472,
											"end": 15544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 15540,
											"end": 15542,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15529,
											"end": 15538,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15525,
											"end": 15543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15516,
											"end": 15522,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15472,
											"end": 15544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 15472,
											"end": 15544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15472,
											"end": 15544,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 15472,
											"end": 15544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15109,
											"end": 15551,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 15109,
											"end": 15551,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15109,
											"end": 15551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15109,
											"end": 15551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15109,
											"end": 15551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15109,
											"end": 15551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15109,
											"end": 15551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"C/collateralMargin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAllowedToken(address)": "4178617f",
							"allowedTokens(address)": "e744092e",
							"borrowBalances(address,address)": "fc7d42d7",
							"borrowCollateral(address,uint256)": "6a0c7e9d",
							"collateralBalances(address,address)": "39ecf9ba",
							"collateralFactors(address)": "572d9888",
							"depositCollateral(address,uint256)": "a5d5db0c",
							"getCollateralBalance(address,address)": "b7d5820b",
							"getCollateralMargin(address,address)": "c3b8d9a3",
							"getEffectiveCollateral(address,address)": "8009f857",
							"owner()": "8da5cb5b",
							"removeAllowedToken(address)": "90469a9d",
							"renounceOwnership()": "715018a6",
							"repayBorrow(address,uint256)": "abdb5ea8",
							"setCollateralFactor(address,uint256)": "c04f31ff",
							"transferOwnership(address)": "f2fde38b",
							"withdrawCollateral(address,uint256)": "350c35e9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"AllowedTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"AllowedTokenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Borrowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"factor\",\"type\":\"uint256\"}],\"name\":\"CollateralFactorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repaid\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"addAllowedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrowCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralFactors\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getCollateralBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getCollateralMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getEffectiveCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeAllowedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"repayBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"factor\",\"type\":\"uint256\"}],\"name\":\"setCollateralFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"addAllowedToken(address)\":{\"params\":{\"token\":\"The address of the ERC20 token to allow\"}},\"borrowCollateral(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to borrow\",\"token\":\"The address of the ERC20 token to borrow\"}},\"depositCollateral(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to deposit\",\"token\":\"The address of the ERC20 token to deposit\"}},\"getCollateralBalance(address,address)\":{\"params\":{\"token\":\"The address of the ERC20 token\",\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The amount of collateral the user has deposited for the token\"}},\"getCollateralMargin(address,address)\":{\"params\":{\"token\":\"The address of the ERC20 token\",\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The collateral margin as a signed integer\"}},\"getEffectiveCollateral(address,address)\":{\"params\":{\"token\":\"The address of the ERC20 token\",\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The effective collateral value after applying the collateral factor\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeAllowedToken(address)\":{\"params\":{\"token\":\"The address of the ERC20 token to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"repayBorrow(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to repay\",\"token\":\"The address of the ERC20 token to repay\"}},\"setCollateralFactor(address,uint256)\":{\"params\":{\"factor\":\"The collateral factor in basis points (max 10000, which equals 100%)\",\"token\":\"The address of the ERC20 token\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawCollateral(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to withdraw\",\"token\":\"The address of the ERC20 token to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAllowedToken(address)\":{\"notice\":\"Owner can add an ERC20 token to the allowed list\"},\"borrowCollateral(address,uint256)\":{\"notice\":\"Allows a user to borrow tokens against their collateral. The new borrow balance cannot exceed the user's effective collateral.\"},\"constructor\":{\"notice\":\"Constructor initializes the contract owner\"},\"depositCollateral(address,uint256)\":{\"notice\":\"Allows a user to deposit a specified amount of an allowed token as collateral\"},\"getCollateralBalance(address,address)\":{\"notice\":\"Returns the collateral balance for a given user and token.\"},\"getCollateralMargin(address,address)\":{\"notice\":\"Computes the collateral margin for a user, defined as the effective collateral minus the borrowed amount. A negative margin indicates that the position is undercollateralized.\"},\"getEffectiveCollateral(address,address)\":{\"notice\":\"Computes the effective collateral for a user based on the collateral factor of the token.\"},\"removeAllowedToken(address)\":{\"notice\":\"Owner can remove an ERC20 token from the allowed list\"},\"repayBorrow(address,uint256)\":{\"notice\":\"Allows a user to repay their borrowed tokens.\"},\"setCollateralFactor(address,uint256)\":{\"notice\":\"Owner can set the collateral factor for an allowed token\"},\"withdrawCollateral(address,uint256)\":{\"notice\":\"Allows a user to withdraw a specified amount of their collateral, ensuring the remaining effective collateral covers any borrowings.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"C/collateralMargin.sol\":\"CollateralManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"C/collateralMargin.sol\":{\"keccak256\":\"0xa8941a34719ea32e64ee6e0b596ec7b3c14e401b37009b3d09d15fae31e30513\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://710c87245eb85cff209ac8d4310bf21788d1002e392f519564be7704eca37044\",\"dweb:/ipfs/QmQEnsPsvZbb4kxAzr77uip9qbGXAPz69q6p7ZeAaFswni\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "C/collateralMargin.sol:CollateralManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "C/collateralMargin.sol:CollateralManager",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 848,
								"contract": "C/collateralMargin.sol:CollateralManager",
								"label": "allowedTokens",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 852,
								"contract": "C/collateralMargin.sol:CollateralManager",
								"label": "collateralFactors",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 858,
								"contract": "C/collateralMargin.sol:CollateralManager",
								"label": "collateralBalances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 864,
								"contract": "C/collateralMargin.sol:CollateralManager",
								"label": "borrowBalances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addAllowedToken(address)": {
								"notice": "Owner can add an ERC20 token to the allowed list"
							},
							"borrowCollateral(address,uint256)": {
								"notice": "Allows a user to borrow tokens against their collateral. The new borrow balance cannot exceed the user's effective collateral."
							},
							"constructor": {
								"notice": "Constructor initializes the contract owner"
							},
							"depositCollateral(address,uint256)": {
								"notice": "Allows a user to deposit a specified amount of an allowed token as collateral"
							},
							"getCollateralBalance(address,address)": {
								"notice": "Returns the collateral balance for a given user and token."
							},
							"getCollateralMargin(address,address)": {
								"notice": "Computes the collateral margin for a user, defined as the effective collateral minus the borrowed amount. A negative margin indicates that the position is undercollateralized."
							},
							"getEffectiveCollateral(address,address)": {
								"notice": "Computes the effective collateral for a user based on the collateral factor of the token."
							},
							"removeAllowedToken(address)": {
								"notice": "Owner can remove an ERC20 token from the allowed list"
							},
							"repayBorrow(address,uint256)": {
								"notice": "Allows a user to repay their borrowed tokens."
							},
							"setCollateralFactor(address,uint256)": {
								"notice": "Owner can set the collateral factor for an allowed token"
							},
							"withdrawCollateral(address,uint256)": {
								"notice": "Allows a user to withdraw a specified amount of their collateral, ensuring the remaining effective collateral covers any borrowings."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							819
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 820,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 819,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 819,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								819
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 801,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							831
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 831,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								831,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							831
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 832,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							789
						]
					},
					"id": 790,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 790,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 790,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 789,
							"linearizedBaseContracts": [
								789
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 789,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 789,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "2548:139:6",
										"statements": [
											{
												"assignments": [
													464
												],
												"declarations": [
													{
														"constant": false,
														"id": 464,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "2558:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 463,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 469,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$789",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$789",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2612:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2581:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "2581:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 475,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2643:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 476,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2650:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 477,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "2659:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 478,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2674:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 474,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "2630:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2493:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2493:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2493:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2507:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2524:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:6"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:6"
									},
									"scope": 789,
									"src": "2462:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "3453:370:6",
										"statements": [
											{
												"id": 524,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:6",
												"statements": [
													{
														"assignments": [
															495
														],
														"declarations": [
															{
																"constant": false,
																"id": 495,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 524,
																"src": "3487:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 504,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 500,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$789",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$789",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 498,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 502,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3545:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 496,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3514:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "3514:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 505,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "3571:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 506,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "3590:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 515,
														"nodeType": "IfStatement",
														"src": "3567:160:6",
														"trueBody": {
															"id": 514,
															"nodeType": "Block",
															"src": "3609:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 509,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 489,
																				"src": "3667:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 510,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "3676:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 511,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "3694:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 508,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "3634:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 513,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 517,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3753:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 518,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3760:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 519,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "3769:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 520,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "3788:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 516,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "3740:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 523,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3386:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 485,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3386:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3386:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3400:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3417:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:6"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:6"
									},
									"scope": 789,
									"src": "3355:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "4477:303:6",
										"statements": [
											{
												"assignments": [
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "4487:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 537,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 541,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "4530:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "4530:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 543,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "4546:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 544,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4555:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 545,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 539,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:6"
											},
											{
												"condition": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 549,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "4602:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 550,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "4609:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 548,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "4578:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "4573:201:6",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "4624:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 554,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "4658:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 557,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "4680:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "4680:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 559,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 532,
																						"src": "4696:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 555,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 553,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4638:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 564,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 566,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "4743:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 567,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "4750:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 565,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4723:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 569,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4422:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 529,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 528,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4422:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4422:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4436:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4453:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:6"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:6"
									},
									"scope": 789,
									"src": "4400:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "5227:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 586,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "5241:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 600,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "5350:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 601,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5354:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 602,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5361:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 598,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "5328:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5328:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 613,
													"nodeType": "IfStatement",
													"src": "5323:117:6",
													"trueBody": {
														"id": 612,
														"nodeType": "Block",
														"src": "5368:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 608,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 577,
																					"src": "5422:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 606,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 605,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5389:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 611,
																"nodeType": "RevertStatement",
																"src": "5382:47:6"
															}
														]
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "5237:203:6",
												"trueBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "5262:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "5289:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 593,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "5296:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "5300:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 591,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5276:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 596,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5156:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 576,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 575,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5156:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5156:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5172:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5184:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5199:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:6"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:6"
									},
									"scope": 789,
									"src": "5124:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "5965:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 631,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "5979:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 646,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6102:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 647,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "6108:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 648,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6112:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 649,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6119:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 644,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "6076:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6076:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 660,
													"nodeType": "IfStatement",
													"src": "6071:127:6",
													"trueBody": {
														"id": 659,
														"nodeType": "Block",
														"src": "6126:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 655,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 620,
																					"src": "6180:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 654,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 653,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 652,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6147:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 658,
																"nodeType": "RevertStatement",
																"src": "6140:47:6"
															}
														]
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "5975:223:6",
												"trueBody": {
													"id": 643,
													"nodeType": "Block",
													"src": "6000:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "6031:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 638,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "6038:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "6044:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 640,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6048:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6014:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 642,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5843:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 619,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 618,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5843:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5843:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5867:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5889:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5909:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5932:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:6"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:6"
									},
									"scope": 789,
									"src": "5798:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "6971:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 676,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "6985:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 690,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "7093:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 691,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "7097:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 692,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "7104:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 688,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "7072:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7072:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 703,
													"nodeType": "IfStatement",
													"src": "7067:116:6",
													"trueBody": {
														"id": 702,
														"nodeType": "Block",
														"src": "7111:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 698,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 667,
																					"src": "7165:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 696,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 695,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7132:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 701,
																"nodeType": "RevertStatement",
																"src": "7125:47:6"
															}
														]
													}
												},
												"id": 704,
												"nodeType": "IfStatement",
												"src": "6981:202:6",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "7006:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 682,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "7033:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 683,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "7040:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 684,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "7044:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 681,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "7020:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6900:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 665,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6900:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6900:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6916:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6928:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6943:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 672,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:6"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:6"
									},
									"scope": 789,
									"src": "6869:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7756:650:6",
										"statements": [
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "7766:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 717,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:6"
											},
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "7794:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:6"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:6",
													"nodeType": "YulBlock",
													"src": "7848:396:6",
													"statements": [
														{
															"nativeSrc": "7862:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:6"
																		},
																		"nativeSrc": "7882:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:6",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:6"
																		},
																		"nativeSrc": "7899:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:6"
																		},
																		"nativeSrc": "7916:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:6"
																},
																"nativeSrc": "7877:60:6",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:6",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:6",
																"nodeType": "YulBlock",
																"src": "7998:157:6",
																"statements": [
																	{
																		"nativeSrc": "8016:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:6"
																			},
																			"nativeSrc": "8027:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:6"
																					},
																					"nativeSrc": "8078:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:6"
																			},
																			"nativeSrc": "8055:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:6"
																		},
																		"nativeSrc": "8055:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:6"
																					},
																					"nativeSrc": "8124:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:6"
																			},
																			"nativeSrc": "8112:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:6"
																		},
																		"nativeSrc": "8112:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:6"
																},
																"nativeSrc": "7982:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:6"
															},
															"nativeSrc": "7979:176:6",
															"nodeType": "YulIf",
															"src": "7979:176:6"
														},
														{
															"nativeSrc": "8168:30:6",
															"nodeType": "YulAssignment",
															"src": "8168:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:6"
																},
																"nativeSrc": "8182:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:6"
																}
															]
														},
														{
															"nativeSrc": "8211:23:6",
															"nodeType": "YulAssignment",
															"src": "8211:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:6"
																},
																"nativeSrc": "8226:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:6",
														"valueSize": 1
													},
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:6",
														"valueSize": 1
													},
													{
														"declaration": 716,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:6",
														"valueSize": 1
													},
													{
														"declaration": 719,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:6",
														"valueSize": 1
													},
													{
														"declaration": 710,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 721,
												"nodeType": "InlineAssembly",
												"src": "7823:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 722,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "8258:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 733,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "8310:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 727,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "8284:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 725,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "IfStatement",
												"src": "8254:146:6",
												"trueBody": {
													"id": 744,
													"nodeType": "Block",
													"src": "8328:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 740,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "8382:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 738,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 737,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "8349:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 743,
															"nodeType": "RevertStatement",
															"src": "8342:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7715:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 709,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 708,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "7715:6:6"
													},
													"referencedDeclaration": 380,
													"src": "7715:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7729:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:6"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:6"
									},
									"scope": 789,
									"src": "7686:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "8997:391:6",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9007:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 758,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 760,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:6"
											},
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9029:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:6"
											},
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9057:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 764,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:6",
													"nodeType": "YulBlock",
													"src": "9111:174:6",
													"statements": [
														{
															"nativeSrc": "9125:71:6",
															"nodeType": "YulAssignment",
															"src": "9125:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:6"
																		},
																		"nativeSrc": "9141:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:6"
																		},
																		"nativeSrc": "9158:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:6"
																		},
																		"nativeSrc": "9175:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:6"
																},
																"nativeSrc": "9136:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:6"
																}
															]
														},
														{
															"nativeSrc": "9209:30:6",
															"nodeType": "YulAssignment",
															"src": "9209:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:6"
																},
																"nativeSrc": "9223:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:6"
																}
															]
														},
														{
															"nativeSrc": "9252:23:6",
															"nodeType": "YulAssignment",
															"src": "9252:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:6"
																},
																"nativeSrc": "9267:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:6",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:6",
														"valueSize": 1
													},
													{
														"declaration": 762,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:6",
														"valueSize": 1
													},
													{
														"declaration": 759,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:6",
														"valueSize": 1
													},
													{
														"declaration": 751,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 767,
												"nodeType": "InlineAssembly",
												"src": "9086:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 768,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "9301:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 769,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "9313:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 780,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9364:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 774,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 751,
																						"src": "9339:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 773,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 772,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 784,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 757,
												"id": 786,
												"nodeType": "Return",
												"src": "9294:87:6"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8941:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 750,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 749,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8941:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8941:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8955:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:6"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8991:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:6"
									},
									"scope": 789,
									"src": "8908:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 790,
							"src": "698:8692:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							819
						]
					},
					"id": 820,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 791,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 792,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 819,
							"linearizedBaseContracts": [
								819
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 797,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 796,
												"id": 799,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 819,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 806,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 805,
												"id": 808,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 803,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 819,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 814,
												"id": 816,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 819,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 820,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							831
						]
					},
					"id": 832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 821,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 822,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 831,
							"linearizedBaseContracts": [
								831
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 824,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 831,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 832,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"C/collateralMargin.sol": {
				"ast": {
					"absolutePath": "C/collateralMargin.sol",
					"exportedSymbols": {
						"CollateralManager": [
							1394
						],
						"Context": [
							819
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							789
						]
					},
					"id": 1395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 834,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1395,
							"sourceUnit": 148,
							"src": "124:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 835,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1395,
							"sourceUnit": 303,
							"src": "177:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 836,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1395,
							"sourceUnit": 790,
							"src": "240:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 837,
										"name": "Ownable",
										"nameLocations": [
											"337:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "337:7:9"
									},
									"id": 838,
									"nodeType": "InheritanceSpecifier",
									"src": "337:7:9"
								},
								{
									"baseName": {
										"id": 839,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"346:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "346:15:9"
									},
									"id": 840,
									"nodeType": "InheritanceSpecifier",
									"src": "346:15:9"
								}
							],
							"canonicalName": "CollateralManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1394,
							"linearizedBaseContracts": [
								1394,
								302,
								147,
								819
							],
							"name": "CollateralManager",
							"nameLocation": "316:17:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 844,
									"libraryName": {
										"id": 841,
										"name": "SafeERC20",
										"nameLocations": [
											"374:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 789,
										"src": "374:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "368:27:9",
									"typeName": {
										"id": 843,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 842,
											"name": "IERC20",
											"nameLocations": [
												"388:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "388:6:9"
										},
										"referencedDeclaration": 380,
										"src": "388:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "e744092e",
									"id": 848,
									"mutability": "mutable",
									"name": "allowedTokens",
									"nameLocation": "501:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1394,
									"src": "469:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 847,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 845,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "477:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "469:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 846,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "488:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "572d9888",
									"id": 852,
									"mutability": "mutable",
									"name": "collateralFactors",
									"nameLocation": "650:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1394,
									"src": "615:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 851,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 849,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "623:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "615:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 850,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "634:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39ecf9ba",
									"id": 858,
									"mutability": "mutable",
									"name": "collateralBalances",
									"nameLocation": "802:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 1394,
									"src": "747:73:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 857,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 853,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "755:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "747:47:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 856,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 854,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "774:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "766:27:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 855,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "785:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc7d42d7",
									"id": 864,
									"mutability": "mutable",
									"name": "borrowBalances",
									"nameLocation": "960:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1394,
									"src": "905:69:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 863,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 859,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "913:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "905:47:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 862,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 860,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "932:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "924:27:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 861,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "943:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f1c0dd7e9b98bbff859029005ef89b127af049cd18df1a8d79f0b7e019911e56",
									"id": 872,
									"name": "CollateralDeposited",
									"nameLocation": "1041:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1077:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "1061:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1099:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "1083:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1114:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "1106:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1106:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:61:9"
									},
									"src": "1035:87:9"
								},
								{
									"anonymous": false,
									"eventSelector": "45892a46e6cef329bb642da6d69846d324db43d19008edc141ed82382eda1bee",
									"id": 880,
									"name": "CollateralWithdrawn",
									"nameLocation": "1133:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1169:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1153:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1191:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1175:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1206:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1198:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:61:9"
									},
									"src": "1127:87:9"
								},
								{
									"anonymous": false,
									"eventSelector": "f849d00bc67e9e4bf072df9680646c59b8c5380160834c2e1d4896ce5ec81f75",
									"id": 884,
									"name": "AllowedTokenAdded",
									"nameLocation": "1225:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1259:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1243:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:23:9"
									},
									"src": "1219:47:9"
								},
								{
									"anonymous": false,
									"eventSelector": "bf996b4fd74f0c7159bb017b1db415b0d9a6f13129f46d0b93309d170b78df31",
									"id": 888,
									"name": "AllowedTokenRemoved",
									"nameLocation": "1277:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1313:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1297:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:23:9"
									},
									"src": "1271:49:9"
								},
								{
									"anonymous": false,
									"eventSelector": "275d6207ccd4271a12c584febf2bcf32254205dfb4639ce1a9184d2e2609e2d0",
									"id": 894,
									"name": "CollateralFactorUpdated",
									"nameLocation": "1331:23:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1371:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "1355:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"indexed": false,
												"mutability": "mutable",
												"name": "factor",
												"nameLocation": "1386:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "1378:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:39:9"
									},
									"src": "1325:69:9"
								},
								{
									"anonymous": false,
									"eventSelector": "3fc499aeb0bb1cb58b6de8b02b3f86f4e7394e9690bef0110e32ced8a5631045",
									"id": 902,
									"name": "Borrowed",
									"nameLocation": "1405:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1430:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1414:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1452:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1436:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1467:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1459:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1413:61:9"
									},
									"src": "1399:76:9"
								},
								{
									"anonymous": false,
									"eventSelector": "0a3fbbea70e93f2daafa3102f5c9a1b8315e6d7a1e43e4bc020bc1162327470a",
									"id": 910,
									"name": "Repaid",
									"nameLocation": "1486:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1509:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1493:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1531:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1515:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1546:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1538:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:61:9"
									},
									"src": "1480:74:9"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "1674:78:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 915,
																"name": "allowedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "1692:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 917,
															"indexExpression": {
																"id": 916,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "1706:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1692:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206e6f7420616c6c6f776564",
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1714:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b",
																"typeString": "literal_string \"Token not allowed\""
															},
															"value": "Token not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b",
																"typeString": "literal_string \"Token not allowed\""
															}
														],
														"id": 914,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1684:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1684:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1684:50:9"
											},
											{
												"id": 921,
												"nodeType": "PlaceholderStatement",
												"src": "1744:1:9"
											}
										]
									},
									"id": 923,
									"name": "onlyAllowedToken",
									"nameLocation": "1642:16:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1667:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "1659:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1658:15:9"
									},
									"src": "1633:119:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "1851:2:9",
										"statements": []
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "1758:54:9",
										"text": "@notice Constructor initializes the contract owner"
									},
									"id": 932,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 927,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1839:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1843:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1839:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 929,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 926,
												"name": "Ownable",
												"nameLocations": [
													"1831:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1831:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1831:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1828:2:9"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1851:0:9"
									},
									"scope": 1394,
									"src": "1817:36:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "2044:146:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 941,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 935,
																"src": "2062:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2079:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2071:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 942,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2071:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2071:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2062:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2083:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 940,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2054:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2054:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "2054:53:9"
											},
											{
												"expression": {
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 950,
															"name": "allowedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "2117:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 952,
														"indexExpression": {
															"id": 951,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "2131:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2117:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2140:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2117:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "2117:27:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 957,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "2177:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 956,
														"name": "AllowedTokenAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "2159:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2159:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "EmitStatement",
												"src": "2154:29:9"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "1859:121:9",
										"text": "@notice Owner can add an ERC20 token to the allowed list\n @param token The address of the ERC20 token to allow"
									},
									"functionSelector": "4178617f",
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 938,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 937,
												"name": "onlyOwner",
												"nameLocations": [
													"2034:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2034:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2034:9:9"
										}
									],
									"name": "addAllowedToken",
									"nameLocation": "1994:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2018:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "2010:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2009:15:9"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2044:0:9"
									},
									"scope": 1394,
									"src": "1985:205:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "2390:146:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 970,
																"name": "allowedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "2408:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 972,
															"indexExpression": {
																"id": 971,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "2422:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2408:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206e6f7420616c6c6f776564",
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2430:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b",
																"typeString": "literal_string \"Token not allowed\""
															},
															"value": "Token not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b",
																"typeString": "literal_string \"Token not allowed\""
															}
														],
														"id": 969,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2400:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2400:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "2400:50:9"
											},
											{
												"expression": {
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 976,
															"name": "allowedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "2460:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 978,
														"indexExpression": {
															"id": 977,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "2474:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2460:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2483:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2460:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "2460:28:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 983,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "2523:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 982,
														"name": "AllowedTokenRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "2503:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2503:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "EmitStatement",
												"src": "2498:31:9"
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "2196:127:9",
										"text": "@notice Owner can remove an ERC20 token from the allowed list\n @param token The address of the ERC20 token to remove"
									},
									"functionSelector": "90469a9d",
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 967,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 966,
												"name": "onlyOwner",
												"nameLocations": [
													"2380:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2380:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2380:9:9"
										}
									],
									"name": "removeAllowedToken",
									"nameLocation": "2337:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2364:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "2356:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:15:9"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2390:0:9"
									},
									"scope": 1394,
									"src": "2328:208:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "2861:164:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1001,
																"name": "factor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "2879:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2889:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "2879:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "466163746f72206d757374206265203c3d203130303030",
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2896:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60a50693cd6710402e4138e1cc38d3898d07421a4993f4bc27b72d5c442c766b",
																"typeString": "literal_string \"Factor must be <= 10000\""
															},
															"value": "Factor must be <= 10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60a50693cd6710402e4138e1cc38d3898d07421a4993f4bc27b72d5c442c766b",
																"typeString": "literal_string \"Factor must be <= 10000\""
															}
														],
														"id": 1000,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2871:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2871:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "2871:51:9"
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1007,
															"name": "collateralFactors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "2932:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1009,
														"indexExpression": {
															"id": 1008,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "2950:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2932:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1010,
														"name": "factor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "2959:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2932:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "2932:33:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1014,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "3004:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1015,
															"name": "factor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "3011:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1013,
														"name": "CollateralFactorUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "2980:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2980:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "EmitStatement",
												"src": "2975:43:9"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "2542:211:9",
										"text": "@notice Owner can set the collateral factor for an allowed token\n @param token The address of the ERC20 token\n @param factor The collateral factor in basis points (max 10000, which equals 100%)"
									},
									"functionSelector": "c04f31ff",
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 995,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 994,
												"name": "onlyOwner",
												"nameLocations": [
													"2827:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2827:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2827:9:9"
										},
										{
											"arguments": [
												{
													"id": 997,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 990,
													"src": "2854:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 998,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 996,
												"name": "onlyAllowedToken",
												"nameLocations": [
													"2837:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 923,
												"src": "2837:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2837:23:9"
										}
									],
									"name": "setCollateralFactor",
									"nameLocation": "2767:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2795:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "2787:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2787:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "factor",
												"nameLocation": "2810:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "2802:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2786:31:9"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2861:0:9"
									},
									"scope": 1394,
									"src": "2758:267:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "3374:309:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1033,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "3392:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3401:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3392:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3404:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3384:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3384:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "3384:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1043,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3524:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3528:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3524:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1047,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3544:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CollateralManager_$1394",
																		"typeString": "contract CollateralManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CollateralManager_$1394",
																		"typeString": "contract CollateralManager"
																	}
																],
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3536:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1045,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3536:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3536:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "3551:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1040,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "3500:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1039,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "3493:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3493:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3507:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "3493:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3493:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "3493:65:9"
											},
											{
												"expression": {
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1052,
																"name": "collateralBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "3568:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1056,
															"indexExpression": {
																"expression": {
																	"id": 1053,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3587:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3591:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3587:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3568:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1057,
														"indexExpression": {
															"id": 1055,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "3599:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3568:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1058,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "3609:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3568:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "3568:47:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1062,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3650:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3654:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3650:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "3662:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1065,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "3669:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "CollateralDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "3630:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3630:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "EmitStatement",
												"src": "3625:51:9"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "3031:206:9",
										"text": "@notice Allows a user to deposit a specified amount of an allowed token as collateral\n @param token The address of the ERC20 token to deposit\n @param amount The amount of tokens to deposit"
									},
									"functionSelector": "a5d5db0c",
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1027,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1026,
												"name": "nonReentrant",
												"nameLocations": [
													"3325:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3325:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3325:12:9"
										},
										{
											"arguments": [
												{
													"id": 1029,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1022,
													"src": "3363:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1030,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1028,
												"name": "onlyAllowedToken",
												"nameLocations": [
													"3346:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 923,
												"src": "3346:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3346:23:9"
										}
									],
									"name": "depositCollateral",
									"nameLocation": "3251:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3277:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "3269:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3269:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3292:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "3284:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3284:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3268:31:9"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3374:0:9"
									},
									"scope": 1394,
									"src": "3242:441:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "4098:873:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1083,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "4116:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4125:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4116:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4128:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1082,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4108:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4108:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "4108:41:9"
											},
											{
												"assignments": [
													1090
												],
												"declarations": [
													{
														"constant": false,
														"id": 1090,
														"mutability": "mutable",
														"name": "currentCollateral",
														"nameLocation": "4167:17:9",
														"nodeType": "VariableDeclaration",
														"scope": 1158,
														"src": "4159:25:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1089,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4159:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1097,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1091,
															"name": "collateralBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "4187:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1094,
														"indexExpression": {
															"expression": {
																"id": 1092,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4206:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4210:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4206:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4187:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1096,
													"indexExpression": {
														"id": 1095,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "4218:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4187:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4159:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1099,
																"name": "currentCollateral",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "4242:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1100,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "4263:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4242:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6c6c61746572616c",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4271:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
																"typeString": "literal_string \"Insufficient collateral\""
															},
															"value": "Insufficient collateral"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
																"typeString": "literal_string \"Insufficient collateral\""
															}
														],
														"id": 1098,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4234:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4234:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "4234:63:9"
											},
											{
												"assignments": [
													1106
												],
												"declarations": [
													{
														"constant": false,
														"id": 1106,
														"mutability": "mutable",
														"name": "newCollateralBalance",
														"nameLocation": "4377:20:9",
														"nodeType": "VariableDeclaration",
														"scope": 1158,
														"src": "4369:28:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4369:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1107,
														"name": "currentCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "4400:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1108,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "4420:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4369:57:9"
											},
											{
												"assignments": [
													1112
												],
												"declarations": [
													{
														"constant": false,
														"id": 1112,
														"mutability": "mutable",
														"name": "effectiveCollateral",
														"nameLocation": "4501:19:9",
														"nodeType": "VariableDeclaration",
														"scope": 1158,
														"src": "4493:27:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4493:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1120,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1113,
															"name": "newCollateralBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "4523:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"baseExpression": {
																"id": 1114,
																"name": "collateralFactors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "4546:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1116,
															"indexExpression": {
																"id": 1115,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "4564:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4546:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4523:47:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4573:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "4523:55:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4493:85:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1122,
																"name": "effectiveCollateral",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "4671:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1123,
																		"name": "borrowBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "4694:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1126,
																	"indexExpression": {
																		"expression": {
																			"id": 1124,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4709:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4713:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4709:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4694:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1128,
																"indexExpression": {
																	"id": 1127,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "4721:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4694:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4671:56:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c20776f756c6420756e646572636f6c6c61746572616c697a6520706f736974696f6e",
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4729:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c5353a6055dceb26ed4ee990197a6fedbded8b234b7bec8b5a421767149976d",
																"typeString": "literal_string \"Withdrawal would undercollateralize position\""
															},
															"value": "Withdrawal would undercollateralize position"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c5353a6055dceb26ed4ee990197a6fedbded8b234b7bec8b5a421767149976d",
																"typeString": "literal_string \"Withdrawal would undercollateralize position\""
															}
														],
														"id": 1121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4663:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4663:113:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "4663:113:9"
											},
											{
												"expression": {
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1133,
																"name": "collateralBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "4787:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1137,
															"indexExpression": {
																"expression": {
																	"id": 1134,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4806:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4810:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4806:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4787:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1138,
														"indexExpression": {
															"id": 1136,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "4818:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4787:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1139,
														"name": "newCollateralBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "4827:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4787:60:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "4787:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1146,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4884:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4888:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4884:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1148,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "4896:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1143,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "4864:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1142,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "4857:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4857:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4871:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "4857:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4857:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "4857:46:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1152,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4938:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4942:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4938:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1154,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "4950:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1155,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "4957:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1151,
														"name": "CollateralWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "4918:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4918:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "EmitStatement",
												"src": "4913:51:9"
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "3689:271:9",
										"text": "@notice Allows a user to withdraw a specified amount of their collateral,\n ensuring the remaining effective collateral covers any borrowings.\n @param token The address of the ERC20 token to withdraw\n @param amount The amount of tokens to withdraw"
									},
									"functionSelector": "350c35e9",
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1077,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1076,
												"name": "nonReentrant",
												"nameLocations": [
													"4049:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "4049:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4049:12:9"
										},
										{
											"arguments": [
												{
													"id": 1079,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1072,
													"src": "4087:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1080,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1078,
												"name": "onlyAllowedToken",
												"nameLocations": [
													"4070:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 923,
												"src": "4070:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4070:23:9"
										}
									],
									"name": "withdrawCollateral",
									"nameLocation": "3974:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4001:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "3993:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4016:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "4008:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3992:31:9"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4098:0:9"
									},
									"scope": 1394,
									"src": "3965:1006:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "5374:745:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1173,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "5392:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5401:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5392:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5404:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5384:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "5384:41:9"
											},
											{
												"assignments": [
													1180
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "effectiveCollateral",
														"nameLocation": "5496:19:9",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "5488:27:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1179,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5488:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1193,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1181,
																	"name": "collateralBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "5518:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1184,
																"indexExpression": {
																	"expression": {
																		"id": 1182,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5537:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5541:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5537:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5518:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1186,
															"indexExpression": {
																"id": 1185,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "5549:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5518:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"baseExpression": {
																"id": 1187,
																"name": "collateralFactors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "5558:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1189,
															"indexExpression": {
																"id": 1188,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "5576:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5558:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5518:64:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5585:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "5518:72:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5488:102:9"
											},
											{
												"assignments": [
													1195
												],
												"declarations": [
													{
														"constant": false,
														"id": 1195,
														"mutability": "mutable",
														"name": "newBorrowBalance",
														"nameLocation": "5608:16:9",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "5600:24:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1194,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5600:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1204,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1196,
																"name": "borrowBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "5627:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1199,
															"indexExpression": {
																"expression": {
																	"id": 1197,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5642:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5646:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5642:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5627:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1201,
														"indexExpression": {
															"id": 1200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "5654:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5627:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1202,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "5663:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5627:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5600:69:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1206,
																"name": "newBorrowBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "5762:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1207,
																"name": "effectiveCollateral",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "5782:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5762:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6c6c61746572616c20666f7220626f72726f77",
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5803:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d723c5210232a1ee5d4f00c6eaa61ffd90af53d796bbd326e2a3aed6c85c4784",
																"typeString": "literal_string \"Insufficient collateral for borrow\""
															},
															"value": "Insufficient collateral for borrow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d723c5210232a1ee5d4f00c6eaa61ffd90af53d796bbd326e2a3aed6c85c4784",
																"typeString": "literal_string \"Insufficient collateral for borrow\""
															}
														],
														"id": 1205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5754:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5754:86:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "5754:86:9"
											},
											{
												"expression": {
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1212,
																"name": "borrowBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "5851:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1216,
															"indexExpression": {
																"expression": {
																	"id": 1213,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5866:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5870:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5866:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5851:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1217,
														"indexExpression": {
															"id": 1215,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "5878:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5851:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1218,
														"name": "newBorrowBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "5887:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5851:52:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "5851:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1225,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6043:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6047:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6043:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "6055:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1222,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "6023:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1221,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "6016:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6016:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6030:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "6016:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6016:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "6016:46:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1231,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6086:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6090:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6086:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1233,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "6098:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1234,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "6105:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1230,
														"name": "Borrowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "6077:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6077:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "EmitStatement",
												"src": "6072:40:9"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "4977:261:9",
										"text": "@notice Allows a user to borrow tokens against their collateral.\n The new borrow balance cannot exceed the user's effective collateral.\n @param token The address of the ERC20 token to borrow\n @param amount The amount of tokens to borrow"
									},
									"functionSelector": "6a0c7e9d",
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1166,
												"name": "nonReentrant",
												"nameLocations": [
													"5325:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "5325:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5325:12:9"
										},
										{
											"arguments": [
												{
													"id": 1169,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1162,
													"src": "5363:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1170,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1168,
												"name": "onlyAllowedToken",
												"nameLocations": [
													"5346:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 923,
												"src": "5346:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5346:23:9"
										}
									],
									"name": "borrowCollateral",
									"nameLocation": "5252:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5277:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "5269:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5269:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5292:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "5284:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5284:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5268:31:9"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5374:0:9"
									},
									"scope": 1394,
									"src": "5243:876:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "6426:456:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1252,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "6444:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6453:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6444:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6456:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6436:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6436:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "6436:41:9"
											},
											{
												"assignments": [
													1259
												],
												"declarations": [
													{
														"constant": false,
														"id": 1259,
														"mutability": "mutable",
														"name": "borrowed",
														"nameLocation": "6495:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1305,
														"src": "6487:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1258,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6487:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1266,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1260,
															"name": "borrowBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "6506:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1263,
														"indexExpression": {
															"expression": {
																"id": 1261,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6521:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6525:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6521:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6506:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1265,
													"indexExpression": {
														"id": 1264,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "6533:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6506:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6487:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1268,
																"name": "borrowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1259,
																"src": "6557:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1269,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "6569:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6557:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526570617920616d6f756e74206578636565647320626f72726f7765642062616c616e6365",
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6577:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_240498d7579bea075a03e85335d7e0cf15113dc3a56e365a5a3e62864ea057ef",
																"typeString": "literal_string \"Repay amount exceeds borrowed balance\""
															},
															"value": "Repay amount exceeds borrowed balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_240498d7579bea075a03e85335d7e0cf15113dc3a56e365a5a3e62864ea057ef",
																"typeString": "literal_string \"Repay amount exceeds borrowed balance\""
															}
														],
														"id": 1267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6549:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "6549:68:9"
											},
											{
												"expression": {
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1274,
																"name": "borrowBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "6628:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1278,
															"indexExpression": {
																"expression": {
																	"id": 1275,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6643:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6647:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6643:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6628:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1279,
														"indexExpression": {
															"id": 1277,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "6655:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6628:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1280,
															"name": "borrowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "6664:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1281,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "6675:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6664:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6628:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "6628:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1289,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6793:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6797:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6793:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1293,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6813:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CollateralManager_$1394",
																		"typeString": "contract CollateralManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CollateralManager_$1394",
																		"typeString": "contract CollateralManager"
																	}
																],
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6805:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1291,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6805:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6805:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1295,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "6820:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1286,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "6769:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1285,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "6762:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6762:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6776:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "6762:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6762:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "6762:65:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1299,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6849:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6853:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6849:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1301,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "6861:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "6868:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1298,
														"name": "Repaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "6842:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6842:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1304,
												"nodeType": "EmitStatement",
												"src": "6837:38:9"
											}
										]
									},
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "6125:170:9",
										"text": "@notice Allows a user to repay their borrowed tokens.\n @param token The address of the ERC20 token to repay\n @param amount The amount of tokens to repay"
									},
									"functionSelector": "abdb5ea8",
									"id": 1306,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1246,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1245,
												"name": "nonReentrant",
												"nameLocations": [
													"6377:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "6377:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6377:12:9"
										},
										{
											"arguments": [
												{
													"id": 1248,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1241,
													"src": "6415:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1249,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1247,
												"name": "onlyAllowedToken",
												"nameLocations": [
													"6398:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 923,
												"src": "6398:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6398:23:9"
										}
									],
									"name": "repayBorrow",
									"nameLocation": "6309:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6329:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "6321:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6321:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6344:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "6336:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6336:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6320:31:9"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6426:0:9"
									},
									"scope": 1394,
									"src": "6300:582:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "7256:55:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1316,
															"name": "collateralBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "7273:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1318,
														"indexExpression": {
															"id": 1317,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "7292:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7273:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1320,
													"indexExpression": {
														"id": 1319,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "7298:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7273:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1321,
												"nodeType": "Return",
												"src": "7266:38:9"
											}
										]
									},
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "6888:244:9",
										"text": "@notice Returns the collateral balance for a given user and token.\n @param user The address of the user\n @param token The address of the ERC20 token\n @return The amount of collateral the user has deposited for the token"
									},
									"functionSelector": "b7d5820b",
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCollateralBalance",
									"nameLocation": "7146:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7175:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "7167:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7167:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7189:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "7181:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7181:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7166:29:9"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "7243:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7243:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7242:9:9"
									},
									"scope": 1394,
									"src": "7137:174:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "7722:90:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1333,
																	"name": "collateralBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "7739:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1335,
																"indexExpression": {
																	"id": 1334,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "7758:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7739:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1337,
															"indexExpression": {
																"id": 1336,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1328,
																"src": "7764:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7739:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"baseExpression": {
																"id": 1338,
																"name": "collateralFactors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "7773:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1340,
															"indexExpression": {
																"id": 1339,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1328,
																"src": "7791:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7773:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7739:58:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7800:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "7739:66:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1332,
												"id": 1344,
												"nodeType": "Return",
												"src": "7732:73:9"
											}
										]
									},
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "7317:281:9",
										"text": "@notice Computes the effective collateral for a user based on the collateral factor of the token.\n @param user The address of the user\n @param token The address of the ERC20 token\n @return The effective collateral value after applying the collateral factor"
									},
									"functionSelector": "8009f857",
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEffectiveCollateral",
									"nameLocation": "7612:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7643:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "7635:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7635:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7657:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "7649:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7649:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7634:29:9"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "7709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7709:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7708:9:9"
									},
									"scope": 1394,
									"src": "7603:209:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "8297:331:9",
										"statements": [
											{
												"assignments": [
													1357
												],
												"declarations": [
													{
														"constant": false,
														"id": 1357,
														"mutability": "mutable",
														"name": "effectiveCollateral",
														"nameLocation": "8315:19:9",
														"nodeType": "VariableDeclaration",
														"scope": 1392,
														"src": "8307:27:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1356,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8307:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1362,
												"initialValue": {
													"arguments": [
														{
															"id": 1359,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "8360:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1360,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "8366:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1358,
														"name": "getEffectiveCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "8337:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8337:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8307:65:9"
											},
											{
												"assignments": [
													1364
												],
												"declarations": [
													{
														"constant": false,
														"id": 1364,
														"mutability": "mutable",
														"name": "borrowed",
														"nameLocation": "8390:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1392,
														"src": "8382:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8382:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1370,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1365,
															"name": "borrowBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "8401:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1367,
														"indexExpression": {
															"id": 1366,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "8416:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8401:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1369,
													"indexExpression": {
														"id": 1368,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "8422:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8401:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8382:46:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1371,
														"name": "effectiveCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "8442:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1372,
														"name": "borrowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "8465:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8442:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1390,
													"nodeType": "Block",
													"src": "8551:71:9",
													"statements": [
														{
															"expression": {
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "8572:39:9",
																"subExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1384,
																				"name": "borrowed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1364,
																				"src": "8580:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1385,
																				"name": "effectiveCollateral",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1357,
																				"src": "8591:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8580:30:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8573:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1382,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8573:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8573:38:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"functionReturnParameters": 1355,
															"id": 1389,
															"nodeType": "Return",
															"src": "8565:46:9"
														}
													]
												},
												"id": 1391,
												"nodeType": "IfStatement",
												"src": "8438:184:9",
												"trueBody": {
													"id": 1381,
													"nodeType": "Block",
													"src": "8475:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1376,
																			"name": "effectiveCollateral",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1357,
																			"src": "8503:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1377,
																			"name": "borrowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1364,
																			"src": "8525:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8503:30:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8496:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 1374,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8496:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8496:38:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"functionReturnParameters": 1355,
															"id": 1380,
															"nodeType": "Return",
															"src": "8489:45:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "7818:357:9",
										"text": "@notice Computes the collateral margin for a user,\n defined as the effective collateral minus the borrowed amount.\n A negative margin indicates that the position is undercollateralized.\n @param user The address of the user\n @param token The address of the ERC20 token\n @return The collateral margin as a signed integer"
									},
									"functionSelector": "c3b8d9a3",
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCollateralMargin",
									"nameLocation": "8189:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "8217:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "8209:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8209:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8231:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "8223:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8223:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8208:29:9"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "8285:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1353,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8285:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8284:8:9"
									},
									"scope": 1394,
									"src": "8180:448:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1395,
							"src": "307:8323:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								872,
								880,
								884,
								888,
								894,
								902,
								910
							]
						}
					],
					"src": "32:8599:9"
				},
				"id": 9
			}
		}
	}
}