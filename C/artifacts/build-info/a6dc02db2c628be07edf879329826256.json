{
	"id": "a6dc02db2c628be07edf879329826256",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"C/consolidation.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; \nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"; \nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/// @title Consolidation\n/// @notice This contract allows users to deposit tokens in fragmented amounts and later consolidate\n/// those deposits into a single balance. This process minimizes storage overhead and gas costs for future operations.\n/// The contract is dynamic (with an adjustable consolidation threshold), optimized, and secure.\ncontract Consolidation is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // The ERC20 token that will be consolidated.\n    IERC20 public immutable token;\n\n    // Mapping to store each user's fragmented deposit amounts.\n    mapping(address => uint256[]) private deposits;\n\n    // Consolidated balance for each user.\n    mapping(address => uint256) public consolidatedBalance;\n\n    // Threshold at which deposits are automatically consolidated.\n    uint256 public consolidationThreshold;\n\n    // --- Events ---\n    event Deposited(address indexed user, uint256 amount);\n    event Consolidated(address indexed user, uint256 consolidatedAmount, uint256 fragmentsConsolidated);\n    event Withdrawn(address indexed user, uint256 amount);\n    event ConsolidationThresholdUpdated(uint256 newThreshold);\n\n    /// @notice Constructor sets the token to consolidate and the initial consolidation threshold.\n    /// @param _token The address of the ERC20 token.\n    /// @param _consolidationThreshold The number of deposit fragments triggering auto-consolidation.\n    constructor(address _token, uint256 _consolidationThreshold) Ownable(msg.sender) {\n        require(_token != address(0), \"Invalid token address\");\n        token = IERC20(_token);\n        consolidationThreshold = _consolidationThreshold;\n    }\n\n    /// @notice Allows the owner to update the consolidation threshold.\n    /// @param newThreshold The new consolidation threshold.\n    function updateConsolidationThreshold(uint256 newThreshold) external onlyOwner {\n        consolidationThreshold = newThreshold;\n        emit ConsolidationThresholdUpdated(newThreshold);\n    }\n\n    /// @notice Deposit tokens into the contract as fragmented deposits.\n    /// @param amount The amount of tokens to deposit.\n    function deposit(uint256 amount) external nonReentrant {\n        require(amount > 0, \"Amount must be > 0\");\n        token.safeTransferFrom(msg.sender, address(this), amount);\n        deposits[msg.sender].push(amount);\n        emit Deposited(msg.sender, amount);\n        \n        // Auto-consolidate if the number of fragments meets or exceeds the threshold.\n        if (deposits[msg.sender].length >= consolidationThreshold) {\n            _consolidate(msg.sender);\n        }\n    }\n\n    /// @notice Manually consolidate your fragmented deposits into your consolidated balance.\n    function consolidate() external nonReentrant {\n        _consolidate(msg.sender);\n    }\n\n    /// @notice Internal function that sums all deposit fragments for a user, adds them to the consolidated balance,\n    /// and clears the fragmented deposits.\n    /// @param user The address of the user.\n    function _consolidate(address user) internal {\n        uint256[] storage userDeposits = deposits[user];\n        require(userDeposits.length > 0, \"No deposits to consolidate\");\n\n        uint256 sum = 0;\n        uint256 count = userDeposits.length;\n        for (uint256 i = 0; i < count; i++) {\n            sum += userDeposits[i];\n        }\n        consolidatedBalance[user] += sum;\n        delete deposits[user];\n        emit Consolidated(user, consolidatedBalance[user], count);\n    }\n\n    /// @notice Withdraw tokens from your consolidated balance.\n    /// @param amount The amount of tokens to withdraw.\n    function withdraw(uint256 amount) external nonReentrant {\n        require(amount > 0, \"Amount must be > 0\");\n        require(consolidatedBalance[msg.sender] >= amount, \"Insufficient consolidated balance\");\n        consolidatedBalance[msg.sender] -= amount;\n        token.safeTransfer(msg.sender, amount);\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    /// @notice Returns the number of fragmented deposit records for a user.\n    /// @param user The address of the user.\n    /// @return The count of deposit fragments.\n    function getDepositFragmentCount(address user) external view returns (uint256) {\n        return deposits[user].length;\n    }\n\n    /// @notice Returns the fragmented deposit amounts for a user.\n    /// @param user The address of the user.\n    /// @return An array containing the individual deposit fragment amounts.\n    function getDepositFragments(address user) external view returns (uint256[] memory) {\n        return deposits[user];\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cc4cd23662a6c46b3043a1164533b5e879b9f9a97f2743f79d9d3a8c466b60b364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cc4cd23662a6c46b3043a1164533b5e879b9f9a97f2743f79d9d3a8c466b60b364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0x4C 0xD2 CALLDATASIZE PUSH3 0xA6C46B ADDRESS NUMBER LOG1 AND GASLIMIT CALLER 0xB5 0xE8 PUSH26 0xB9F9A97F2743F79D9D3A8C466B60B364736F6C63430008140033 ",
							"sourceMap": "698:8692:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cc4cd23662a6c46b3043a1164533b5e879b9f9a97f2743f79d9d3a8c466b60b364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0x4C 0xD2 CALLDATASIZE PUSH3 0xA6C46B ADDRESS NUMBER LOG1 AND GASLIMIT CALLER 0xB5 0xE8 PUSH26 0xB9F9A97F2743F79D9D3A8C466B60B364736F6C63430008140033 ",
							"sourceMap": "698:8692:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc4cd23662a6c46b3043a1164533b5e879b9f9a97f2743f79d9d3a8c466b60b364736f6c63430008140033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"C/consolidation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"C/consolidation.sol": {
				"Consolidation": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_consolidationThreshold",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "consolidatedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fragmentsConsolidated",
									"type": "uint256"
								}
							],
							"name": "Consolidated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newThreshold",
									"type": "uint256"
								}
							],
							"name": "ConsolidationThresholdUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "consolidate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "consolidatedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "consolidationThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getDepositFragmentCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getDepositFragments",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newThreshold",
									"type": "uint256"
								}
							],
							"name": "updateConsolidationThreshold",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_consolidationThreshold": "The number of deposit fragments triggering auto-consolidation.",
									"_token": "The address of the ERC20 token."
								}
							},
							"deposit(uint256)": {
								"params": {
									"amount": "The amount of tokens to deposit."
								}
							},
							"getDepositFragmentCount(address)": {
								"params": {
									"user": "The address of the user."
								},
								"returns": {
									"_0": "The count of deposit fragments."
								}
							},
							"getDepositFragments(address)": {
								"params": {
									"user": "The address of the user."
								},
								"returns": {
									"_0": "An array containing the individual deposit fragment amounts."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateConsolidationThreshold(uint256)": {
								"params": {
									"newThreshold": "The new consolidation threshold."
								}
							},
							"withdraw(uint256)": {
								"params": {
									"amount": "The amount of tokens to withdraw."
								}
							}
						},
						"title": "Consolidation",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"C/consolidation.sol\":641:4880  contract Consolidation is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"C/consolidation.sol\":1713:1955  constructor(address _token, uint256 _consolidationThreshold) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"C/consolidation.sol\":1782:1792  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"C/consolidation.sol\":1830:1831  0 */\n  0x00\n    /* \"C/consolidation.sol\":1812:1832  _token != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"C/consolidation.sol\":1812:1818  _token */\n  dup3\n    /* \"C/consolidation.sol\":1812:1832  _token != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"C/consolidation.sol\":1804:1858  require(_token != address(0), \"Invalid token address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"C/consolidation.sol\":1883:1889  _token */\n  dup2\n    /* \"C/consolidation.sol\":1868:1890  token = IERC20(_token) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"C/consolidation.sol\":1925:1948  _consolidationThreshold */\n  dup1\n    /* \"C/consolidation.sol\":1900:1922  consolidationThreshold */\n  0x04\n    /* \"C/consolidation.sol\":1900:1948  consolidationThreshold = _consolidationThreshold */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"C/consolidation.sol\":1713:1955  constructor(address _token, uint256 _consolidationThreshold) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"C/consolidation.sol\":641:4880  contract Consolidation is Ownable, ReentrancyGuard {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_40\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_42\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_43:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_45\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_27:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_28:\n    /* \"#utility.yul\":1001:1025   */\n  tag_48\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_27\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_49:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_29:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_51\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_28\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_54\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1309:1428   */\ntag_53:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_55\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_26\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_56\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_29\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1718:1836   */\ntag_30:\n    /* \"#utility.yul\":1805:1829   */\n  tag_58\n    /* \"#utility.yul\":1823:1828   */\n  dup2\n    /* \"#utility.yul\":1805:1829   */\n  tag_24\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1800:1803   */\n  dup3\n    /* \"#utility.yul\":1793:1830   */\n  mstore\n    /* \"#utility.yul\":1718:1836   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1842:2064   */\ntag_10:\n    /* \"#utility.yul\":1935:1939   */\n  0x00\n    /* \"#utility.yul\":1973:1975   */\n  0x20\n    /* \"#utility.yul\":1962:1971   */\n  dup3\n    /* \"#utility.yul\":1958:1976   */\n  add\n    /* \"#utility.yul\":1950:1976   */\n  swap1\n  pop\n    /* \"#utility.yul\":1986:2057   */\n  tag_60\n    /* \"#utility.yul\":2054:2055   */\n  0x00\n    /* \"#utility.yul\":2043:2052   */\n  dup4\n    /* \"#utility.yul\":2039:2056   */\n  add\n    /* \"#utility.yul\":2030:2036   */\n  dup5\n    /* \"#utility.yul\":1986:2057   */\n  tag_30\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1842:2064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2070:2239   */\ntag_31:\n    /* \"#utility.yul\":2154:2165   */\n  0x00\n    /* \"#utility.yul\":2188:2194   */\n  dup3\n    /* \"#utility.yul\":2183:2186   */\n  dup3\n    /* \"#utility.yul\":2176:2195   */\n  mstore\n    /* \"#utility.yul\":2228:2232   */\n  0x20\n    /* \"#utility.yul\":2223:2226   */\n  dup3\n    /* \"#utility.yul\":2219:2233   */\n  add\n    /* \"#utility.yul\":2204:2233   */\n  swap1\n  pop\n    /* \"#utility.yul\":2070:2239   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2245:2416   */\ntag_32:\n    /* \"#utility.yul\":2385:2408   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":2381:2382   */\n  0x00\n    /* \"#utility.yul\":2373:2379   */\n  dup3\n    /* \"#utility.yul\":2369:2383   */\n  add\n    /* \"#utility.yul\":2362:2409   */\n  mstore\n    /* \"#utility.yul\":2245:2416   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2422:2788   */\ntag_33:\n    /* \"#utility.yul\":2564:2567   */\n  0x00\n    /* \"#utility.yul\":2585:2652   */\n  tag_64\n    /* \"#utility.yul\":2649:2651   */\n  0x15\n    /* \"#utility.yul\":2644:2647   */\n  dup4\n    /* \"#utility.yul\":2585:2652   */\n  tag_31\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2578:2652   */\n  swap2\n  pop\n    /* \"#utility.yul\":2661:2754   */\n  tag_65\n    /* \"#utility.yul\":2750:2753   */\n  dup3\n    /* \"#utility.yul\":2661:2754   */\n  tag_32\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2779:2781   */\n  0x20\n    /* \"#utility.yul\":2774:2777   */\n  dup3\n    /* \"#utility.yul\":2770:2782   */\n  add\n    /* \"#utility.yul\":2763:2782   */\n  swap1\n  pop\n    /* \"#utility.yul\":2422:2788   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2794:3213   */\ntag_17:\n    /* \"#utility.yul\":2960:2964   */\n  0x00\n    /* \"#utility.yul\":2998:3000   */\n  0x20\n    /* \"#utility.yul\":2987:2996   */\n  dup3\n    /* \"#utility.yul\":2983:3001   */\n  add\n    /* \"#utility.yul\":2975:3001   */\n  swap1\n  pop\n    /* \"#utility.yul\":3047:3056   */\n  dup2\n    /* \"#utility.yul\":3041:3045   */\n  dup2\n    /* \"#utility.yul\":3037:3057   */\n  sub\n    /* \"#utility.yul\":3033:3034   */\n  0x00\n    /* \"#utility.yul\":3022:3031   */\n  dup4\n    /* \"#utility.yul\":3018:3035   */\n  add\n    /* \"#utility.yul\":3011:3058   */\n  mstore\n    /* \"#utility.yul\":3075:3206   */\n  tag_67\n    /* \"#utility.yul\":3201:3205   */\n  dup2\n    /* \"#utility.yul\":3075:3206   */\n  tag_33\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":3067:3206   */\n  swap1\n  pop\n    /* \"#utility.yul\":2794:3213   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"C/consolidation.sol\":641:4880  contract Consolidation is Ownable, ReentrancyGuard {... */\ntag_18:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x5002dac29dd1f5eca27c266c7f22886fef1ca01133bd005217e0a31b1b246599\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"C/consolidation.sol\":641:4880  contract Consolidation is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaef373c3\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xaef373c3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb3dba8da\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xbfc64292\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x43ba6be5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6b018114\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x724f024b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"C/consolidation.sol\":3907:4261  function withdraw(uint256 amount) external nonReentrant {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"C/consolidation.sol\":2094:2285  function updateConsolidationThreshold(uint256 newThreshold) external onlyOwner {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      stop\n        /* \"C/consolidation.sol\":1105:1142  uint256 public consolidationThreshold */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      stop\n        /* \"C/consolidation.sol\":2999:3085  function consolidate() external nonReentrant {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/consolidation.sol\":977:1031  mapping(address => uint256) public consolidatedBalance */\n    tag_9:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/consolidation.sol\":4756:4878  function getDepositFragments(address user) external view returns (uint256[] memory) {... */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/consolidation.sol\":2419:2899  function deposit(uint256 amount) external nonReentrant {... */\n    tag_11:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"C/consolidation.sol\":4437:4561  function getDepositFragmentCount(address user) external view returns (uint256) {... */\n    tag_12:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"C/consolidation.sol\":781:810  IERC20 public immutable token */\n    tag_14:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/consolidation.sol\":3907:4261  function withdraw(uint256 amount) external nonReentrant {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_60\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_61\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_60:\n        /* \"C/consolidation.sol\":3990:3991  0 */\n      0x00\n        /* \"C/consolidation.sol\":3981:3987  amount */\n      dup2\n        /* \"C/consolidation.sol\":3981:3991  amount > 0 */\n      gt\n        /* \"C/consolidation.sol\":3973:4014  require(amount > 0, \"Amount must be > 0\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"C/consolidation.sol\":4067:4073  amount */\n      dup1\n        /* \"C/consolidation.sol\":4032:4051  consolidatedBalance */\n      0x03\n        /* \"C/consolidation.sol\":4032:4063  consolidatedBalance[msg.sender] */\n      0x00\n        /* \"C/consolidation.sol\":4052:4062  msg.sender */\n      caller\n        /* \"C/consolidation.sol\":4032:4063  consolidatedBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/consolidation.sol\":4032:4073  consolidatedBalance[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"C/consolidation.sol\":4024:4111  require(consolidatedBalance[msg.sender] >= amount, \"Insufficient consolidated balance\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"C/consolidation.sol\":4156:4162  amount */\n      dup1\n        /* \"C/consolidation.sol\":4121:4140  consolidatedBalance */\n      0x03\n        /* \"C/consolidation.sol\":4121:4152  consolidatedBalance[msg.sender] */\n      0x00\n        /* \"C/consolidation.sol\":4141:4151  msg.sender */\n      caller\n        /* \"C/consolidation.sol\":4121:4152  consolidatedBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/consolidation.sol\":4121:4162  consolidatedBalance[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/consolidation.sol\":4172:4210  token.safeTransfer(msg.sender, amount) */\n      tag_71\n        /* \"C/consolidation.sol\":4191:4201  msg.sender */\n      caller\n        /* \"C/consolidation.sol\":4203:4209  amount */\n      dup3\n        /* \"C/consolidation.sol\":4172:4177  token */\n      immutable(\"0x5002dac29dd1f5eca27c266c7f22886fef1ca01133bd005217e0a31b1b246599\")\n        /* \"C/consolidation.sol\":4172:4190  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_72\n      swap1\n        /* \"C/consolidation.sol\":4172:4210  token.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"C/consolidation.sol\":4235:4245  msg.sender */\n      caller\n        /* \"C/consolidation.sol\":4225:4254  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"C/consolidation.sol\":4247:4253  amount */\n      dup3\n        /* \"C/consolidation.sol\":4225:4254  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_74\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_75\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_74:\n        /* \"C/consolidation.sol\":3907:4261  function withdraw(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"C/consolidation.sol\":2094:2285  function updateConsolidationThreshold(uint256 newThreshold) external onlyOwner {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_77:\n        /* \"C/consolidation.sol\":2208:2220  newThreshold */\n      dup1\n        /* \"C/consolidation.sol\":2183:2205  consolidationThreshold */\n      0x04\n        /* \"C/consolidation.sol\":2183:2220  consolidationThreshold = newThreshold */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/consolidation.sol\":2235:2278  ConsolidationThresholdUpdated(newThreshold) */\n      0xb6c39172f87fd26c15439100462296233a2021d7140ab8e2e3feec9976bec723\n        /* \"C/consolidation.sol\":2265:2277  newThreshold */\n      dup2\n        /* \"C/consolidation.sol\":2235:2278  ConsolidationThresholdUpdated(newThreshold) */\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"C/consolidation.sol\":2094:2285  function updateConsolidationThreshold(uint256 newThreshold) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"C/consolidation.sol\":1105:1142  uint256 public consolidationThreshold */\n    tag_24:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"C/consolidation.sol\":2999:3085  function consolidate() external nonReentrant {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_87\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_61\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_87:\n        /* \"C/consolidation.sol\":3054:3078  _consolidate(msg.sender) */\n      tag_89\n        /* \"C/consolidation.sol\":3067:3077  msg.sender */\n      caller\n        /* \"C/consolidation.sol\":3054:3066  _consolidate */\n      tag_90\n        /* \"C/consolidation.sol\":3054:3078  _consolidate(msg.sender) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_91\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_75\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_91:\n        /* \"C/consolidation.sol\":2999:3085  function consolidate() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"C/consolidation.sol\":977:1031  mapping(address => uint256) public consolidatedBalance */\n    tag_38:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"C/consolidation.sol\":4756:4878  function getDepositFragments(address user) external view returns (uint256[] memory) {... */\n    tag_42:\n        /* \"C/consolidation.sol\":4822:4838  uint256[] memory */\n      0x60\n        /* \"C/consolidation.sol\":4857:4865  deposits */\n      0x02\n        /* \"C/consolidation.sol\":4857:4871  deposits[user] */\n      0x00\n        /* \"C/consolidation.sol\":4866:4870  user */\n      dup4\n        /* \"C/consolidation.sol\":4857:4871  deposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/consolidation.sol\":4850:4871  return deposits[user] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"C/consolidation.sol\":4756:4878  function getDepositFragments(address user) external view returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"C/consolidation.sol\":2419:2899  function deposit(uint256 amount) external nonReentrant {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_97\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_61\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_97:\n        /* \"C/consolidation.sol\":2501:2502  0 */\n      0x00\n        /* \"C/consolidation.sol\":2492:2498  amount */\n      dup2\n        /* \"C/consolidation.sol\":2492:2502  amount > 0 */\n      gt\n        /* \"C/consolidation.sol\":2484:2525  require(amount > 0, \"Amount must be > 0\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_65\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"C/consolidation.sol\":2535:2592  token.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_101\n        /* \"C/consolidation.sol\":2558:2568  msg.sender */\n      caller\n        /* \"C/consolidation.sol\":2578:2582  this */\n      address\n        /* \"C/consolidation.sol\":2585:2591  amount */\n      dup4\n        /* \"C/consolidation.sol\":2535:2540  token */\n      immutable(\"0x5002dac29dd1f5eca27c266c7f22886fef1ca01133bd005217e0a31b1b246599\")\n        /* \"C/consolidation.sol\":2535:2557  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_102\n      swap1\n        /* \"C/consolidation.sol\":2535:2592  token.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"C/consolidation.sol\":2602:2610  deposits */\n      0x02\n        /* \"C/consolidation.sol\":2602:2622  deposits[msg.sender] */\n      0x00\n        /* \"C/consolidation.sol\":2611:2621  msg.sender */\n      caller\n        /* \"C/consolidation.sol\":2602:2622  deposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/consolidation.sol\":2628:2634  amount */\n      dup2\n        /* \"C/consolidation.sol\":2602:2635  deposits[msg.sender].push(amount) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"C/consolidation.sol\":2660:2670  msg.sender */\n      caller\n        /* \"C/consolidation.sol\":2650:2679  Deposited(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4\n        /* \"C/consolidation.sol\":2672:2678  amount */\n      dup3\n        /* \"C/consolidation.sol\":2650:2679  Deposited(msg.sender, amount) */\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/consolidation.sol\":2820:2842  consolidationThreshold */\n      sload(0x04)\n        /* \"C/consolidation.sol\":2789:2797  deposits */\n      0x02\n        /* \"C/consolidation.sol\":2789:2809  deposits[msg.sender] */\n      0x00\n        /* \"C/consolidation.sol\":2798:2808  msg.sender */\n      caller\n        /* \"C/consolidation.sol\":2789:2809  deposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/consolidation.sol\":2789:2816  deposits[msg.sender].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"C/consolidation.sol\":2789:2842  deposits[msg.sender].length >= consolidationThreshold */\n      lt\n        /* \"C/consolidation.sol\":2785:2893  if (deposits[msg.sender].length >= consolidationThreshold) {... */\n      tag_105\n      jumpi\n        /* \"C/consolidation.sol\":2858:2882  _consolidate(msg.sender) */\n      tag_106\n        /* \"C/consolidation.sol\":2871:2881  msg.sender */\n      caller\n        /* \"C/consolidation.sol\":2858:2870  _consolidate */\n      tag_90\n        /* \"C/consolidation.sol\":2858:2882  _consolidate(msg.sender) */\n      jump\t// in\n    tag_106:\n        /* \"C/consolidation.sol\":2785:2893  if (deposits[msg.sender].length >= consolidationThreshold) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_107\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_75\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_107:\n        /* \"C/consolidation.sol\":2419:2899  function deposit(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"C/consolidation.sol\":4437:4561  function getDepositFragmentCount(address user) external view returns (uint256) {... */\n    tag_50:\n        /* \"C/consolidation.sol\":4507:4514  uint256 */\n      0x00\n        /* \"C/consolidation.sol\":4533:4541  deposits */\n      0x02\n        /* \"C/consolidation.sol\":4533:4547  deposits[user] */\n      0x00\n        /* \"C/consolidation.sol\":4542:4546  user */\n      dup4\n        /* \"C/consolidation.sol\":4533:4547  deposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/consolidation.sol\":4533:4554  deposits[user].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"C/consolidation.sol\":4526:4554  return deposits[user].length */\n      swap1\n      pop\n        /* \"C/consolidation.sol\":4437:4561  function getDepositFragmentCount(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"C/consolidation.sol\":781:810  IERC20 public immutable token */\n    tag_56:\n      immutable(\"0x5002dac29dd1f5eca27c266c7f22886fef1ca01133bd005217e0a31b1b246599\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_121\n      swap3\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_32\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"C/consolidation.sol\":3297:3781  function _consolidate(address user) internal {... */\n    tag_90:\n        /* \"C/consolidation.sol\":3352:3382  uint256[] storage userDeposits */\n      0x00\n        /* \"C/consolidation.sol\":3385:3393  deposits */\n      0x02\n        /* \"C/consolidation.sol\":3385:3399  deposits[user] */\n      0x00\n        /* \"C/consolidation.sol\":3394:3398  user */\n      dup4\n        /* \"C/consolidation.sol\":3385:3399  deposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/consolidation.sol\":3352:3399  uint256[] storage userDeposits = deposits[user] */\n      swap1\n      pop\n        /* \"C/consolidation.sol\":3439:3440  0 */\n      0x00\n        /* \"C/consolidation.sol\":3417:3429  userDeposits */\n      dup2\n        /* \"C/consolidation.sol\":3417:3436  userDeposits.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"C/consolidation.sol\":3417:3440  userDeposits.length > 0 */\n      gt\n        /* \"C/consolidation.sol\":3409:3471  require(userDeposits.length > 0, \"No deposits to consolidate\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"C/consolidation.sol\":3482:3493  uint256 sum */\n      0x00\n        /* \"C/consolidation.sol\":3507:3520  uint256 count */\n      dup1\n        /* \"C/consolidation.sol\":3523:3535  userDeposits */\n      dup3\n        /* \"C/consolidation.sol\":3523:3542  userDeposits.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"C/consolidation.sol\":3507:3542  uint256 count = userDeposits.length */\n      swap1\n      pop\n        /* \"C/consolidation.sol\":3557:3566  uint256 i */\n      0x00\n        /* \"C/consolidation.sol\":3552:3635  for (uint256 i = 0; i < count; i++) {... */\n    tag_137:\n        /* \"C/consolidation.sol\":3576:3581  count */\n      dup2\n        /* \"C/consolidation.sol\":3572:3573  i */\n      dup2\n        /* \"C/consolidation.sol\":3572:3581  i < count */\n      lt\n        /* \"C/consolidation.sol\":3552:3635  for (uint256 i = 0; i < count; i++) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"C/consolidation.sol\":3609:3621  userDeposits */\n      dup4\n        /* \"C/consolidation.sol\":3622:3623  i */\n      dup2\n        /* \"C/consolidation.sol\":3609:3624  userDeposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_140\n      jumpi\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n    tag_140:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"C/consolidation.sol\":3602:3624  sum += userDeposits[i] */\n      dup4\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      swap3\n      pop\n        /* \"C/consolidation.sol\":3583:3586  i++ */\n      dup1\n      dup1\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      swap2\n      pop\n      pop\n        /* \"C/consolidation.sol\":3552:3635  for (uint256 i = 0; i < count; i++) {... */\n      jump(tag_137)\n    tag_138:\n      pop\n        /* \"C/consolidation.sol\":3673:3676  sum */\n      dup2\n        /* \"C/consolidation.sol\":3644:3663  consolidatedBalance */\n      0x03\n        /* \"C/consolidation.sol\":3644:3669  consolidatedBalance[user] */\n      0x00\n        /* \"C/consolidation.sol\":3664:3668  user */\n      dup7\n        /* \"C/consolidation.sol\":3644:3669  consolidatedBalance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/consolidation.sol\":3644:3676  consolidatedBalance[user] += sum */\n      dup3\n      dup3\n      sload\n      tag_148\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_148:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/consolidation.sol\":3693:3701  deposits */\n      0x02\n        /* \"C/consolidation.sol\":3693:3707  deposits[user] */\n      0x00\n        /* \"C/consolidation.sol\":3702:3706  user */\n      dup6\n        /* \"C/consolidation.sol\":3693:3707  deposits[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/consolidation.sol\":3686:3707  delete deposits[user] */\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"C/consolidation.sol\":3735:3739  user */\n      dup4\n        /* \"C/consolidation.sol\":3722:3774  Consolidated(user, consolidatedBalance[user], count) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcc5cf0dc864a84ad6423dd5608abd129b84caa27094cc7e97113e5eb0b368040\n        /* \"C/consolidation.sol\":3741:3760  consolidatedBalance */\n      0x03\n        /* \"C/consolidation.sol\":3741:3766  consolidatedBalance[user] */\n      0x00\n        /* \"C/consolidation.sol\":3761:3765  user */\n      dup8\n        /* \"C/consolidation.sol\":3741:3766  consolidatedBalance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/consolidation.sol\":3768:3773  count */\n      dup4\n        /* \"C/consolidation.sol\":3722:3774  Consolidated(user, consolidatedBalance[user], count) */\n      mload(0x40)\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/consolidation.sol\":3342:3781  {... */\n      pop\n      pop\n      pop\n        /* \"C/consolidation.sol\":3297:3781  function _consolidate(address user) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_155\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_160)\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    tag_150:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      pop\n      jump\t// out\n    tag_166:\n    tag_167:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_167)\n    tag_168:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_170:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_172:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_173:\n        /* \"#utility.yul\":490:514   */\n      tag_209\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_172\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_210:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_174:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_212\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_173\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_18:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_215\n      tag_170\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":766:885   */\n    tag_214:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_216\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_174\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_175:\n        /* \"#utility.yul\":1112:1136   */\n      tag_218\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_172\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_26:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_220\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_175\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_176:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_177:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_223\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_176\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_178:\n        /* \"#utility.yul\":1698:1722   */\n      tag_225\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_177\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_34:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_227\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_178\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2085   */\n    tag_179:\n        /* \"#utility.yul\":2036:2060   */\n      tag_229\n        /* \"#utility.yul\":2054:2059   */\n      dup2\n        /* \"#utility.yul\":2036:2060   */\n      tag_177\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2029:2034   */\n      dup2\n        /* \"#utility.yul\":2026:2061   */\n      eq\n        /* \"#utility.yul\":2016:2079   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":2075:2076   */\n      0x00\n        /* \"#utility.yul\":2072:2073   */\n      dup1\n        /* \"#utility.yul\":2065:2077   */\n      revert\n        /* \"#utility.yul\":2016:2079   */\n    tag_230:\n        /* \"#utility.yul\":1963:2085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2230   */\n    tag_180:\n        /* \"#utility.yul\":2137:2142   */\n      0x00\n        /* \"#utility.yul\":2175:2181   */\n      dup2\n        /* \"#utility.yul\":2162:2182   */\n      calldataload\n        /* \"#utility.yul\":2153:2182   */\n      swap1\n      pop\n        /* \"#utility.yul\":2191:2224   */\n      tag_232\n        /* \"#utility.yul\":2218:2223   */\n      dup2\n        /* \"#utility.yul\":2191:2224   */\n      tag_179\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2091:2230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2565   */\n    tag_37:\n        /* \"#utility.yul\":2295:2301   */\n      0x00\n        /* \"#utility.yul\":2344:2346   */\n      0x20\n        /* \"#utility.yul\":2332:2341   */\n      dup3\n        /* \"#utility.yul\":2323:2330   */\n      dup5\n        /* \"#utility.yul\":2319:2342   */\n      sub\n        /* \"#utility.yul\":2315:2347   */\n      slt\n        /* \"#utility.yul\":2312:2431   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":2350:2429   */\n      tag_235\n      tag_170\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2312:2431   */\n    tag_234:\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2495:2548   */\n      tag_236\n        /* \"#utility.yul\":2540:2547   */\n      dup5\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2520:2529   */\n      dup6\n        /* \"#utility.yul\":2516:2538   */\n      add\n        /* \"#utility.yul\":2495:2548   */\n      tag_180\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2485:2548   */\n      swap2\n      pop\n        /* \"#utility.yul\":2441:2558   */\n      pop\n        /* \"#utility.yul\":2236:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2685   */\n    tag_181:\n        /* \"#utility.yul\":2638:2644   */\n      0x00\n        /* \"#utility.yul\":2672:2677   */\n      dup2\n        /* \"#utility.yul\":2666:2678   */\n      mload\n        /* \"#utility.yul\":2656:2678   */\n      swap1\n      pop\n        /* \"#utility.yul\":2571:2685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2691:2875   */\n    tag_182:\n        /* \"#utility.yul\":2790:2801   */\n      0x00\n        /* \"#utility.yul\":2824:2830   */\n      dup3\n        /* \"#utility.yul\":2819:2822   */\n      dup3\n        /* \"#utility.yul\":2812:2831   */\n      mstore\n        /* \"#utility.yul\":2864:2868   */\n      0x20\n        /* \"#utility.yul\":2859:2862   */\n      dup3\n        /* \"#utility.yul\":2855:2869   */\n      add\n        /* \"#utility.yul\":2840:2869   */\n      swap1\n      pop\n        /* \"#utility.yul\":2691:2875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2881:3013   */\n    tag_183:\n        /* \"#utility.yul\":2948:2952   */\n      0x00\n        /* \"#utility.yul\":2971:2974   */\n      dup2\n        /* \"#utility.yul\":2963:2974   */\n      swap1\n      pop\n        /* \"#utility.yul\":3001:3005   */\n      0x20\n        /* \"#utility.yul\":2996:2999   */\n      dup3\n        /* \"#utility.yul\":2992:3006   */\n      add\n        /* \"#utility.yul\":2984:3006   */\n      swap1\n      pop\n        /* \"#utility.yul\":2881:3013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3127   */\n    tag_184:\n        /* \"#utility.yul\":3096:3120   */\n      tag_241\n        /* \"#utility.yul\":3114:3119   */\n      dup2\n        /* \"#utility.yul\":3096:3120   */\n      tag_172\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3091:3094   */\n      dup3\n        /* \"#utility.yul\":3084:3121   */\n      mstore\n        /* \"#utility.yul\":3019:3127   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3133:3312   */\n    tag_185:\n        /* \"#utility.yul\":3202:3212   */\n      0x00\n        /* \"#utility.yul\":3223:3269   */\n      tag_243\n        /* \"#utility.yul\":3265:3268   */\n      dup4\n        /* \"#utility.yul\":3257:3263   */\n      dup4\n        /* \"#utility.yul\":3223:3269   */\n      tag_184\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3301:3305   */\n      0x20\n        /* \"#utility.yul\":3296:3299   */\n      dup4\n        /* \"#utility.yul\":3292:3306   */\n      add\n        /* \"#utility.yul\":3278:3306   */\n      swap1\n      pop\n        /* \"#utility.yul\":3133:3312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3318:3431   */\n    tag_186:\n        /* \"#utility.yul\":3388:3392   */\n      0x00\n        /* \"#utility.yul\":3420:3424   */\n      0x20\n        /* \"#utility.yul\":3415:3418   */\n      dup3\n        /* \"#utility.yul\":3411:3425   */\n      add\n        /* \"#utility.yul\":3403:3425   */\n      swap1\n      pop\n        /* \"#utility.yul\":3318:3431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3467:4199   */\n    tag_187:\n        /* \"#utility.yul\":3586:3589   */\n      0x00\n        /* \"#utility.yul\":3615:3669   */\n      tag_246\n        /* \"#utility.yul\":3663:3668   */\n      dup3\n        /* \"#utility.yul\":3615:3669   */\n      tag_181\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3685:3771   */\n      tag_247\n        /* \"#utility.yul\":3764:3770   */\n      dup2\n        /* \"#utility.yul\":3759:3762   */\n      dup6\n        /* \"#utility.yul\":3685:3771   */\n      tag_182\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3678:3771   */\n      swap4\n      pop\n        /* \"#utility.yul\":3795:3851   */\n      tag_248\n        /* \"#utility.yul\":3845:3850   */\n      dup4\n        /* \"#utility.yul\":3795:3851   */\n      tag_183\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3874:3881   */\n      dup1\n        /* \"#utility.yul\":3905:3906   */\n      0x00\n        /* \"#utility.yul\":3890:4174   */\n    tag_249:\n        /* \"#utility.yul\":3915:3921   */\n      dup4\n        /* \"#utility.yul\":3912:3913   */\n      dup2\n        /* \"#utility.yul\":3909:3922   */\n      lt\n        /* \"#utility.yul\":3890:4174   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":3991:3997   */\n      dup2\n        /* \"#utility.yul\":3985:3998   */\n      mload\n        /* \"#utility.yul\":4018:4081   */\n      tag_252\n        /* \"#utility.yul\":4077:4080   */\n      dup9\n        /* \"#utility.yul\":4062:4075   */\n      dup3\n        /* \"#utility.yul\":4018:4081   */\n      tag_185\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4011:4081   */\n      swap8\n      pop\n        /* \"#utility.yul\":4104:4164   */\n      tag_253\n        /* \"#utility.yul\":4157:4163   */\n      dup4\n        /* \"#utility.yul\":4104:4164   */\n      tag_186\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4094:4164   */\n      swap3\n      pop\n        /* \"#utility.yul\":3950:4174   */\n      pop\n        /* \"#utility.yul\":3937:3938   */\n      0x01\n        /* \"#utility.yul\":3934:3935   */\n      dup2\n        /* \"#utility.yul\":3930:3939   */\n      add\n        /* \"#utility.yul\":3925:3939   */\n      swap1\n      pop\n        /* \"#utility.yul\":3890:4174   */\n      jump(tag_249)\n    tag_251:\n        /* \"#utility.yul\":3894:3908   */\n      pop\n        /* \"#utility.yul\":4190:4193   */\n      dup6\n        /* \"#utility.yul\":4183:4193   */\n      swap4\n      pop\n        /* \"#utility.yul\":3591:4199   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3467:4199   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4205:4578   */\n    tag_44:\n        /* \"#utility.yul\":4348:4352   */\n      0x00\n        /* \"#utility.yul\":4386:4388   */\n      0x20\n        /* \"#utility.yul\":4375:4384   */\n      dup3\n        /* \"#utility.yul\":4371:4389   */\n      add\n        /* \"#utility.yul\":4363:4389   */\n      swap1\n      pop\n        /* \"#utility.yul\":4435:4444   */\n      dup2\n        /* \"#utility.yul\":4429:4433   */\n      dup2\n        /* \"#utility.yul\":4425:4445   */\n      sub\n        /* \"#utility.yul\":4421:4422   */\n      0x00\n        /* \"#utility.yul\":4410:4419   */\n      dup4\n        /* \"#utility.yul\":4406:4423   */\n      add\n        /* \"#utility.yul\":4399:4446   */\n      mstore\n        /* \"#utility.yul\":4463:4571   */\n      tag_255\n        /* \"#utility.yul\":4566:4570   */\n      dup2\n        /* \"#utility.yul\":4557:4563   */\n      dup5\n        /* \"#utility.yul\":4463:4571   */\n      tag_187\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":4455:4571   */\n      swap1\n      pop\n        /* \"#utility.yul\":4205:4578   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4584:4644   */\n    tag_188:\n        /* \"#utility.yul\":4612:4615   */\n      0x00\n        /* \"#utility.yul\":4633:4638   */\n      dup2\n        /* \"#utility.yul\":4626:4638   */\n      swap1\n      pop\n        /* \"#utility.yul\":4584:4644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4650:4792   */\n    tag_189:\n        /* \"#utility.yul\":4700:4709   */\n      0x00\n        /* \"#utility.yul\":4733:4786   */\n      tag_258\n        /* \"#utility.yul\":4751:4785   */\n      tag_259\n        /* \"#utility.yul\":4760:4784   */\n      tag_260\n        /* \"#utility.yul\":4778:4783   */\n      dup5\n        /* \"#utility.yul\":4760:4784   */\n      tag_176\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4751:4785   */\n      tag_188\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4733:4786   */\n      tag_176\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4720:4786   */\n      swap1\n      pop\n        /* \"#utility.yul\":4650:4792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4798:4924   */\n    tag_190:\n        /* \"#utility.yul\":4848:4857   */\n      0x00\n        /* \"#utility.yul\":4881:4918   */\n      tag_262\n        /* \"#utility.yul\":4912:4917   */\n      dup3\n        /* \"#utility.yul\":4881:4918   */\n      tag_189\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":4868:4918   */\n      swap1\n      pop\n        /* \"#utility.yul\":4798:4924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4930:5070   */\n    tag_191:\n        /* \"#utility.yul\":4994:5003   */\n      0x00\n        /* \"#utility.yul\":5027:5064   */\n      tag_264\n        /* \"#utility.yul\":5058:5063   */\n      dup3\n        /* \"#utility.yul\":5027:5064   */\n      tag_190\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5014:5064   */\n      swap1\n      pop\n        /* \"#utility.yul\":4930:5070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5076:5235   */\n    tag_192:\n        /* \"#utility.yul\":5177:5228   */\n      tag_266\n        /* \"#utility.yul\":5222:5227   */\n      dup2\n        /* \"#utility.yul\":5177:5228   */\n      tag_191\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5172:5175   */\n      dup3\n        /* \"#utility.yul\":5165:5229   */\n      mstore\n        /* \"#utility.yul\":5076:5235   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5241:5491   */\n    tag_58:\n        /* \"#utility.yul\":5348:5352   */\n      0x00\n        /* \"#utility.yul\":5386:5388   */\n      0x20\n        /* \"#utility.yul\":5375:5384   */\n      dup3\n        /* \"#utility.yul\":5371:5389   */\n      add\n        /* \"#utility.yul\":5363:5389   */\n      swap1\n      pop\n        /* \"#utility.yul\":5399:5484   */\n      tag_268\n        /* \"#utility.yul\":5481:5482   */\n      0x00\n        /* \"#utility.yul\":5470:5479   */\n      dup4\n        /* \"#utility.yul\":5466:5483   */\n      add\n        /* \"#utility.yul\":5457:5463   */\n      dup5\n        /* \"#utility.yul\":5399:5484   */\n      tag_192\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":5241:5491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5497:5666   */\n    tag_193:\n        /* \"#utility.yul\":5581:5592   */\n      0x00\n        /* \"#utility.yul\":5615:5621   */\n      dup3\n        /* \"#utility.yul\":5610:5613   */\n      dup3\n        /* \"#utility.yul\":5603:5622   */\n      mstore\n        /* \"#utility.yul\":5655:5659   */\n      0x20\n        /* \"#utility.yul\":5650:5653   */\n      dup3\n        /* \"#utility.yul\":5646:5660   */\n      add\n        /* \"#utility.yul\":5631:5660   */\n      swap1\n      pop\n        /* \"#utility.yul\":5497:5666   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5672:5840   */\n    tag_194:\n        /* \"#utility.yul\":5812:5832   */\n      0x416d6f756e74206d757374206265203e20300000000000000000000000000000\n        /* \"#utility.yul\":5808:5809   */\n      0x00\n        /* \"#utility.yul\":5800:5806   */\n      dup3\n        /* \"#utility.yul\":5796:5810   */\n      add\n        /* \"#utility.yul\":5789:5833   */\n      mstore\n        /* \"#utility.yul\":5672:5840   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5846:6212   */\n    tag_195:\n        /* \"#utility.yul\":5988:5991   */\n      0x00\n        /* \"#utility.yul\":6009:6076   */\n      tag_272\n        /* \"#utility.yul\":6073:6075   */\n      0x12\n        /* \"#utility.yul\":6068:6071   */\n      dup4\n        /* \"#utility.yul\":6009:6076   */\n      tag_193\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":6002:6076   */\n      swap2\n      pop\n        /* \"#utility.yul\":6085:6178   */\n      tag_273\n        /* \"#utility.yul\":6174:6177   */\n      dup3\n        /* \"#utility.yul\":6085:6178   */\n      tag_194\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":6203:6205   */\n      0x20\n        /* \"#utility.yul\":6198:6201   */\n      dup3\n        /* \"#utility.yul\":6194:6206   */\n      add\n        /* \"#utility.yul\":6187:6206   */\n      swap1\n      pop\n        /* \"#utility.yul\":5846:6212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6218:6637   */\n    tag_65:\n        /* \"#utility.yul\":6384:6388   */\n      0x00\n        /* \"#utility.yul\":6422:6424   */\n      0x20\n        /* \"#utility.yul\":6411:6420   */\n      dup3\n        /* \"#utility.yul\":6407:6425   */\n      add\n        /* \"#utility.yul\":6399:6425   */\n      swap1\n      pop\n        /* \"#utility.yul\":6471:6480   */\n      dup2\n        /* \"#utility.yul\":6465:6469   */\n      dup2\n        /* \"#utility.yul\":6461:6481   */\n      sub\n        /* \"#utility.yul\":6457:6458   */\n      0x00\n        /* \"#utility.yul\":6446:6455   */\n      dup4\n        /* \"#utility.yul\":6442:6459   */\n      add\n        /* \"#utility.yul\":6435:6482   */\n      mstore\n        /* \"#utility.yul\":6499:6630   */\n      tag_275\n        /* \"#utility.yul\":6625:6629   */\n      dup2\n        /* \"#utility.yul\":6499:6630   */\n      tag_195\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":6491:6630   */\n      swap1\n      pop\n        /* \"#utility.yul\":6218:6637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6643:6863   */\n    tag_196:\n        /* \"#utility.yul\":6783:6817   */\n      0x496e73756666696369656e7420636f6e736f6c6964617465642062616c616e63\n        /* \"#utility.yul\":6779:6780   */\n      0x00\n        /* \"#utility.yul\":6771:6777   */\n      dup3\n        /* \"#utility.yul\":6767:6781   */\n      add\n        /* \"#utility.yul\":6760:6818   */\n      mstore\n        /* \"#utility.yul\":6852:6855   */\n      0x6500000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6847:6849   */\n      0x20\n        /* \"#utility.yul\":6839:6845   */\n      dup3\n        /* \"#utility.yul\":6835:6850   */\n      add\n        /* \"#utility.yul\":6828:6856   */\n      mstore\n        /* \"#utility.yul\":6643:6863   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6869:7235   */\n    tag_197:\n        /* \"#utility.yul\":7011:7014   */\n      0x00\n        /* \"#utility.yul\":7032:7099   */\n      tag_278\n        /* \"#utility.yul\":7096:7098   */\n      0x21\n        /* \"#utility.yul\":7091:7094   */\n      dup4\n        /* \"#utility.yul\":7032:7099   */\n      tag_193\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":7025:7099   */\n      swap2\n      pop\n        /* \"#utility.yul\":7108:7201   */\n      tag_279\n        /* \"#utility.yul\":7197:7200   */\n      dup3\n        /* \"#utility.yul\":7108:7201   */\n      tag_196\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7226:7228   */\n      0x40\n        /* \"#utility.yul\":7221:7224   */\n      dup3\n        /* \"#utility.yul\":7217:7229   */\n      add\n        /* \"#utility.yul\":7210:7229   */\n      swap1\n      pop\n        /* \"#utility.yul\":6869:7235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7241:7660   */\n    tag_68:\n        /* \"#utility.yul\":7407:7411   */\n      0x00\n        /* \"#utility.yul\":7445:7447   */\n      0x20\n        /* \"#utility.yul\":7434:7443   */\n      dup3\n        /* \"#utility.yul\":7430:7448   */\n      add\n        /* \"#utility.yul\":7422:7448   */\n      swap1\n      pop\n        /* \"#utility.yul\":7494:7503   */\n      dup2\n        /* \"#utility.yul\":7488:7492   */\n      dup2\n        /* \"#utility.yul\":7484:7504   */\n      sub\n        /* \"#utility.yul\":7480:7481   */\n      0x00\n        /* \"#utility.yul\":7469:7478   */\n      dup4\n        /* \"#utility.yul\":7465:7482   */\n      add\n        /* \"#utility.yul\":7458:7505   */\n      mstore\n        /* \"#utility.yul\":7522:7653   */\n      tag_281\n        /* \"#utility.yul\":7648:7652   */\n      dup2\n        /* \"#utility.yul\":7522:7653   */\n      tag_197\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":7514:7653   */\n      swap1\n      pop\n        /* \"#utility.yul\":7241:7660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7666:7846   */\n    tag_198:\n        /* \"#utility.yul\":7714:7791   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7711:7712   */\n      0x00\n        /* \"#utility.yul\":7704:7792   */\n      mstore\n        /* \"#utility.yul\":7811:7815   */\n      0x11\n        /* \"#utility.yul\":7808:7809   */\n      0x04\n        /* \"#utility.yul\":7801:7816   */\n      mstore\n        /* \"#utility.yul\":7835:7839   */\n      0x24\n        /* \"#utility.yul\":7832:7833   */\n      0x00\n        /* \"#utility.yul\":7825:7840   */\n      revert\n        /* \"#utility.yul\":7852:8046   */\n    tag_70:\n        /* \"#utility.yul\":7892:7896   */\n      0x00\n        /* \"#utility.yul\":7912:7932   */\n      tag_284\n        /* \"#utility.yul\":7930:7931   */\n      dup3\n        /* \"#utility.yul\":7912:7932   */\n      tag_172\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7907:7932   */\n      swap2\n      pop\n        /* \"#utility.yul\":7946:7966   */\n      tag_285\n        /* \"#utility.yul\":7964:7965   */\n      dup4\n        /* \"#utility.yul\":7946:7966   */\n      tag_172\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":7941:7966   */\n      swap3\n      pop\n        /* \"#utility.yul\":7990:7991   */\n      dup3\n        /* \"#utility.yul\":7987:7988   */\n      dup3\n        /* \"#utility.yul\":7983:7992   */\n      sub\n        /* \"#utility.yul\":7975:7992   */\n      swap1\n      pop\n        /* \"#utility.yul\":8014:8015   */\n      dup2\n        /* \"#utility.yul\":8008:8012   */\n      dup2\n        /* \"#utility.yul\":8005:8016   */\n      gt\n        /* \"#utility.yul\":8002:8039   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":8019:8037   */\n      tag_287\n      tag_198\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":8002:8039   */\n    tag_286:\n        /* \"#utility.yul\":7852:8046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8052:8233   */\n    tag_199:\n        /* \"#utility.yul\":8192:8225   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":8188:8189   */\n      0x00\n        /* \"#utility.yul\":8180:8186   */\n      dup3\n        /* \"#utility.yul\":8176:8190   */\n      add\n        /* \"#utility.yul\":8169:8226   */\n      mstore\n        /* \"#utility.yul\":8052:8233   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8239:8605   */\n    tag_200:\n        /* \"#utility.yul\":8381:8384   */\n      0x00\n        /* \"#utility.yul\":8402:8469   */\n      tag_290\n        /* \"#utility.yul\":8466:8468   */\n      0x1f\n        /* \"#utility.yul\":8461:8464   */\n      dup4\n        /* \"#utility.yul\":8402:8469   */\n      tag_193\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8395:8469   */\n      swap2\n      pop\n        /* \"#utility.yul\":8478:8571   */\n      tag_291\n        /* \"#utility.yul\":8567:8570   */\n      dup3\n        /* \"#utility.yul\":8478:8571   */\n      tag_199\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":8596:8598   */\n      0x20\n        /* \"#utility.yul\":8591:8594   */\n      dup3\n        /* \"#utility.yul\":8587:8599   */\n      add\n        /* \"#utility.yul\":8580:8599   */\n      swap1\n      pop\n        /* \"#utility.yul\":8239:8605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8611:9030   */\n    tag_118:\n        /* \"#utility.yul\":8777:8781   */\n      0x00\n        /* \"#utility.yul\":8815:8817   */\n      0x20\n        /* \"#utility.yul\":8804:8813   */\n      dup3\n        /* \"#utility.yul\":8800:8818   */\n      add\n        /* \"#utility.yul\":8792:8818   */\n      swap1\n      pop\n        /* \"#utility.yul\":8864:8873   */\n      dup2\n        /* \"#utility.yul\":8858:8862   */\n      dup2\n        /* \"#utility.yul\":8854:8874   */\n      sub\n        /* \"#utility.yul\":8850:8851   */\n      0x00\n        /* \"#utility.yul\":8839:8848   */\n      dup4\n        /* \"#utility.yul\":8835:8852   */\n      add\n        /* \"#utility.yul\":8828:8875   */\n      mstore\n        /* \"#utility.yul\":8892:9023   */\n      tag_293\n        /* \"#utility.yul\":9018:9022   */\n      dup2\n        /* \"#utility.yul\":8892:9023   */\n      tag_200\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8884:9023   */\n      swap1\n      pop\n        /* \"#utility.yul\":8611:9030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9036:9368   */\n    tag_122:\n        /* \"#utility.yul\":9157:9161   */\n      0x00\n        /* \"#utility.yul\":9195:9197   */\n      0x40\n        /* \"#utility.yul\":9184:9193   */\n      dup3\n        /* \"#utility.yul\":9180:9198   */\n      add\n        /* \"#utility.yul\":9172:9198   */\n      swap1\n      pop\n        /* \"#utility.yul\":9208:9279   */\n      tag_295\n        /* \"#utility.yul\":9276:9277   */\n      0x00\n        /* \"#utility.yul\":9265:9274   */\n      dup4\n        /* \"#utility.yul\":9261:9278   */\n      add\n        /* \"#utility.yul\":9252:9258   */\n      dup6\n        /* \"#utility.yul\":9208:9279   */\n      tag_178\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":9289:9361   */\n      tag_296\n        /* \"#utility.yul\":9357:9359   */\n      0x20\n        /* \"#utility.yul\":9346:9355   */\n      dup4\n        /* \"#utility.yul\":9342:9360   */\n      add\n        /* \"#utility.yul\":9333:9339   */\n      dup5\n        /* \"#utility.yul\":9289:9361   */\n      tag_175\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":9036:9368   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9374:9550   */\n    tag_201:\n        /* \"#utility.yul\":9514:9542   */\n      0x4e6f206465706f7369747320746f20636f6e736f6c6964617465000000000000\n        /* \"#utility.yul\":9510:9511   */\n      0x00\n        /* \"#utility.yul\":9502:9508   */\n      dup3\n        /* \"#utility.yul\":9498:9512   */\n      add\n        /* \"#utility.yul\":9491:9543   */\n      mstore\n        /* \"#utility.yul\":9374:9550   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9556:9922   */\n    tag_202:\n        /* \"#utility.yul\":9698:9701   */\n      0x00\n        /* \"#utility.yul\":9719:9786   */\n      tag_299\n        /* \"#utility.yul\":9783:9785   */\n      0x1a\n        /* \"#utility.yul\":9778:9781   */\n      dup4\n        /* \"#utility.yul\":9719:9786   */\n      tag_193\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9712:9786   */\n      swap2\n      pop\n        /* \"#utility.yul\":9795:9888   */\n      tag_300\n        /* \"#utility.yul\":9884:9887   */\n      dup3\n        /* \"#utility.yul\":9795:9888   */\n      tag_201\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":9913:9915   */\n      0x20\n        /* \"#utility.yul\":9908:9911   */\n      dup3\n        /* \"#utility.yul\":9904:9916   */\n      add\n        /* \"#utility.yul\":9897:9916   */\n      swap1\n      pop\n        /* \"#utility.yul\":9556:9922   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9928:10347   */\n    tag_136:\n        /* \"#utility.yul\":10094:10098   */\n      0x00\n        /* \"#utility.yul\":10132:10134   */\n      0x20\n        /* \"#utility.yul\":10121:10130   */\n      dup3\n        /* \"#utility.yul\":10117:10135   */\n      add\n        /* \"#utility.yul\":10109:10135   */\n      swap1\n      pop\n        /* \"#utility.yul\":10181:10190   */\n      dup2\n        /* \"#utility.yul\":10175:10179   */\n      dup2\n        /* \"#utility.yul\":10171:10191   */\n      sub\n        /* \"#utility.yul\":10167:10168   */\n      0x00\n        /* \"#utility.yul\":10156:10165   */\n      dup4\n        /* \"#utility.yul\":10152:10169   */\n      add\n        /* \"#utility.yul\":10145:10192   */\n      mstore\n        /* \"#utility.yul\":10209:10340   */\n      tag_302\n        /* \"#utility.yul\":10335:10339   */\n      dup2\n        /* \"#utility.yul\":10209:10340   */\n      tag_202\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":10201:10340   */\n      swap1\n      pop\n        /* \"#utility.yul\":9928:10347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10353:10533   */\n    tag_142:\n        /* \"#utility.yul\":10401:10478   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10398:10399   */\n      0x00\n        /* \"#utility.yul\":10391:10479   */\n      mstore\n        /* \"#utility.yul\":10498:10502   */\n      0x32\n        /* \"#utility.yul\":10495:10496   */\n      0x04\n        /* \"#utility.yul\":10488:10503   */\n      mstore\n        /* \"#utility.yul\":10522:10526   */\n      0x24\n        /* \"#utility.yul\":10519:10520   */\n      0x00\n        /* \"#utility.yul\":10512:10527   */\n      revert\n        /* \"#utility.yul\":10539:10730   */\n    tag_145:\n        /* \"#utility.yul\":10579:10582   */\n      0x00\n        /* \"#utility.yul\":10598:10618   */\n      tag_305\n        /* \"#utility.yul\":10616:10617   */\n      dup3\n        /* \"#utility.yul\":10598:10618   */\n      tag_172\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":10593:10618   */\n      swap2\n      pop\n        /* \"#utility.yul\":10632:10652   */\n      tag_306\n        /* \"#utility.yul\":10650:10651   */\n      dup4\n        /* \"#utility.yul\":10632:10652   */\n      tag_172\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":10627:10652   */\n      swap3\n      pop\n        /* \"#utility.yul\":10675:10676   */\n      dup3\n        /* \"#utility.yul\":10672:10673   */\n      dup3\n        /* \"#utility.yul\":10668:10677   */\n      add\n        /* \"#utility.yul\":10661:10677   */\n      swap1\n      pop\n        /* \"#utility.yul\":10696:10699   */\n      dup1\n        /* \"#utility.yul\":10693:10694   */\n      dup3\n        /* \"#utility.yul\":10690:10700   */\n      gt\n        /* \"#utility.yul\":10687:10723   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":10703:10721   */\n      tag_308\n      tag_198\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":10687:10723   */\n    tag_307:\n        /* \"#utility.yul\":10539:10730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10736:10969   */\n    tag_147:\n        /* \"#utility.yul\":10775:10778   */\n      0x00\n        /* \"#utility.yul\":10798:10822   */\n      tag_310\n        /* \"#utility.yul\":10816:10821   */\n      dup3\n        /* \"#utility.yul\":10798:10822   */\n      tag_172\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":10789:10822   */\n      swap2\n      pop\n        /* \"#utility.yul\":10844:10910   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10837:10842   */\n      dup3\n        /* \"#utility.yul\":10834:10911   */\n      sub\n        /* \"#utility.yul\":10831:10934   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":10914:10932   */\n      tag_312\n      tag_198\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":10831:10934   */\n    tag_311:\n        /* \"#utility.yul\":10961:10962   */\n      0x01\n        /* \"#utility.yul\":10954:10959   */\n      dup3\n        /* \"#utility.yul\":10950:10963   */\n      add\n        /* \"#utility.yul\":10943:10963   */\n      swap1\n      pop\n        /* \"#utility.yul\":10736:10969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10975:11307   */\n    tag_152:\n        /* \"#utility.yul\":11096:11100   */\n      0x00\n        /* \"#utility.yul\":11134:11136   */\n      0x40\n        /* \"#utility.yul\":11123:11132   */\n      dup3\n        /* \"#utility.yul\":11119:11137   */\n      add\n        /* \"#utility.yul\":11111:11137   */\n      swap1\n      pop\n        /* \"#utility.yul\":11147:11218   */\n      tag_314\n        /* \"#utility.yul\":11215:11216   */\n      0x00\n        /* \"#utility.yul\":11204:11213   */\n      dup4\n        /* \"#utility.yul\":11200:11217   */\n      add\n        /* \"#utility.yul\":11191:11197   */\n      dup6\n        /* \"#utility.yul\":11147:11218   */\n      tag_175\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":11228:11300   */\n      tag_315\n        /* \"#utility.yul\":11296:11298   */\n      0x20\n        /* \"#utility.yul\":11285:11294   */\n      dup4\n        /* \"#utility.yul\":11281:11299   */\n      add\n        /* \"#utility.yul\":11272:11278   */\n      dup5\n        /* \"#utility.yul\":11228:11300   */\n      tag_175\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":10975:11307   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11313:11755   */\n    tag_156:\n        /* \"#utility.yul\":11462:11466   */\n      0x00\n        /* \"#utility.yul\":11500:11502   */\n      0x60\n        /* \"#utility.yul\":11489:11498   */\n      dup3\n        /* \"#utility.yul\":11485:11503   */\n      add\n        /* \"#utility.yul\":11477:11503   */\n      swap1\n      pop\n        /* \"#utility.yul\":11513:11584   */\n      tag_317\n        /* \"#utility.yul\":11581:11582   */\n      0x00\n        /* \"#utility.yul\":11570:11579   */\n      dup4\n        /* \"#utility.yul\":11566:11583   */\n      add\n        /* \"#utility.yul\":11557:11563   */\n      dup7\n        /* \"#utility.yul\":11513:11584   */\n      tag_178\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":11594:11666   */\n      tag_318\n        /* \"#utility.yul\":11662:11664   */\n      0x20\n        /* \"#utility.yul\":11651:11660   */\n      dup4\n        /* \"#utility.yul\":11647:11665   */\n      add\n        /* \"#utility.yul\":11638:11644   */\n      dup6\n        /* \"#utility.yul\":11594:11666   */\n      tag_178\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":11676:11748   */\n      tag_319\n        /* \"#utility.yul\":11744:11746   */\n      0x40\n        /* \"#utility.yul\":11733:11742   */\n      dup4\n        /* \"#utility.yul\":11729:11747   */\n      add\n        /* \"#utility.yul\":11720:11726   */\n      dup5\n        /* \"#utility.yul\":11676:11748   */\n      tag_175\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":11313:11755   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207dc12a7961d0dee6532c83ceb8b815cc27880a46152da484468071628cb63d0364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_917": {
									"entryPoint": null,
									"id": 917,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 375,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3216:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:10",
														"type": ""
													}
												],
												"src": "845:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:10"
															},
															"nodeType": "YulIf",
															"src": "981:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:10",
														"type": ""
													}
												],
												"src": "928:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:10",
														"type": ""
													}
												],
												"src": "1056:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1299:413:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1345:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1312:32:10"
															},
															"nodeType": "YulIf",
															"src": "1309:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1438:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1482:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1576:129:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1621:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1261:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1272:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1284:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1292:6:10",
														"type": ""
													}
												],
												"src": "1205:507:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1783:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1800:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1823:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1805:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1805:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1793:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1793:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1793:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1771:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1778:3:10",
														"type": ""
													}
												],
												"src": "1718:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1940:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1950:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1958:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1950:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2030:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2043:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2054:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2039:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2039:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1986:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1986:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1986:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1912:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1924:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1935:4:10",
														"type": ""
													}
												],
												"src": "1842:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2166:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2183:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2188:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2176:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2176:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2176:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2204:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2223:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2219:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2219:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2204:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2138:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2143:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2154:11:10",
														"type": ""
													}
												],
												"src": "2070:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2351:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2373:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2381:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2369:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2369:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:23:10",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2362:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2343:6:10",
														"type": ""
													}
												],
												"src": "2245:171:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2568:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2578:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2644:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2649:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2585:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2585:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2578:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2750:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nodeType": "YulIdentifier",
																	"src": "2661:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2661:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2661:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2763:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2774:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2770:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2770:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2763:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2556:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2564:3:10",
														"type": ""
													}
												],
												"src": "2422:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2965:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2975:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2987:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2998:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2983:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2975:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3022:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3033:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3018:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3018:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3041:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3047:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3037:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3037:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3011:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3011:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3011:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3067:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3201:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3075:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3075:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3067:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2945:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2960:4:10",
														"type": ""
													}
												],
												"src": "2794:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801562000010575f80fd5b5060405162001749380380620017498339818101604052810190620000369190620002d5565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a191906200032b565b60405180910390fd5b620000bb816200017760201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000134576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200012b90620003a4565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050806004819055505050620003c4565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000267826200023c565b9050919050565b62000279816200025b565b811462000284575f80fd5b50565b5f8151905062000297816200026e565b92915050565b5f819050919050565b620002b1816200029d565b8114620002bc575f80fd5b50565b5f81519050620002cf81620002a6565b92915050565b5f8060408385031215620002ee57620002ed62000238565b5b5f620002fd8582860162000287565b92505060206200031085828601620002bf565b9150509250929050565b62000325816200025b565b82525050565b5f602082019050620003405f8301846200031a565b92915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f6200038c60158362000346565b9150620003998262000356565b602082019050919050565b5f6020820190508181035f830152620003bd816200037e565b9050919050565b60805161135e620003eb5f395f81816103480152818161058301526107a4015261135e5ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c8063aef373c31161006f578063aef373c31461013e578063b3dba8da1461016e578063b6b55f251461019e578063bfc64292146101ba578063f2fde38b146101ea578063fc0c546a14610206576100b2565b80632e1a7d4d146100b657806343ba6be5146100d25780636b018114146100ee578063715018a61461010c578063724f024b146101165780638da5cb5b14610120575b5f80fd5b6100d060048036038101906100cb9190610d7d565b610224565b005b6100ec60048036038101906100e79190610d7d565b6103e5565b005b6100f661042e565b6040516101039190610db7565b60405180910390f35b610114610434565b005b61011e610447565b005b610128610462565b6040516101359190610e0f565b60405180910390f35b61015860048036038101906101539190610e52565b610489565b6040516101659190610db7565b60405180910390f35b61018860048036038101906101839190610e52565b61049e565b6040516101959190610f34565b60405180910390f35b6101b860048036038101906101b39190610d7d565b610531565b005b6101d460048036038101906101cf9190610e52565b6106d5565b6040516101e19190610db7565b60405180910390f35b61020460048036038101906101ff9190610e52565b61071e565b005b61020e6107a2565b60405161021b9190610faf565b60405180910390f35b61022c6107c6565b5f811161026e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026590611022565b60405180910390fd5b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156102ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e5906110b0565b60405180910390fd5b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461033a91906110fb565b9250508190555061038c33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108159092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516103d29190610db7565b60405180910390a26103e2610894565b50565b6103ed61089d565b806004819055507fb6c39172f87fd26c15439100462296233a2021d7140ab8e2e3feec9976bec723816040516104239190610db7565b60405180910390a150565b60045481565b61043c61089d565b6104455f610924565b565b61044f6107c6565b610458336109e5565b610460610894565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6003602052805f5260405f205f915090505481565b606060025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561052557602002820191905f5260205f20905b815481526020019060010190808311610511575b50505050509050919050565b6105396107c6565b5f811161057b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290611022565b60405180910390fd5b6105c83330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610be9909392919063ffffffff16565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f20015f90919091909150553373ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c48260405161066f9190610db7565b60405180910390a260045460025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050106106ca576106c9336109e5565b5b6106d2610894565b50565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490509050919050565b61072661089d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610796575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161078d9190610e0f565b60405180910390fd5b61079f81610924565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026001540361080b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080290611178565b60405180910390fd5b6002600181905550565b61088f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610848929190611196565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c6b565b505050565b60018081905550565b6108a5610d06565b73ffffffffffffffffffffffffffffffffffffffff166108c3610462565b73ffffffffffffffffffffffffffffffffffffffff1614610922576108e6610d06565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109199190610e0f565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f818054905011610a6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6290611207565b60405180910390fd5b5f80828054905090505f5b81811015610aba57838181548110610a9157610a90611225565b5b905f5260205f20015483610aa59190611252565b92508080610ab290611285565b915050610a76565b508160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b079190611252565b9250508190555060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f610b569190610d0d565b8373ffffffffffffffffffffffffffffffffffffffff167fcc5cf0dc864a84ad6423dd5608abd129b84caa27094cc7e97113e5eb0b36804060035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205483604051610bdb9291906112cc565b60405180910390a250505050565b610c65848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610c1e939291906112f3565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c6b565b50505050565b5f8060205f8451602086015f885af180610c8a576040513d5f823e3d81fd5b3d92505f519150505f8214610ca3576001811415610cbe565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610d0057836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610cf79190610e0f565b60405180910390fd5b50505050565b5f33905090565b5080545f8255905f5260205f2090810190610d289190610d2b565b50565b5b80821115610d42575f815f905550600101610d2c565b5090565b5f80fd5b5f819050919050565b610d5c81610d4a565b8114610d66575f80fd5b50565b5f81359050610d7781610d53565b92915050565b5f60208284031215610d9257610d91610d46565b5b5f610d9f84828501610d69565b91505092915050565b610db181610d4a565b82525050565b5f602082019050610dca5f830184610da8565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610df982610dd0565b9050919050565b610e0981610def565b82525050565b5f602082019050610e225f830184610e00565b92915050565b610e3181610def565b8114610e3b575f80fd5b50565b5f81359050610e4c81610e28565b92915050565b5f60208284031215610e6757610e66610d46565b5b5f610e7484828501610e3e565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610eaf81610d4a565b82525050565b5f610ec08383610ea6565b60208301905092915050565b5f602082019050919050565b5f610ee282610e7d565b610eec8185610e87565b9350610ef783610e97565b805f5b83811015610f27578151610f0e8882610eb5565b9750610f1983610ecc565b925050600181019050610efa565b5085935050505092915050565b5f6020820190508181035f830152610f4c8184610ed8565b905092915050565b5f819050919050565b5f610f77610f72610f6d84610dd0565b610f54565b610dd0565b9050919050565b5f610f8882610f5d565b9050919050565b5f610f9982610f7e565b9050919050565b610fa981610f8f565b82525050565b5f602082019050610fc25f830184610fa0565b92915050565b5f82825260208201905092915050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f61100c601283610fc8565b915061101782610fd8565b602082019050919050565b5f6020820190508181035f83015261103981611000565b9050919050565b7f496e73756666696369656e7420636f6e736f6c6964617465642062616c616e635f8201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b5f61109a602183610fc8565b91506110a582611040565b604082019050919050565b5f6020820190508181035f8301526110c78161108e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61110582610d4a565b915061111083610d4a565b9250828203905081811115611128576111276110ce565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611162601f83610fc8565b915061116d8261112e565b602082019050919050565b5f6020820190508181035f83015261118f81611156565b9050919050565b5f6040820190506111a95f830185610e00565b6111b66020830184610da8565b9392505050565b7f4e6f206465706f7369747320746f20636f6e736f6c69646174650000000000005f82015250565b5f6111f1601a83610fc8565b91506111fc826111bd565b602082019050919050565b5f6020820190508181035f83015261121e816111e5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61125c82610d4a565b915061126783610d4a565b925082820190508082111561127f5761127e6110ce565b5b92915050565b5f61128f82610d4a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112c1576112c06110ce565b5b600182019050919050565b5f6040820190506112df5f830185610da8565b6112ec6020830184610da8565b9392505050565b5f6060820190506113065f830186610e00565b6113136020830185610e00565b6113206040830184610da8565b94935050505056fea26469706673582212207dc12a7961d0dee6532c83ceb8b815cc27880a46152da484468071628cb63d0364736f6c63430008140033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1749 CODESIZE SUB DUP1 PUSH3 0x1749 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x2D5 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0x177 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x134 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x12B SWAP1 PUSH3 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x3C4 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x267 DUP3 PUSH3 0x23C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x279 DUP2 PUSH3 0x25B JUMP JUMPDEST DUP2 EQ PUSH3 0x284 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x297 DUP2 PUSH3 0x26E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B1 DUP2 PUSH3 0x29D JUMP JUMPDEST DUP2 EQ PUSH3 0x2BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2CF DUP2 PUSH3 0x2A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2EE JUMPI PUSH3 0x2ED PUSH3 0x238 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x2FD DUP6 DUP3 DUP7 ADD PUSH3 0x287 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x310 DUP6 DUP3 DUP7 ADD PUSH3 0x2BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x325 DUP2 PUSH3 0x25B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x340 PUSH0 DUP4 ADD DUP5 PUSH3 0x31A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x38C PUSH1 0x15 DUP4 PUSH3 0x346 JUMP JUMPDEST SWAP2 POP PUSH3 0x399 DUP3 PUSH3 0x356 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x3BD DUP2 PUSH3 0x37E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x135E PUSH3 0x3EB PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x348 ADD MSTORE DUP2 DUP2 PUSH2 0x583 ADD MSTORE PUSH2 0x7A4 ADD MSTORE PUSH2 0x135E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAEF373C3 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAEF373C3 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xB3DBA8DA EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xBFC64292 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x206 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x43BA6BE5 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x6B018114 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x724F024B EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x120 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xD7D JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xD7D JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF6 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x434 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11E PUSH2 0x447 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x128 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xD7D JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x71E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH2 0x7C6 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x26E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x265 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E5 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x10FB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x38C CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x815 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x3E2 PUSH2 0x894 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x89D JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB6C39172F87FD26C15439100462296233A2021D7140AB8E2E3FEEC9976BEC723 DUP2 PUSH1 0x40 MLOAD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x43C PUSH2 0x89D JUMP JUMPDEST PUSH2 0x445 PUSH0 PUSH2 0x924 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x44F PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x458 CALLER PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x460 PUSH2 0x894 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x511 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x539 PUSH2 0x7C6 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x57B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x572 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C8 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP LT PUSH2 0x6CA JUMPI PUSH2 0x6C9 CALLER PUSH2 0x9E5 JUMP JUMPDEST JUMPDEST PUSH2 0x6D2 PUSH2 0x894 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x726 PUSH2 0x89D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x796 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78D SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x79F DUP2 PUSH2 0x924 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x802 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x88F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x848 SWAP3 SWAP2 SWAP1 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC6B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8A5 PUSH2 0xD06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8C3 PUSH2 0x462 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x922 JUMPI PUSH2 0x8E6 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x919 SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 DUP1 SLOAD SWAP1 POP GT PUSH2 0xA6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA62 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xABA JUMPI DUP4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA91 JUMPI PUSH2 0xA90 PUSH2 0x1225 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP4 PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0xAB2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA76 JUMP JUMPDEST POP DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC5CF0DC864A84AD6423DD5608ABD129B84CAA27094CC7E97113E5EB0B368040 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0xBDB SWAP3 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0xC65 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC1E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC6B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xC8A JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xCA3 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xCBE JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xD00 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF7 SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xD28 SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xD42 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xD2C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5C DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP2 EQ PUSH2 0xD66 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD77 DUP2 PUSH2 0xD53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD92 JUMPI PUSH2 0xD91 PUSH2 0xD46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD9F DUP5 DUP3 DUP6 ADD PUSH2 0xD69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDB1 DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDCA PUSH0 DUP4 ADD DUP5 PUSH2 0xDA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDF9 DUP3 PUSH2 0xDD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE09 DUP2 PUSH2 0xDEF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE22 PUSH0 DUP4 ADD DUP5 PUSH2 0xE00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE31 DUP2 PUSH2 0xDEF JUMP JUMPDEST DUP2 EQ PUSH2 0xE3B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4C DUP2 PUSH2 0xE28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE67 JUMPI PUSH2 0xE66 PUSH2 0xD46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE74 DUP5 DUP3 DUP6 ADD PUSH2 0xE3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAF DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEC0 DUP4 DUP4 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEE2 DUP3 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xEEC DUP2 DUP6 PUSH2 0xE87 JUMP JUMPDEST SWAP4 POP PUSH2 0xEF7 DUP4 PUSH2 0xE97 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF27 JUMPI DUP2 MLOAD PUSH2 0xF0E DUP9 DUP3 PUSH2 0xEB5 JUMP JUMPDEST SWAP8 POP PUSH2 0xF19 DUP4 PUSH2 0xECC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xEFA JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF4C DUP2 DUP5 PUSH2 0xED8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF77 PUSH2 0xF72 PUSH2 0xF6D DUP5 PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0xF54 JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF88 DUP3 PUSH2 0xF5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF99 DUP3 PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA9 DUP2 PUSH2 0xF8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFC2 PUSH0 DUP4 ADD DUP5 PUSH2 0xFA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x100C PUSH1 0x12 DUP4 PUSH2 0xFC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1017 DUP3 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1039 DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6E736F6C6964617465642062616C616E63 PUSH0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x109A PUSH1 0x21 DUP4 PUSH2 0xFC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A5 DUP3 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10C7 DUP2 PUSH2 0x108E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1105 DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP PUSH2 0x1110 DUP4 PUSH2 0xD4A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1128 JUMPI PUSH2 0x1127 PUSH2 0x10CE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1162 PUSH1 0x1F DUP4 PUSH2 0xFC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x116D DUP3 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x118F DUP2 PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11A9 PUSH0 DUP4 ADD DUP6 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x11B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F206465706F7369747320746F20636F6E736F6C6964617465000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11F1 PUSH1 0x1A DUP4 PUSH2 0xFC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x11FC DUP3 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x121E DUP2 PUSH2 0x11E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x125C DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP PUSH2 0x1267 DUP4 PUSH2 0xD4A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x127F JUMPI PUSH2 0x127E PUSH2 0x10CE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x128F DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x12C1 JUMPI PUSH2 0x12C0 PUSH2 0x10CE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12DF PUSH0 DUP4 ADD DUP6 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x12EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1306 PUSH0 DUP4 ADD DUP7 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x1313 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x1320 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDA8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xC12A7961D0DEE6532C83CEB8B815CC27880A46152DA484468071628CB63D SUB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "641:4239:9:-:0;;;1713:242;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1782:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;1830:1:9::1;1812:20;;:6;:20;;::::0;1804:54:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1883:6;1868:22;;;;;;;;::::0;::::1;1925:23;1900:22;:48;;;;1713:242:::0;;641:4239;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:118::-;1805:24;1823:5;1805:24;:::i;:::-;1800:3;1793:37;1718:118;;:::o;1842:222::-;1935:4;1973:2;1962:9;1958:18;1950:26;;1986:71;2054:1;2043:9;2039:17;2030:6;1986:71;:::i;:::-;1842:222;;;;:::o;2070:169::-;2154:11;2188:6;2183:3;2176:19;2228:4;2223:3;2219:14;2204:29;;2070:169;;;;:::o;2245:171::-;2385:23;2381:1;2373:6;2369:14;2362:47;2245:171;:::o;2422:366::-;2564:3;2585:67;2649:2;2644:3;2585:67;:::i;:::-;2578:74;;2661:93;2750:3;2661:93;:::i;:::-;2779:2;2774:3;2770:12;2763:19;;2422:366;;;:::o;2794:419::-;2960:4;2998:2;2987:9;2983:18;2975:26;;3047:9;3041:4;3037:20;3033:1;3022:9;3018:17;3011:47;3075:131;3201:4;3075:131;:::i;:::-;3067:139;;2794:419;;;:::o;641:4239:9:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_747": {
									"entryPoint": 3179,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2205,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_consolidate_1072": {
									"entryPoint": 2533,
									"id": 1072,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_801": {
									"entryPoint": 3334,
									"id": 801,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 2196,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 1990,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2340,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@consolidate_1002": {
									"entryPoint": 1095,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@consolidatedBalance_858": {
									"entryPoint": 1161,
									"id": 858,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@consolidationThreshold_860": {
									"entryPoint": 1070,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_990": {
									"entryPoint": 1329,
									"id": 990,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getDepositFragmentCount_1133": {
									"entryPoint": 1749,
									"id": 1133,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getDepositFragments_1147": {
									"entryPoint": 1182,
									"id": 1147,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1122,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1076,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_452": {
									"entryPoint": 3049,
									"id": 452,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 2069,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@token_849": {
									"entryPoint": 1954,
									"id": 849,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1822,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateConsolidationThreshold_934": {
									"entryPoint": 997,
									"id": 934,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1119": {
									"entryPoint": 548,
									"id": 1119,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 3765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack": {
									"entryPoint": 4000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0635ad17ff9099e47ed880fcb678760e95e2bef8a001321e6bf452783765bc20_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_be1d2b744db54cb219f1f9036b95f6aa025799c63e16f6ecf5b38c8381f4eb72_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4851,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4502,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": 4015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0635ad17ff9099e47ed880fcb678760e95e2bef8a001321e6bf452783765bc20__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_be1d2b744db54cb219f1f9036b95f6aa025799c63e16f6ecf5b38c8381f4eb72__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4812,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$380_to_t_address": {
									"entryPoint": 3983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4302,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4645,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb": {
									"entryPoint": 4056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0635ad17ff9099e47ed880fcb678760e95e2bef8a001321e6bf452783765bc20": {
									"entryPoint": 4160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_be1d2b744db54cb219f1f9036b95f6aa025799c63e16f6ecf5b38c8381f4eb72": {
									"entryPoint": 4541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11758:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:10"
															},
															"nodeType": "YulIf",
															"src": "470:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:10",
														"type": ""
													}
												],
												"src": "417:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:10",
														"type": ""
													}
												],
												"src": "545:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:10"
															},
															"nodeType": "YulIf",
															"src": "766:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:10",
														"type": ""
													}
												],
												"src": "690:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:10",
														"type": ""
													}
												],
												"src": "1025:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:10",
														"type": ""
													}
												],
												"src": "1149:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:10",
														"type": ""
													}
												],
												"src": "1377:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:10",
														"type": ""
													}
												],
												"src": "1509:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:10",
														"type": ""
													}
												],
												"src": "1611:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1843:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1805:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1817:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1828:4:10",
														"type": ""
													}
												],
												"src": "1735:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2063:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2072:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2075:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2065:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2065:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2065:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2029:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2054:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2036:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2036:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2026:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2026:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:43:10"
															},
															"nodeType": "YulIf",
															"src": "2016:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1999:5:10",
														"type": ""
													}
												],
												"src": "1963:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2143:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2153:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2175:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2162:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2162:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2153:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2218:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2191:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2191:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2121:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2129:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2137:5:10",
														"type": ""
													}
												],
												"src": "2091:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2302:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2348:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2350:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2350:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2350:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2323:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2319:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2319:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:32:10"
															},
															"nodeType": "YulIf",
															"src": "2312:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2441:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2456:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2460:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2485:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2520:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2531:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2516:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2516:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2540:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2495:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2495:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2485:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2272:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2283:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2295:6:10",
														"type": ""
													}
												],
												"src": "2236:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2645:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2656:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2672:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2666:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2666:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2656:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2628:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2638:6:10",
														"type": ""
													}
												],
												"src": "2571:114:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2802:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2819:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2824:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2812:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2812:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2840:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2859:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2864:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2855:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2840:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2774:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2779:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2790:11:10",
														"type": ""
													}
												],
												"src": "2691:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:60:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2971:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2963:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2984:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2996:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3001:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2992:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2992:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2984:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2940:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2948:4:10",
														"type": ""
													}
												],
												"src": "2881:132:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3074:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3091:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3114:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3096:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3096:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3084:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3084:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3062:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3069:3:10",
														"type": ""
													}
												],
												"src": "3019:108:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3213:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3257:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3265:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3223:33:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3223:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3223:46:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3278:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3296:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "3278:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3186:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3194:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3202:10:10",
														"type": ""
													}
												],
												"src": "3133:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3393:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3403:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3415:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3420:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3411:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3411:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "3403:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3380:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "3388:4:10",
														"type": ""
													}
												],
												"src": "3318:113:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3591:608:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3601:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3663:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3615:47:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3615:54:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3605:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3678:93:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3759:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3764:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3685:73:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:86:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3678:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3780:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3845:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3795:49:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3795:56:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "3784:7:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3860:21:10",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "3874:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3864:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3950:224:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3964:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3991:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "3985:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3985:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "3968:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4011:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4062:13:10"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4077:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "4018:43:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4018:63:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4011:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4094:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4157:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4104:52:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4104:60:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4094:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3912:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3915:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3909:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3909:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3923:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3925:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3934:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3937:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3930:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3930:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3925:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3894:14:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3896:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3905:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "3900:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3890:284:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4183:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4190:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4183:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3570:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3577:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3586:3:10",
														"type": ""
													}
												],
												"src": "3467:732:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4353:225:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4363:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4375:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4386:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4371:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4371:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4363:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4410:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4421:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4406:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4406:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4429:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4435:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4425:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4425:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4399:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4399:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4399:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4455:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4557:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4566:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4463:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4463:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4455:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4325:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4337:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4348:4:10",
														"type": ""
													}
												],
												"src": "4205:373:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4616:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4626:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4633:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4626:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4602:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4612:3:10",
														"type": ""
													}
												],
												"src": "4584:60:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4710:82:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4720:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4778:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "4760:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4760:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4751:8:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4751:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4733:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4733:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4720:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4690:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4700:9:10",
														"type": ""
													}
												],
												"src": "4650:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4858:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4868:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4912:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4881:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4881:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4868:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4838:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4848:9:10",
														"type": ""
													}
												],
												"src": "4798:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5004:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5014:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5058:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5027:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5027:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5014:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$380_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4984:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4994:9:10",
														"type": ""
													}
												],
												"src": "4930:140:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5155:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5222:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$380_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5177:44:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5177:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5165:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5165:64:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5165:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5150:3:10",
														"type": ""
													}
												],
												"src": "5076:159:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5353:138:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5363:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5375:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5386:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5371:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5371:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5363:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5457:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5470:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5481:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5466:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5466:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5399:57:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:85:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5399:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5325:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5337:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5348:4:10",
														"type": ""
													}
												],
												"src": "5241:250:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5593:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5610:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5615:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5631:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5650:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5655:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5646:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5646:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5631:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5565:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5570:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5581:11:10",
														"type": ""
													}
												],
												"src": "5497:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5778:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5800:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5808:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5796:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5796:14:10"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5812:20:10",
																		"type": "",
																		"value": "Amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5789:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5789:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5789:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5770:6:10",
														"type": ""
													}
												],
												"src": "5672:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5992:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6002:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6068:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6073:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6009:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6009:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6002:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6174:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																	"nodeType": "YulIdentifier",
																	"src": "6085:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6085:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6085:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6187:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6198:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6203:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6194:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6194:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6187:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5980:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5988:3:10",
														"type": ""
													}
												],
												"src": "5846:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6389:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6399:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6411:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6422:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6407:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6407:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6399:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6446:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6457:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6442:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6442:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6465:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6471:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6461:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6461:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6435:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6435:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6435:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6491:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6625:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6499:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6499:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6491:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6369:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6384:4:10",
														"type": ""
													}
												],
												"src": "6218:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6749:114:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6771:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6779:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6767:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6767:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420636f6e736f6c6964617465642062616c616e63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6783:34:10",
																		"type": "",
																		"value": "Insufficient consolidated balanc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6760:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6760:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6760:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6839:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6847:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6835:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6835:15:10"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6852:3:10",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6828:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6828:28:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6828:28:10"
														}
													]
												},
												"name": "store_literal_in_memory_0635ad17ff9099e47ed880fcb678760e95e2bef8a001321e6bf452783765bc20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6741:6:10",
														"type": ""
													}
												],
												"src": "6643:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7015:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7025:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7091:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7096:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7032:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7025:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7197:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0635ad17ff9099e47ed880fcb678760e95e2bef8a001321e6bf452783765bc20",
																	"nodeType": "YulIdentifier",
																	"src": "7108:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7108:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7108:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7210:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7221:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7226:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7217:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7217:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7210:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0635ad17ff9099e47ed880fcb678760e95e2bef8a001321e6bf452783765bc20_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7003:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7011:3:10",
														"type": ""
													}
												],
												"src": "6869:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7422:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7434:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7445:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7430:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7430:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7422:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7469:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7480:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7465:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7465:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7488:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7494:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7484:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7484:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7458:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7458:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7458:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7514:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7648:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0635ad17ff9099e47ed880fcb678760e95e2bef8a001321e6bf452783765bc20_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7522:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7522:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7514:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0635ad17ff9099e47ed880fcb678760e95e2bef8a001321e6bf452783765bc20__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7392:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7407:4:10",
														"type": ""
													}
												],
												"src": "7241:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7694:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7711:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7714:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7704:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7704:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7704:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7808:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7811:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7801:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7801:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7801:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7832:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7835:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7825:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7825:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7825:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7666:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7897:149:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7907:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7930:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7912:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7912:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7907:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7941:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7964:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7946:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7946:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7941:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7975:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7987:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7990:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7983:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7983:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7975:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8017:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8019:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8019:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8019:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "8008:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8014:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8005:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8005:11:10"
															},
															"nodeType": "YulIf",
															"src": "8002:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7883:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7886:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7892:4:10",
														"type": ""
													}
												],
												"src": "7852:194:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8158:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8180:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8188:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8176:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8176:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8192:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8169:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8169:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8169:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8150:6:10",
														"type": ""
													}
												],
												"src": "8052:181:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8385:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8395:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8461:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8466:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8402:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8402:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8395:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8567:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "8478:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8478:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8478:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8580:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8591:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8596:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8587:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8587:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8580:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8373:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8381:3:10",
														"type": ""
													}
												],
												"src": "8239:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8782:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8792:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8804:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8815:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8800:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8800:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8792:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8839:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8850:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8835:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8835:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8858:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8864:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8854:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8854:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8828:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8828:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8828:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8884:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9018:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8892:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8892:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8884:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8762:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8777:4:10",
														"type": ""
													}
												],
												"src": "8611:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9162:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9172:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9184:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9195:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9180:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9180:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9172:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9252:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9265:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9276:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9261:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9261:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9208:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9208:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9208:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9333:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9346:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9357:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9342:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9342:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9289:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9289:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9289:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9126:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9138:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9146:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9157:4:10",
														"type": ""
													}
												],
												"src": "9036:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9480:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9502:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9510:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9498:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9498:14:10"
																	},
																	{
																		"hexValue": "4e6f206465706f7369747320746f20636f6e736f6c6964617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9514:28:10",
																		"type": "",
																		"value": "No deposits to consolidate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9491:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9491:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9491:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_be1d2b744db54cb219f1f9036b95f6aa025799c63e16f6ecf5b38c8381f4eb72",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9472:6:10",
														"type": ""
													}
												],
												"src": "9374:176:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9702:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9712:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9778:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9783:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9719:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9719:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9712:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9884:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_be1d2b744db54cb219f1f9036b95f6aa025799c63e16f6ecf5b38c8381f4eb72",
																	"nodeType": "YulIdentifier",
																	"src": "9795:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9795:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9795:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9897:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9908:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9913:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9904:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9904:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9897:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_be1d2b744db54cb219f1f9036b95f6aa025799c63e16f6ecf5b38c8381f4eb72_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9690:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9698:3:10",
														"type": ""
													}
												],
												"src": "9556:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10099:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10109:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10121:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10132:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10117:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10117:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10109:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10156:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10167:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10152:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10152:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10175:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10181:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10171:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10171:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10145:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10145:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10145:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10201:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10335:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_be1d2b744db54cb219f1f9036b95f6aa025799c63e16f6ecf5b38c8381f4eb72_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10209:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10209:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10201:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_be1d2b744db54cb219f1f9036b95f6aa025799c63e16f6ecf5b38c8381f4eb72__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10079:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10094:4:10",
														"type": ""
													}
												],
												"src": "9928:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10381:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10398:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10401:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10391:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10391:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10391:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10495:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10498:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10488:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10488:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10488:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10522:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10512:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10512:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10512:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10353:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10583:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10593:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10616:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10598:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10598:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10593:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10627:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10650:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10632:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10632:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10627:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10661:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10672:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10675:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10668:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10668:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10661:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10701:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10703:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10703:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10703:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10693:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10696:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10690:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10690:10:10"
															},
															"nodeType": "YulIf",
															"src": "10687:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10570:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10573:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10579:3:10",
														"type": ""
													}
												],
												"src": "10539:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10779:190:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10789:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10816:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10798:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10798:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10789:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10912:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10914:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10914:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10914:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10837:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10844:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10834:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10834:77:10"
															},
															"nodeType": "YulIf",
															"src": "10831:103:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10943:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10954:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10961:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10950:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10950:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10943:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10765:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10775:3:10",
														"type": ""
													}
												],
												"src": "10736:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11101:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11111:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11123:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11134:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11119:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11119:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11111:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11191:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11204:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11215:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11200:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11200:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11147:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11147:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11147:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11272:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11285:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11296:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11281:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11281:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11228:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11228:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11228:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11065:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11077:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11085:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11096:4:10",
														"type": ""
													}
												],
												"src": "10975:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11467:288:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11477:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11489:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11500:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11485:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11485:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11477:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11557:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11570:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11581:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11566:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11566:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11513:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11513:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11513:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11638:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11651:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11662:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11647:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11647:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11594:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11594:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11594:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11720:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11733:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11744:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11729:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11729:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11676:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11676:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11676:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11423:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11435:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11443:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11451:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11462:4:10",
														"type": ""
													}
												],
												"src": "11313:442:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$380_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$380_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0635ad17ff9099e47ed880fcb678760e95e2bef8a001321e6bf452783765bc20(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient consolidated balanc\")\n\n        mstore(add(memPtr, 32), \"e\")\n\n    }\n\n    function abi_encode_t_stringliteral_0635ad17ff9099e47ed880fcb678760e95e2bef8a001321e6bf452783765bc20_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_0635ad17ff9099e47ed880fcb678760e95e2bef8a001321e6bf452783765bc20(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0635ad17ff9099e47ed880fcb678760e95e2bef8a001321e6bf452783765bc20__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0635ad17ff9099e47ed880fcb678760e95e2bef8a001321e6bf452783765bc20_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_be1d2b744db54cb219f1f9036b95f6aa025799c63e16f6ecf5b38c8381f4eb72(memPtr) {\n\n        mstore(add(memPtr, 0), \"No deposits to consolidate\")\n\n    }\n\n    function abi_encode_t_stringliteral_be1d2b744db54cb219f1f9036b95f6aa025799c63e16f6ecf5b38c8381f4eb72_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_be1d2b744db54cb219f1f9036b95f6aa025799c63e16f6ecf5b38c8381f4eb72(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_be1d2b744db54cb219f1f9036b95f6aa025799c63e16f6ecf5b38c8381f4eb72__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_be1d2b744db54cb219f1f9036b95f6aa025799c63e16f6ecf5b38c8381f4eb72_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"849": [
									{
										"length": 32,
										"start": 840
									},
									{
										"length": 32,
										"start": 1411
									},
									{
										"length": 32,
										"start": 1956
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b2575f3560e01c8063aef373c31161006f578063aef373c31461013e578063b3dba8da1461016e578063b6b55f251461019e578063bfc64292146101ba578063f2fde38b146101ea578063fc0c546a14610206576100b2565b80632e1a7d4d146100b657806343ba6be5146100d25780636b018114146100ee578063715018a61461010c578063724f024b146101165780638da5cb5b14610120575b5f80fd5b6100d060048036038101906100cb9190610d7d565b610224565b005b6100ec60048036038101906100e79190610d7d565b6103e5565b005b6100f661042e565b6040516101039190610db7565b60405180910390f35b610114610434565b005b61011e610447565b005b610128610462565b6040516101359190610e0f565b60405180910390f35b61015860048036038101906101539190610e52565b610489565b6040516101659190610db7565b60405180910390f35b61018860048036038101906101839190610e52565b61049e565b6040516101959190610f34565b60405180910390f35b6101b860048036038101906101b39190610d7d565b610531565b005b6101d460048036038101906101cf9190610e52565b6106d5565b6040516101e19190610db7565b60405180910390f35b61020460048036038101906101ff9190610e52565b61071e565b005b61020e6107a2565b60405161021b9190610faf565b60405180910390f35b61022c6107c6565b5f811161026e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026590611022565b60405180910390fd5b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156102ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e5906110b0565b60405180910390fd5b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461033a91906110fb565b9250508190555061038c33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108159092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516103d29190610db7565b60405180910390a26103e2610894565b50565b6103ed61089d565b806004819055507fb6c39172f87fd26c15439100462296233a2021d7140ab8e2e3feec9976bec723816040516104239190610db7565b60405180910390a150565b60045481565b61043c61089d565b6104455f610924565b565b61044f6107c6565b610458336109e5565b610460610894565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6003602052805f5260405f205f915090505481565b606060025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561052557602002820191905f5260205f20905b815481526020019060010190808311610511575b50505050509050919050565b6105396107c6565b5f811161057b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290611022565b60405180910390fd5b6105c83330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610be9909392919063ffffffff16565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f20015f90919091909150553373ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c48260405161066f9190610db7565b60405180910390a260045460025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050106106ca576106c9336109e5565b5b6106d2610894565b50565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490509050919050565b61072661089d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610796575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161078d9190610e0f565b60405180910390fd5b61079f81610924565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026001540361080b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080290611178565b60405180910390fd5b6002600181905550565b61088f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610848929190611196565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c6b565b505050565b60018081905550565b6108a5610d06565b73ffffffffffffffffffffffffffffffffffffffff166108c3610462565b73ffffffffffffffffffffffffffffffffffffffff1614610922576108e6610d06565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109199190610e0f565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f818054905011610a6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6290611207565b60405180910390fd5b5f80828054905090505f5b81811015610aba57838181548110610a9157610a90611225565b5b905f5260205f20015483610aa59190611252565b92508080610ab290611285565b915050610a76565b508160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b079190611252565b9250508190555060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f610b569190610d0d565b8373ffffffffffffffffffffffffffffffffffffffff167fcc5cf0dc864a84ad6423dd5608abd129b84caa27094cc7e97113e5eb0b36804060035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205483604051610bdb9291906112cc565b60405180910390a250505050565b610c65848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610c1e939291906112f3565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c6b565b50505050565b5f8060205f8451602086015f885af180610c8a576040513d5f823e3d81fd5b3d92505f519150505f8214610ca3576001811415610cbe565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610d0057836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610cf79190610e0f565b60405180910390fd5b50505050565b5f33905090565b5080545f8255905f5260205f2090810190610d289190610d2b565b50565b5b80821115610d42575f815f905550600101610d2c565b5090565b5f80fd5b5f819050919050565b610d5c81610d4a565b8114610d66575f80fd5b50565b5f81359050610d7781610d53565b92915050565b5f60208284031215610d9257610d91610d46565b5b5f610d9f84828501610d69565b91505092915050565b610db181610d4a565b82525050565b5f602082019050610dca5f830184610da8565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610df982610dd0565b9050919050565b610e0981610def565b82525050565b5f602082019050610e225f830184610e00565b92915050565b610e3181610def565b8114610e3b575f80fd5b50565b5f81359050610e4c81610e28565b92915050565b5f60208284031215610e6757610e66610d46565b5b5f610e7484828501610e3e565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610eaf81610d4a565b82525050565b5f610ec08383610ea6565b60208301905092915050565b5f602082019050919050565b5f610ee282610e7d565b610eec8185610e87565b9350610ef783610e97565b805f5b83811015610f27578151610f0e8882610eb5565b9750610f1983610ecc565b925050600181019050610efa565b5085935050505092915050565b5f6020820190508181035f830152610f4c8184610ed8565b905092915050565b5f819050919050565b5f610f77610f72610f6d84610dd0565b610f54565b610dd0565b9050919050565b5f610f8882610f5d565b9050919050565b5f610f9982610f7e565b9050919050565b610fa981610f8f565b82525050565b5f602082019050610fc25f830184610fa0565b92915050565b5f82825260208201905092915050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f61100c601283610fc8565b915061101782610fd8565b602082019050919050565b5f6020820190508181035f83015261103981611000565b9050919050565b7f496e73756666696369656e7420636f6e736f6c6964617465642062616c616e635f8201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b5f61109a602183610fc8565b91506110a582611040565b604082019050919050565b5f6020820190508181035f8301526110c78161108e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61110582610d4a565b915061111083610d4a565b9250828203905081811115611128576111276110ce565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611162601f83610fc8565b915061116d8261112e565b602082019050919050565b5f6020820190508181035f83015261118f81611156565b9050919050565b5f6040820190506111a95f830185610e00565b6111b66020830184610da8565b9392505050565b7f4e6f206465706f7369747320746f20636f6e736f6c69646174650000000000005f82015250565b5f6111f1601a83610fc8565b91506111fc826111bd565b602082019050919050565b5f6020820190508181035f83015261121e816111e5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61125c82610d4a565b915061126783610d4a565b925082820190508082111561127f5761127e6110ce565b5b92915050565b5f61128f82610d4a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112c1576112c06110ce565b5b600182019050919050565b5f6040820190506112df5f830185610da8565b6112ec6020830184610da8565b9392505050565b5f6060820190506113065f830186610e00565b6113136020830185610e00565b6113206040830184610da8565b94935050505056fea26469706673582212207dc12a7961d0dee6532c83ceb8b815cc27880a46152da484468071628cb63d0364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAEF373C3 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAEF373C3 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xB3DBA8DA EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xBFC64292 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x206 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x43BA6BE5 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x6B018114 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x724F024B EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x120 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xD7D JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xD7D JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF6 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x434 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11E PUSH2 0x447 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x128 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xD7D JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x71E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH2 0x7C6 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x26E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x265 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E5 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x10FB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x38C CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x815 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x3E2 PUSH2 0x894 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x89D JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB6C39172F87FD26C15439100462296233A2021D7140AB8E2E3FEEC9976BEC723 DUP2 PUSH1 0x40 MLOAD PUSH2 0x423 SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x43C PUSH2 0x89D JUMP JUMPDEST PUSH2 0x445 PUSH0 PUSH2 0x924 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x44F PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x458 CALLER PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x460 PUSH2 0x894 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x511 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x539 PUSH2 0x7C6 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x57B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x572 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C8 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP LT PUSH2 0x6CA JUMPI PUSH2 0x6C9 CALLER PUSH2 0x9E5 JUMP JUMPDEST JUMPDEST PUSH2 0x6D2 PUSH2 0x894 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x726 PUSH2 0x89D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x796 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78D SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x79F DUP2 PUSH2 0x924 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x802 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x88F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x848 SWAP3 SWAP2 SWAP1 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC6B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x8A5 PUSH2 0xD06 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8C3 PUSH2 0x462 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x922 JUMPI PUSH2 0x8E6 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x919 SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 DUP1 SLOAD SWAP1 POP GT PUSH2 0xA6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA62 SWAP1 PUSH2 0x1207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xABA JUMPI DUP4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA91 JUMPI PUSH2 0xA90 PUSH2 0x1225 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP4 PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0xAB2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA76 JUMP JUMPDEST POP DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB07 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC5CF0DC864A84AD6423DD5608ABD129B84CAA27094CC7E97113E5EB0B368040 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0xBDB SWAP3 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0xC65 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC1E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC6B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xC8A JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xCA3 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xCBE JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xD00 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF7 SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xD28 SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xD42 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xD2C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5C DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP2 EQ PUSH2 0xD66 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD77 DUP2 PUSH2 0xD53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD92 JUMPI PUSH2 0xD91 PUSH2 0xD46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD9F DUP5 DUP3 DUP6 ADD PUSH2 0xD69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDB1 DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDCA PUSH0 DUP4 ADD DUP5 PUSH2 0xDA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDF9 DUP3 PUSH2 0xDD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE09 DUP2 PUSH2 0xDEF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE22 PUSH0 DUP4 ADD DUP5 PUSH2 0xE00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE31 DUP2 PUSH2 0xDEF JUMP JUMPDEST DUP2 EQ PUSH2 0xE3B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4C DUP2 PUSH2 0xE28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE67 JUMPI PUSH2 0xE66 PUSH2 0xD46 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE74 DUP5 DUP3 DUP6 ADD PUSH2 0xE3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAF DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEC0 DUP4 DUP4 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEE2 DUP3 PUSH2 0xE7D JUMP JUMPDEST PUSH2 0xEEC DUP2 DUP6 PUSH2 0xE87 JUMP JUMPDEST SWAP4 POP PUSH2 0xEF7 DUP4 PUSH2 0xE97 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF27 JUMPI DUP2 MLOAD PUSH2 0xF0E DUP9 DUP3 PUSH2 0xEB5 JUMP JUMPDEST SWAP8 POP PUSH2 0xF19 DUP4 PUSH2 0xECC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xEFA JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF4C DUP2 DUP5 PUSH2 0xED8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF77 PUSH2 0xF72 PUSH2 0xF6D DUP5 PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0xF54 JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF88 DUP3 PUSH2 0xF5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF99 DUP3 PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA9 DUP2 PUSH2 0xF8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFC2 PUSH0 DUP4 ADD DUP5 PUSH2 0xFA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x100C PUSH1 0x12 DUP4 PUSH2 0xFC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1017 DUP3 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1039 DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6E736F6C6964617465642062616C616E63 PUSH0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x109A PUSH1 0x21 DUP4 PUSH2 0xFC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A5 DUP3 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10C7 DUP2 PUSH2 0x108E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1105 DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP PUSH2 0x1110 DUP4 PUSH2 0xD4A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1128 JUMPI PUSH2 0x1127 PUSH2 0x10CE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1162 PUSH1 0x1F DUP4 PUSH2 0xFC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x116D DUP3 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x118F DUP2 PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11A9 PUSH0 DUP4 ADD DUP6 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x11B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F206465706F7369747320746F20636F6E736F6C6964617465000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11F1 PUSH1 0x1A DUP4 PUSH2 0xFC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x11FC DUP3 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x121E DUP2 PUSH2 0x11E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x125C DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP PUSH2 0x1267 DUP4 PUSH2 0xD4A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x127F JUMPI PUSH2 0x127E PUSH2 0x10CE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x128F DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x12C1 JUMPI PUSH2 0x12C0 PUSH2 0x10CE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12DF PUSH0 DUP4 ADD DUP6 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x12EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1306 PUSH0 DUP4 ADD DUP7 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x1313 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x1320 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDA8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xC12A7961D0DEE6532C83CEB8B815CC27880A46152DA484468071628CB63D SUB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "641:4239:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3907:354;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2094:191;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1105:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2999:86:9;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;977:54:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4756:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2419:480;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4437:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;781:29:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3907:354;2261:21:4;:19;:21::i;:::-;3990:1:9::1;3981:6;:10;3973:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;4067:6;4032:19;:31;4052:10;4032:31;;;;;;;;;;;;;;;;:41;;4024:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;4156:6;4121:19;:31;4141:10;4121:31;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;4172:38;4191:10;4203:6;4172:5;:18;;;;:38;;;;;:::i;:::-;4235:10;4225:29;;;4247:6;4225:29;;;;;;:::i;:::-;;;;;;;;2303:20:4::0;:18;:20::i;:::-;3907:354:9;:::o;2094:191::-;1531:13:0;:11;:13::i;:::-;2208:12:9::1;2183:22;:37;;;;2235:43;2265:12;2235:43;;;;;;:::i;:::-;;;;;;;;2094:191:::0;:::o;1105:37::-;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2999:86:9:-;2261:21:4;:19;:21::i;:::-;3054:24:9::1;3067:10;3054:12;:24::i;:::-;2303:20:4::0;:18;:20::i;:::-;2999:86:9:o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;977:54:9:-;;;;;;;;;;;;;;;;;:::o;4756:122::-;4822:16;4857:8;:14;4866:4;4857:14;;;;;;;;;;;;;;;4850:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4756:122;;;:::o;2419:480::-;2261:21:4;:19;:21::i;:::-;2501:1:9::1;2492:6;:10;2484:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2535:57;2558:10;2578:4;2585:6;2535:5;:22;;;;:57;;;;;;:::i;:::-;2602:8;:20;2611:10;2602:20;;;;;;;;;;;;;;;2628:6;2602:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2660:10;2650:29;;;2672:6;2650:29;;;;;;:::i;:::-;;;;;;;;2820:22;;2789:8;:20;2798:10;2789:20;;;;;;;;;;;;;;;:27;;;;:53;2785:108;;2858:24;2871:10;2858:12;:24::i;:::-;2785:108;2303:20:4::0;:18;:20::i;:::-;2419:480:9;:::o;4437:124::-;4507:7;4533:8;:14;4542:4;4533:14;;;;;;;;;;;;;;;:21;;;;4526:28;;4437:124;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;781:29:9:-;;;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3297:484:9:-;3352:30;3385:8;:14;3394:4;3385:14;;;;;;;;;;;;;;;3352:47;;3439:1;3417:12;:19;;;;:23;3409:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3482:11;3507:13;3523:12;:19;;;;3507:35;;3557:9;3552:83;3576:5;3572:1;:9;3552:83;;;3609:12;3622:1;3609:15;;;;;;;;:::i;:::-;;;;;;;;;;3602:22;;;;;:::i;:::-;;;3583:3;;;;;:::i;:::-;;;;3552:83;;;;3673:3;3644:19;:25;3664:4;3644:25;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;3693:8;:14;3702:4;3693:14;;;;;;;;;;;;;;;;3686:21;;;;:::i;:::-;3735:4;3722:52;;;3741:19;:25;3761:4;3741:25;;;;;;;;;;;;;;;;3768:5;3722:52;;;;;;;:::i;:::-;;;;;;;;3342:439;;;3297:484;:::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;7686:720::-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:10:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:329::-;2295:6;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2236:329;;;;:::o;2571:114::-;2638:6;2672:5;2666:12;2656:22;;2571:114;;;:::o;2691:184::-;2790:11;2824:6;2819:3;2812:19;2864:4;2859:3;2855:14;2840:29;;2691:184;;;;:::o;2881:132::-;2948:4;2971:3;2963:11;;3001:4;2996:3;2992:14;2984:22;;2881:132;;;:::o;3019:108::-;3096:24;3114:5;3096:24;:::i;:::-;3091:3;3084:37;3019:108;;:::o;3133:179::-;3202:10;3223:46;3265:3;3257:6;3223:46;:::i;:::-;3301:4;3296:3;3292:14;3278:28;;3133:179;;;;:::o;3318:113::-;3388:4;3420;3415:3;3411:14;3403:22;;3318:113;;;:::o;3467:732::-;3586:3;3615:54;3663:5;3615:54;:::i;:::-;3685:86;3764:6;3759:3;3685:86;:::i;:::-;3678:93;;3795:56;3845:5;3795:56;:::i;:::-;3874:7;3905:1;3890:284;3915:6;3912:1;3909:13;3890:284;;;3991:6;3985:13;4018:63;4077:3;4062:13;4018:63;:::i;:::-;4011:70;;4104:60;4157:6;4104:60;:::i;:::-;4094:70;;3950:224;3937:1;3934;3930:9;3925:14;;3890:284;;;3894:14;4190:3;4183:10;;3591:608;;;3467:732;;;;:::o;4205:373::-;4348:4;4386:2;4375:9;4371:18;4363:26;;4435:9;4429:4;4425:20;4421:1;4410:9;4406:17;4399:47;4463:108;4566:4;4557:6;4463:108;:::i;:::-;4455:116;;4205:373;;;;:::o;4584:60::-;4612:3;4633:5;4626:12;;4584:60;;;:::o;4650:142::-;4700:9;4733:53;4751:34;4760:24;4778:5;4760:24;:::i;:::-;4751:34;:::i;:::-;4733:53;:::i;:::-;4720:66;;4650:142;;;:::o;4798:126::-;4848:9;4881:37;4912:5;4881:37;:::i;:::-;4868:50;;4798:126;;;:::o;4930:140::-;4994:9;5027:37;5058:5;5027:37;:::i;:::-;5014:50;;4930:140;;;:::o;5076:159::-;5177:51;5222:5;5177:51;:::i;:::-;5172:3;5165:64;5076:159;;:::o;5241:250::-;5348:4;5386:2;5375:9;5371:18;5363:26;;5399:85;5481:1;5470:9;5466:17;5457:6;5399:85;:::i;:::-;5241:250;;;;:::o;5497:169::-;5581:11;5615:6;5610:3;5603:19;5655:4;5650:3;5646:14;5631:29;;5497:169;;;;:::o;5672:168::-;5812:20;5808:1;5800:6;5796:14;5789:44;5672:168;:::o;5846:366::-;5988:3;6009:67;6073:2;6068:3;6009:67;:::i;:::-;6002:74;;6085:93;6174:3;6085:93;:::i;:::-;6203:2;6198:3;6194:12;6187:19;;5846:366;;;:::o;6218:419::-;6384:4;6422:2;6411:9;6407:18;6399:26;;6471:9;6465:4;6461:20;6457:1;6446:9;6442:17;6435:47;6499:131;6625:4;6499:131;:::i;:::-;6491:139;;6218:419;;;:::o;6643:220::-;6783:34;6779:1;6771:6;6767:14;6760:58;6852:3;6847:2;6839:6;6835:15;6828:28;6643:220;:::o;6869:366::-;7011:3;7032:67;7096:2;7091:3;7032:67;:::i;:::-;7025:74;;7108:93;7197:3;7108:93;:::i;:::-;7226:2;7221:3;7217:12;7210:19;;6869:366;;;:::o;7241:419::-;7407:4;7445:2;7434:9;7430:18;7422:26;;7494:9;7488:4;7484:20;7480:1;7469:9;7465:17;7458:47;7522:131;7648:4;7522:131;:::i;:::-;7514:139;;7241:419;;;:::o;7666:180::-;7714:77;7711:1;7704:88;7811:4;7808:1;7801:15;7835:4;7832:1;7825:15;7852:194;7892:4;7912:20;7930:1;7912:20;:::i;:::-;7907:25;;7946:20;7964:1;7946:20;:::i;:::-;7941:25;;7990:1;7987;7983:9;7975:17;;8014:1;8008:4;8005:11;8002:37;;;8019:18;;:::i;:::-;8002:37;7852:194;;;;:::o;8052:181::-;8192:33;8188:1;8180:6;8176:14;8169:57;8052:181;:::o;8239:366::-;8381:3;8402:67;8466:2;8461:3;8402:67;:::i;:::-;8395:74;;8478:93;8567:3;8478:93;:::i;:::-;8596:2;8591:3;8587:12;8580:19;;8239:366;;;:::o;8611:419::-;8777:4;8815:2;8804:9;8800:18;8792:26;;8864:9;8858:4;8854:20;8850:1;8839:9;8835:17;8828:47;8892:131;9018:4;8892:131;:::i;:::-;8884:139;;8611:419;;;:::o;9036:332::-;9157:4;9195:2;9184:9;9180:18;9172:26;;9208:71;9276:1;9265:9;9261:17;9252:6;9208:71;:::i;:::-;9289:72;9357:2;9346:9;9342:18;9333:6;9289:72;:::i;:::-;9036:332;;;;;:::o;9374:176::-;9514:28;9510:1;9502:6;9498:14;9491:52;9374:176;:::o;9556:366::-;9698:3;9719:67;9783:2;9778:3;9719:67;:::i;:::-;9712:74;;9795:93;9884:3;9795:93;:::i;:::-;9913:2;9908:3;9904:12;9897:19;;9556:366;;;:::o;9928:419::-;10094:4;10132:2;10121:9;10117:18;10109:26;;10181:9;10175:4;10171:20;10167:1;10156:9;10152:17;10145:47;10209:131;10335:4;10209:131;:::i;:::-;10201:139;;9928:419;;;:::o;10353:180::-;10401:77;10398:1;10391:88;10498:4;10495:1;10488:15;10522:4;10519:1;10512:15;10539:191;10579:3;10598:20;10616:1;10598:20;:::i;:::-;10593:25;;10632:20;10650:1;10632:20;:::i;:::-;10627:25;;10675:1;10672;10668:9;10661:16;;10696:3;10693:1;10690:10;10687:36;;;10703:18;;:::i;:::-;10687:36;10539:191;;;;:::o;10736:233::-;10775:3;10798:24;10816:5;10798:24;:::i;:::-;10789:33;;10844:66;10837:5;10834:77;10831:103;;10914:18;;:::i;:::-;10831:103;10961:1;10954:5;10950:13;10943:20;;10736:233;;;:::o;10975:332::-;11096:4;11134:2;11123:9;11119:18;11111:26;;11147:71;11215:1;11204:9;11200:17;11191:6;11147:71;:::i;:::-;11228:72;11296:2;11285:9;11281:18;11272:6;11228:72;:::i;:::-;10975:332;;;;;:::o;11313:442::-;11462:4;11500:2;11489:9;11485:18;11477:26;;11513:71;11581:1;11570:9;11566:17;11557:6;11513:71;:::i;:::-;11594:72;11662:2;11651:9;11647:18;11638:6;11594:72;:::i;:::-;11676;11744:2;11733:9;11729:18;11720:6;11676:72;:::i;:::-;11313:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "991600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"consolidate()": "infinite",
								"consolidatedBalance(address)": "2802",
								"consolidationThreshold()": "2470",
								"deposit(uint256)": "infinite",
								"getDepositFragmentCount(address)": "2903",
								"getDepositFragments(address)": "infinite",
								"owner()": "2626",
								"renounceOwnership()": "infinite",
								"token()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateConsolidationThreshold(uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_consolidate(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 641,
									"end": 4880,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1713,
									"end": 1955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1782,
									"end": 1792,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1830,
									"end": 1831,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1812,
									"end": 1832,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1812,
									"end": 1832,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1812,
									"end": 1818,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1812,
									"end": 1832,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1812,
									"end": 1832,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1804,
									"end": 1858,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1804,
									"end": 1858,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1883,
									"end": 1889,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1868,
									"end": 1890,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1868,
									"end": 1890,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1868,
									"end": 1890,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1868,
									"end": 1890,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1868,
									"end": 1890,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1868,
									"end": 1890,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1868,
									"end": 1890,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1868,
									"end": 1890,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1868,
									"end": 1890,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1868,
									"end": 1890,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1925,
									"end": 1948,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1900,
									"end": 1922,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1900,
									"end": 1948,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1900,
									"end": 1948,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1900,
									"end": 1948,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1900,
									"end": 1948,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1713,
									"end": 1955,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1823,
									"end": 1828,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1805,
									"end": 1829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1803,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1793,
									"end": 1830,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1718,
									"end": 1836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1935,
									"end": 1939,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1973,
									"end": 1975,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1962,
									"end": 1971,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 1976,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1950,
									"end": 1976,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1950,
									"end": 1976,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2043,
									"end": 2052,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2039,
									"end": 2056,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2030,
									"end": 2036,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1986,
									"end": 2057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 2064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2154,
									"end": 2165,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2188,
									"end": 2194,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2183,
									"end": 2186,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2176,
									"end": 2195,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2228,
									"end": 2232,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2223,
									"end": 2226,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2219,
									"end": 2233,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2204,
									"end": 2233,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2204,
									"end": 2233,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2070,
									"end": 2239,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2245,
									"end": 2416,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2245,
									"end": 2416,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2385,
									"end": 2408,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 2381,
									"end": 2382,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2373,
									"end": 2379,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2369,
									"end": 2383,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2362,
									"end": 2409,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2245,
									"end": 2416,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2245,
									"end": 2416,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2422,
									"end": 2788,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 2422,
									"end": 2788,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2564,
									"end": 2567,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2585,
									"end": 2652,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2649,
									"end": 2651,
									"name": "PUSH",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2644,
									"end": 2647,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2585,
									"end": 2652,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2585,
									"end": 2652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2585,
									"end": 2652,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2585,
									"end": 2652,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2578,
									"end": 2652,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2578,
									"end": 2652,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2661,
									"end": 2754,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2750,
									"end": 2753,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2661,
									"end": 2754,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2661,
									"end": 2754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2661,
									"end": 2754,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2661,
									"end": 2754,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2779,
									"end": 2781,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2774,
									"end": 2777,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2770,
									"end": 2782,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2763,
									"end": 2782,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2763,
									"end": 2782,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2422,
									"end": 2788,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2422,
									"end": 2788,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2422,
									"end": 2788,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2422,
									"end": 2788,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2794,
									"end": 3213,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2794,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2960,
									"end": 2964,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2998,
									"end": 3000,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2987,
									"end": 2996,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2975,
									"end": 3001,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2975,
									"end": 3001,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3047,
									"end": 3056,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3041,
									"end": 3045,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3037,
									"end": 3057,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3033,
									"end": 3034,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3022,
									"end": 3031,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3018,
									"end": 3035,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3011,
									"end": 3058,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3075,
									"end": 3206,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 3201,
									"end": 3205,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3075,
									"end": 3206,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 3075,
									"end": 3206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3075,
									"end": 3206,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 3075,
									"end": 3206,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3067,
									"end": 3206,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3067,
									"end": 3206,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2794,
									"end": 3213,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2794,
									"end": 3213,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2794,
									"end": 3213,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2794,
									"end": 3213,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "849"
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 641,
									"end": 4880,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207dc12a7961d0dee6532c83ceb8b815cc27880a46152da484468071628cb63d0364736f6c63430008140033",
									".code": [
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "AEF373C3"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "AEF373C3"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "B3DBA8DA"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "B6B55F25"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "BFC64292"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "FC0C546A"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "2E1A7D4D"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "43BA6BE5"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "6B018114"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "724F024B"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 641,
											"end": 4880,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 3907,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 3907,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 2094,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2094,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1105,
											"end": 1142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1105,
											"end": 1142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3085,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2999,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2999,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 2999,
											"end": 3085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3085,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2999,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3085,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 977,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 977,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 977,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 4756,
											"end": 4878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 4756,
											"end": 4878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4756,
											"end": 4878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 2419,
											"end": 2899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2419,
											"end": 2899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 4437,
											"end": 4561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 4437,
											"end": 4561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4437,
											"end": 4561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 781,
											"end": 810,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 781,
											"end": 810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 781,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 781,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 781,
											"end": 810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 781,
											"end": 810,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 781,
											"end": 810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 781,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 810,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 781,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 781,
											"end": 810,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 781,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 781,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 781,
											"end": 810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 781,
											"end": 810,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 781,
											"end": 810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 781,
											"end": 810,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 810,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 781,
											"end": 810,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 781,
											"end": 810,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 781,
											"end": 810,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 781,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 781,
											"end": 810,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 3991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 3987,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3991,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 3973,
											"end": 4014,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3973,
											"end": 4014,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4073,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4052,
											"end": 4062,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4063,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4024,
											"end": 4111,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4024,
											"end": 4111,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4156,
											"end": 4162,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4151,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4121,
											"end": 4162,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4162,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 4191,
											"end": 4201,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4209,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4177,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "849"
										},
										{
											"begin": 4172,
											"end": 4190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4172,
											"end": 4190,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 4172,
											"end": 4190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4210,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4210,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4172,
											"end": 4210,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4210,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4172,
											"end": 4210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 4172,
											"end": 4210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4245,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 4247,
											"end": 4253,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4225,
											"end": 4254,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4225,
											"end": 4254,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3907,
											"end": 4261,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2208,
											"end": 2220,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2183,
											"end": 2220,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2220,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2220,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2220,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B6C39172F87FD26C15439100462296233A2021D7140AB8E2E3FEEC9976BEC723"
										},
										{
											"begin": 2265,
											"end": 2277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2235,
											"end": 2278,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2235,
											"end": 2278,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3085,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 2999,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3078,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 3067,
											"end": 3077,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 3054,
											"end": 3078,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3078,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 3054,
											"end": 3078,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2999,
											"end": 3085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4838,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4857,
											"end": 4865,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 4870,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4871,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4850,
											"end": 4871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2502,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2484,
											"end": 2525,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2484,
											"end": 2525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 2558,
											"end": 2568,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2582,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2585,
											"end": 2591,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "849"
										},
										{
											"begin": 2535,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2535,
											"end": 2557,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 2535,
											"end": 2557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2535,
											"end": 2592,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2592,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2592,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 2535,
											"end": 2592,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 2621,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2622,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 2634,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2670,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4"
										},
										{
											"begin": 2672,
											"end": 2678,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2650,
											"end": 2679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2679,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2820,
											"end": 2842,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2808,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2816,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2816,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2816,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2816,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2842,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2785,
											"end": 2893,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2858,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 2871,
											"end": 2881,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2858,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2858,
											"end": 2882,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2858,
											"end": 2882,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 2858,
											"end": 2882,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2785,
											"end": 2893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4507,
											"end": 4514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4541,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4542,
											"end": 4546,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4547,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 781,
											"end": 810,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 781,
											"end": 810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 781,
											"end": 810,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "849"
										},
										{
											"begin": 781,
											"end": 810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 781,
											"end": 810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3297,
											"end": 3781,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 3297,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3393,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3399,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3440,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3409,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3409,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3482,
											"end": 3493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3566,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3635,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3552,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3576,
											"end": 3581,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3572,
											"end": 3573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3635,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3552,
											"end": 3635,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3621,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3622,
											"end": 3623,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3609,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3624,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3602,
											"end": 3624,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3624,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 3602,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3624,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3602,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3624,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3583,
											"end": 3586,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3583,
											"end": 3586,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3583,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3583,
											"end": 3586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3583,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3583,
											"end": 3586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3583,
											"end": 3586,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3583,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3583,
											"end": 3586,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3583,
											"end": 3586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3583,
											"end": 3586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3552,
											"end": 3635,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3635,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3552,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3673,
											"end": 3676,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3663,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3668,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 3644,
											"end": 3676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3701,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3702,
											"end": 3706,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3686,
											"end": 3707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3735,
											"end": 3739,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "PUSH",
											"source": 9,
											"value": "CC5CF0DC864A84AD6423DD5608ABD129B84CAA27094CC7E97113E5EB0B368040"
										},
										{
											"begin": 3741,
											"end": 3760,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3761,
											"end": 3765,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3741,
											"end": 3766,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 3773,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3722,
											"end": 3774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3774,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3297,
											"end": 3781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3297,
											"end": 3781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "150"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "165"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "166"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "165"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "166"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "167"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "168"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "167"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "168"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 2036,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2034,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2061,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2218,
											"end": 2223,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 2191,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2342,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 2350,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 2495,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2441,
											"end": 2558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2685,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 2571,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2638,
											"end": 2644,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2666,
											"end": 2678,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2685,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2875,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 2691,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2819,
											"end": 2822,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2812,
											"end": 2831,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2864,
											"end": 2868,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2859,
											"end": 2862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2855,
											"end": 2869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2875,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2875,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2875,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2875,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 3013,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 2881,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2948,
											"end": 2952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 2974,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 2974,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 2974,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3001,
											"end": 3005,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2996,
											"end": 2999,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2992,
											"end": 3006,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 3006,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 3006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 3013,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 3013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3127,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 3019,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 3114,
											"end": 3119,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 3096,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3120,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 3096,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3091,
											"end": 3094,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3121,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3312,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 3133,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 3265,
											"end": 3268,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 3223,
											"end": 3269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3269,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 3223,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3305,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3278,
											"end": 3306,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3278,
											"end": 3306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3312,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3312,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3431,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 3318,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3388,
											"end": 3392,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 3424,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3415,
											"end": 3418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3411,
											"end": 3425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3403,
											"end": 3425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3403,
											"end": 3425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3431,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 4199,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 3467,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3586,
											"end": 3589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 3663,
											"end": 3668,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3615,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3615,
											"end": 3669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3615,
											"end": 3669,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 3615,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3685,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 3764,
											"end": 3770,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 3762,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3685,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3685,
											"end": 3771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3685,
											"end": 3771,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 3685,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3771,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3795,
											"end": 3851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3851,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3795,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3874,
											"end": 3881,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 3906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 4174,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 3890,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3921,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 3913,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 3922,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3890,
											"end": 4174,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3890,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 3890,
											"end": 4174,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3991,
											"end": 3997,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3985,
											"end": 3998,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 4077,
											"end": 4080,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4062,
											"end": 4075,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4018,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4081,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 4018,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4011,
											"end": 4081,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 4011,
											"end": 4081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4104,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 4157,
											"end": 4163,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4104,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4104,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4104,
											"end": 4164,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 4104,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4094,
											"end": 4164,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4094,
											"end": 4164,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 4174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 3938,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 3939,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3939,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3939,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3890,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 3890,
											"end": 4174,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3890,
											"end": 4174,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 3890,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3894,
											"end": 3908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4193,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4193,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3591,
											"end": 4199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3591,
											"end": 4199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3591,
											"end": 4199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 4199,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 4199,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 4199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 4199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 4199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4205,
											"end": 4578,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4205,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4348,
											"end": 4352,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4386,
											"end": 4388,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4375,
											"end": 4384,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4371,
											"end": 4389,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4363,
											"end": 4389,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4363,
											"end": 4389,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4444,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4429,
											"end": 4433,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4425,
											"end": 4445,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4422,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4410,
											"end": 4419,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4406,
											"end": 4423,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4399,
											"end": 4446,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 4566,
											"end": 4570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4557,
											"end": 4563,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4463,
											"end": 4571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4463,
											"end": 4571,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 4463,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4571,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4571,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4205,
											"end": 4578,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4205,
											"end": 4578,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4205,
											"end": 4578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4205,
											"end": 4578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4205,
											"end": 4578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4644,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 4584,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4615,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4633,
											"end": 4638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 4638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 4638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4650,
											"end": 4792,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 4650,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4709,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4733,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 4751,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 4760,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 4778,
											"end": 4783,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4760,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4760,
											"end": 4784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4760,
											"end": 4784,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 4760,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 4751,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4785,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 4751,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4733,
											"end": 4786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4786,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 4733,
											"end": 4786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4720,
											"end": 4786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4720,
											"end": 4786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4650,
											"end": 4792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4650,
											"end": 4792,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4650,
											"end": 4792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4650,
											"end": 4792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4924,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 4798,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4848,
											"end": 4857,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 4912,
											"end": 4917,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 4881,
											"end": 4918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 4918,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 4881,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4868,
											"end": 4918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4868,
											"end": 4918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4924,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4930,
											"end": 5070,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 4930,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 5003,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5027,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 5058,
											"end": 5063,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 5027,
											"end": 5064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5064,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 5027,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5064,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4930,
											"end": 5070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4930,
											"end": 5070,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4930,
											"end": 5070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4930,
											"end": 5070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5235,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 5076,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 5222,
											"end": 5227,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 5177,
											"end": 5228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5228,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 5177,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5172,
											"end": 5175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5229,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5491,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 5241,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5348,
											"end": 5352,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5386,
											"end": 5388,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5375,
											"end": 5384,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 5389,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5363,
											"end": 5389,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5363,
											"end": 5389,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5481,
											"end": 5482,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5479,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5466,
											"end": 5483,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5457,
											"end": 5463,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 5399,
											"end": 5484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5399,
											"end": 5484,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5399,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5491,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5491,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5666,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 5497,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5581,
											"end": 5592,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5603,
											"end": 5622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5655,
											"end": 5659,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5650,
											"end": 5653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5646,
											"end": 5660,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5666,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5666,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 5672,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5812,
											"end": 5832,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E74206D757374206265203E20300000000000000000000000000000"
										},
										{
											"begin": 5808,
											"end": 5809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5800,
											"end": 5806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5796,
											"end": 5810,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5789,
											"end": 5833,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5846,
											"end": 6212,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 5846,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5988,
											"end": 5991,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6009,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 6073,
											"end": 6075,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6068,
											"end": 6071,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6009,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 6009,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6009,
											"end": 6076,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 6009,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6002,
											"end": 6076,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6002,
											"end": 6076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6085,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 6174,
											"end": 6177,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6085,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 6085,
											"end": 6178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6085,
											"end": 6178,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 6085,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6205,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6198,
											"end": 6201,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6194,
											"end": 6206,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6206,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5846,
											"end": 6212,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5846,
											"end": 6212,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5846,
											"end": 6212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5846,
											"end": 6212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6218,
											"end": 6637,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 6218,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6422,
											"end": 6424,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6407,
											"end": 6425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6399,
											"end": 6425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6399,
											"end": 6425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6471,
											"end": 6480,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6465,
											"end": 6469,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6461,
											"end": 6481,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6457,
											"end": 6458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6446,
											"end": 6455,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6442,
											"end": 6459,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6435,
											"end": 6482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 6625,
											"end": 6629,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 6499,
											"end": 6630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6630,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 6499,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6218,
											"end": 6637,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6218,
											"end": 6637,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6218,
											"end": 6637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6218,
											"end": 6637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6643,
											"end": 6863,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 6643,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6783,
											"end": 6817,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E7420636F6E736F6C6964617465642062616C616E63"
										},
										{
											"begin": 6779,
											"end": 6780,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6771,
											"end": 6777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6767,
											"end": 6781,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6852,
											"end": 6855,
											"name": "PUSH",
											"source": 10,
											"value": "6500000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6847,
											"end": 6849,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6839,
											"end": 6845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 6856,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6643,
											"end": 6863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6643,
											"end": 6863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6869,
											"end": 7235,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 6869,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7011,
											"end": 7014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 7096,
											"end": 7098,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 7091,
											"end": 7094,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7032,
											"end": 7099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 7032,
											"end": 7099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7032,
											"end": 7099,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 7032,
											"end": 7099,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7025,
											"end": 7099,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7025,
											"end": 7099,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7108,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7108,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 7108,
											"end": 7201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7108,
											"end": 7201,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 7108,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7226,
											"end": 7228,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7221,
											"end": 7224,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7217,
											"end": 7229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7210,
											"end": 7229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7210,
											"end": 7229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6869,
											"end": 7235,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6869,
											"end": 7235,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6869,
											"end": 7235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6869,
											"end": 7235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7241,
											"end": 7660,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 7241,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7407,
											"end": 7411,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7445,
											"end": 7447,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7434,
											"end": 7443,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7430,
											"end": 7448,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7494,
											"end": 7503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7488,
											"end": 7492,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7484,
											"end": 7504,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7480,
											"end": 7481,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7478,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7465,
											"end": 7482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7458,
											"end": 7505,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 7648,
											"end": 7652,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 7522,
											"end": 7653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7653,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 7522,
											"end": 7653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7514,
											"end": 7653,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7514,
											"end": 7653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7241,
											"end": 7660,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7241,
											"end": 7660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7241,
											"end": 7660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7241,
											"end": 7660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7666,
											"end": 7846,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 7666,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7714,
											"end": 7791,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7711,
											"end": 7712,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7792,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7811,
											"end": 7815,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7808,
											"end": 7809,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7801,
											"end": 7816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7835,
											"end": 7839,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7832,
											"end": 7833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7825,
											"end": 7840,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 8046,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 7852,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7892,
											"end": 7896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7930,
											"end": 7931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7912,
											"end": 7932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 7912,
											"end": 7932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7912,
											"end": 7932,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7912,
											"end": 7932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7907,
											"end": 7932,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7907,
											"end": 7932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7946,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7964,
											"end": 7965,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7946,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 7946,
											"end": 7966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7946,
											"end": 7966,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7946,
											"end": 7966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7941,
											"end": 7966,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7941,
											"end": 7966,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7990,
											"end": 7991,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7987,
											"end": 7988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 7992,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7975,
											"end": 7992,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7975,
											"end": 7992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8014,
											"end": 8015,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8008,
											"end": 8012,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8016,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8039,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 8002,
											"end": 8039,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8019,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 8019,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 8019,
											"end": 8037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8019,
											"end": 8037,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 8019,
											"end": 8037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8039,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 8002,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 8046,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 8046,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 8046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 8046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 8046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8052,
											"end": 8233,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 8052,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8192,
											"end": 8225,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 8188,
											"end": 8189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8180,
											"end": 8186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8176,
											"end": 8190,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8169,
											"end": 8226,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8052,
											"end": 8233,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8052,
											"end": 8233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8239,
											"end": 8605,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 8239,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8381,
											"end": 8384,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8402,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 8466,
											"end": 8468,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8461,
											"end": 8464,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 8402,
											"end": 8469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8469,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 8402,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8395,
											"end": 8469,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8395,
											"end": 8469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 8567,
											"end": 8570,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 8478,
											"end": 8571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8571,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 8478,
											"end": 8571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8596,
											"end": 8598,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8591,
											"end": 8594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8587,
											"end": 8599,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8580,
											"end": 8599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8580,
											"end": 8599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8239,
											"end": 8605,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8239,
											"end": 8605,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8239,
											"end": 8605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8239,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8611,
											"end": 9030,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 8611,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8777,
											"end": 8781,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8815,
											"end": 8817,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8804,
											"end": 8813,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8800,
											"end": 8818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8792,
											"end": 8818,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8792,
											"end": 8818,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8864,
											"end": 8873,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8858,
											"end": 8862,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8854,
											"end": 8874,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8850,
											"end": 8851,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8848,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8835,
											"end": 8852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8828,
											"end": 8875,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 9018,
											"end": 9022,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 8892,
											"end": 9023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 9023,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 8892,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8884,
											"end": 9023,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8884,
											"end": 9023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8611,
											"end": 9030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8611,
											"end": 9030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8611,
											"end": 9030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8611,
											"end": 9030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9368,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 9036,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9157,
											"end": 9161,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9195,
											"end": 9197,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9184,
											"end": 9193,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9180,
											"end": 9198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9172,
											"end": 9198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9172,
											"end": 9198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9208,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 9276,
											"end": 9277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9265,
											"end": 9274,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9261,
											"end": 9278,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9252,
											"end": 9258,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9208,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 9208,
											"end": 9279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9208,
											"end": 9279,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 9208,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9289,
											"end": 9361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 9357,
											"end": 9359,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9346,
											"end": 9355,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9333,
											"end": 9339,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9289,
											"end": 9361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 9289,
											"end": 9361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9289,
											"end": 9361,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 9289,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9368,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9368,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9374,
											"end": 9550,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 9374,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9514,
											"end": 9542,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F206465706F7369747320746F20636F6E736F6C6964617465000000000000"
										},
										{
											"begin": 9510,
											"end": 9511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9502,
											"end": 9508,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9512,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9491,
											"end": 9543,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9374,
											"end": 9550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9374,
											"end": 9550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9556,
											"end": 9922,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 9556,
											"end": 9922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9698,
											"end": 9701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9719,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 9783,
											"end": 9785,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 9778,
											"end": 9781,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9719,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 9719,
											"end": 9786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9719,
											"end": 9786,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 9719,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9712,
											"end": 9786,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9712,
											"end": 9786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9795,
											"end": 9888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 9884,
											"end": 9887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9795,
											"end": 9888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 9795,
											"end": 9888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9795,
											"end": 9888,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 9795,
											"end": 9888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9913,
											"end": 9915,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9908,
											"end": 9911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9904,
											"end": 9916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9897,
											"end": 9916,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9897,
											"end": 9916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9556,
											"end": 9922,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9556,
											"end": 9922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9556,
											"end": 9922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9556,
											"end": 9922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9928,
											"end": 10347,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 9928,
											"end": 10347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10094,
											"end": 10098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10132,
											"end": 10134,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10121,
											"end": 10130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10117,
											"end": 10135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10109,
											"end": 10135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10109,
											"end": 10135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10181,
											"end": 10190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10175,
											"end": 10179,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10171,
											"end": 10191,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10156,
											"end": 10165,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10152,
											"end": 10169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10145,
											"end": 10192,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10209,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 10335,
											"end": 10339,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10209,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 10209,
											"end": 10340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10209,
											"end": 10340,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 10209,
											"end": 10340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10201,
											"end": 10340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10201,
											"end": 10340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9928,
											"end": 10347,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9928,
											"end": 10347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9928,
											"end": 10347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9928,
											"end": 10347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10353,
											"end": 10533,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 10353,
											"end": 10533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10401,
											"end": 10478,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10398,
											"end": 10399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10391,
											"end": 10479,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10498,
											"end": 10502,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 10495,
											"end": 10496,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10488,
											"end": 10503,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10522,
											"end": 10526,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10519,
											"end": 10520,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10512,
											"end": 10527,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10539,
											"end": 10730,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 10539,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10579,
											"end": 10582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10598,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 10616,
											"end": 10617,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10598,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 10598,
											"end": 10618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10598,
											"end": 10618,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 10598,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10593,
											"end": 10618,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10593,
											"end": 10618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 10650,
											"end": 10651,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 10632,
											"end": 10652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10652,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 10632,
											"end": 10652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10627,
											"end": 10652,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10627,
											"end": 10652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10675,
											"end": 10676,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10673,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10668,
											"end": 10677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10661,
											"end": 10677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10696,
											"end": 10699,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10693,
											"end": 10694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10690,
											"end": 10700,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10687,
											"end": 10723,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10687,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 10687,
											"end": 10723,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 10721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 10703,
											"end": 10721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 10703,
											"end": 10721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 10721,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 10703,
											"end": 10721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10687,
											"end": 10723,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 10687,
											"end": 10723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10539,
											"end": 10730,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10539,
											"end": 10730,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10539,
											"end": 10730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10539,
											"end": 10730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10539,
											"end": 10730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10736,
											"end": 10969,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 10736,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10775,
											"end": 10778,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10798,
											"end": 10822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 10816,
											"end": 10821,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 10822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 10798,
											"end": 10822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10798,
											"end": 10822,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 10798,
											"end": 10822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10789,
											"end": 10822,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10789,
											"end": 10822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10844,
											"end": 10910,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10837,
											"end": 10842,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10834,
											"end": 10911,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10831,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 10831,
											"end": 10934,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 10914,
											"end": 10932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 10914,
											"end": 10932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 10932,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 10914,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10831,
											"end": 10934,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 10831,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10961,
											"end": 10962,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10954,
											"end": 10959,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10950,
											"end": 10963,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 10963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 10963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10736,
											"end": 10969,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10736,
											"end": 10969,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10736,
											"end": 10969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10736,
											"end": 10969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10975,
											"end": 11307,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 10975,
											"end": 11307,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11096,
											"end": 11100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11134,
											"end": 11136,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11123,
											"end": 11132,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11119,
											"end": 11137,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11111,
											"end": 11137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11111,
											"end": 11137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11147,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 11215,
											"end": 11216,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11204,
											"end": 11213,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11200,
											"end": 11217,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11191,
											"end": 11197,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11147,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 11147,
											"end": 11218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11147,
											"end": 11218,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 11147,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11228,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 11296,
											"end": 11298,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11285,
											"end": 11294,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11272,
											"end": 11278,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11228,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 11228,
											"end": 11300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11228,
											"end": 11300,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 11228,
											"end": 11300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10975,
											"end": 11307,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10975,
											"end": 11307,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10975,
											"end": 11307,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10975,
											"end": 11307,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10975,
											"end": 11307,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10975,
											"end": 11307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11313,
											"end": 11755,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 11313,
											"end": 11755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11462,
											"end": 11466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11500,
											"end": 11502,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11489,
											"end": 11498,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11485,
											"end": 11503,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11477,
											"end": 11503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11477,
											"end": 11503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11513,
											"end": 11584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 11581,
											"end": 11582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11570,
											"end": 11579,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11566,
											"end": 11583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11557,
											"end": 11563,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11513,
											"end": 11584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 11513,
											"end": 11584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11513,
											"end": 11584,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 11513,
											"end": 11584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11594,
											"end": 11666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 11662,
											"end": 11664,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11651,
											"end": 11660,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11638,
											"end": 11644,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11594,
											"end": 11666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 11594,
											"end": 11666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11594,
											"end": 11666,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 11594,
											"end": 11666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11676,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 11744,
											"end": 11746,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11733,
											"end": 11742,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11720,
											"end": 11726,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11676,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 11676,
											"end": 11748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11676,
											"end": 11748,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 11676,
											"end": 11748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11313,
											"end": 11755,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 11313,
											"end": 11755,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11313,
											"end": 11755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11313,
											"end": 11755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11313,
											"end": 11755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11313,
											"end": 11755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11313,
											"end": 11755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"C/consolidation.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"consolidate()": "724f024b",
							"consolidatedBalance(address)": "aef373c3",
							"consolidationThreshold()": "6b018114",
							"deposit(uint256)": "b6b55f25",
							"getDepositFragmentCount(address)": "bfc64292",
							"getDepositFragments(address)": "b3dba8da",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b",
							"updateConsolidationThreshold(uint256)": "43ba6be5",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_consolidationThreshold\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"consolidatedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fragmentsConsolidated\",\"type\":\"uint256\"}],\"name\":\"Consolidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\"}],\"name\":\"ConsolidationThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"consolidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"consolidatedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consolidationThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getDepositFragmentCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getDepositFragments\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\"}],\"name\":\"updateConsolidationThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_consolidationThreshold\":\"The number of deposit fragments triggering auto-consolidation.\",\"_token\":\"The address of the ERC20 token.\"}},\"deposit(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to deposit.\"}},\"getDepositFragmentCount(address)\":{\"params\":{\"user\":\"The address of the user.\"},\"returns\":{\"_0\":\"The count of deposit fragments.\"}},\"getDepositFragments(address)\":{\"params\":{\"user\":\"The address of the user.\"},\"returns\":{\"_0\":\"An array containing the individual deposit fragment amounts.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateConsolidationThreshold(uint256)\":{\"params\":{\"newThreshold\":\"The new consolidation threshold.\"}},\"withdraw(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to withdraw.\"}}},\"title\":\"Consolidation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"consolidate()\":{\"notice\":\"Manually consolidate your fragmented deposits into your consolidated balance.\"},\"constructor\":{\"notice\":\"Constructor sets the token to consolidate and the initial consolidation threshold.\"},\"deposit(uint256)\":{\"notice\":\"Deposit tokens into the contract as fragmented deposits.\"},\"getDepositFragmentCount(address)\":{\"notice\":\"Returns the number of fragmented deposit records for a user.\"},\"getDepositFragments(address)\":{\"notice\":\"Returns the fragmented deposit amounts for a user.\"},\"updateConsolidationThreshold(uint256)\":{\"notice\":\"Allows the owner to update the consolidation threshold.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw tokens from your consolidated balance.\"}},\"notice\":\"This contract allows users to deposit tokens in fragmented amounts and later consolidate those deposits into a single balance. This process minimizes storage overhead and gas costs for future operations. The contract is dynamic (with an adjustable consolidation threshold), optimized, and secure.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"C/consolidation.sol\":\"Consolidation\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"C/consolidation.sol\":{\"keccak256\":\"0x0f4e9e312f554b786edf99ee10940b0e9fc518b51a1e2ad91ac30d54cbbb01b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821f2646345cfef3ecb86e33e90cbc789b4e0a5a11a53c242dc648d14c97e905\",\"dweb:/ipfs/QmZextCpj59NNFgt4cCH6iDtyAWCHiNCECQmASHTQgNX5d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "C/consolidation.sol:Consolidation",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "C/consolidation.sol:Consolidation",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 854,
								"contract": "C/consolidation.sol:Consolidation",
								"label": "deposits",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 858,
								"contract": "C/consolidation.sol:Consolidation",
								"label": "consolidatedBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 860,
								"contract": "C/consolidation.sol:Consolidation",
								"label": "consolidationThreshold",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"consolidate()": {
								"notice": "Manually consolidate your fragmented deposits into your consolidated balance."
							},
							"constructor": {
								"notice": "Constructor sets the token to consolidate and the initial consolidation threshold."
							},
							"deposit(uint256)": {
								"notice": "Deposit tokens into the contract as fragmented deposits."
							},
							"getDepositFragmentCount(address)": {
								"notice": "Returns the number of fragmented deposit records for a user."
							},
							"getDepositFragments(address)": {
								"notice": "Returns the fragmented deposit amounts for a user."
							},
							"updateConsolidationThreshold(uint256)": {
								"notice": "Allows the owner to update the consolidation threshold."
							},
							"withdraw(uint256)": {
								"notice": "Withdraw tokens from your consolidated balance."
							}
						},
						"notice": "This contract allows users to deposit tokens in fragmented amounts and later consolidate those deposits into a single balance. This process minimizes storage overhead and gas costs for future operations. The contract is dynamic (with an adjustable consolidation threshold), optimized, and secure.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							819
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 820,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 819,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 819,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								819
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 801,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							831
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 831,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								831,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							831
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 832,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							789
						]
					},
					"id": 790,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 790,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 790,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 789,
							"linearizedBaseContracts": [
								789
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 789,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 789,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "2548:139:6",
										"statements": [
											{
												"assignments": [
													464
												],
												"declarations": [
													{
														"constant": false,
														"id": 464,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "2558:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 463,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 469,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$789",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$789",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2612:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2581:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "2581:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 475,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2643:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 476,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2650:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 477,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "2659:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 478,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2674:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 474,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "2630:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2493:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2493:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2493:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2507:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2524:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:6"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:6"
									},
									"scope": 789,
									"src": "2462:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "3453:370:6",
										"statements": [
											{
												"id": 524,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:6",
												"statements": [
													{
														"assignments": [
															495
														],
														"declarations": [
															{
																"constant": false,
																"id": 495,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 524,
																"src": "3487:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 504,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 500,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$789",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$789",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 498,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 502,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3545:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 496,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3514:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "3514:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 505,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "3571:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 506,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "3590:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 515,
														"nodeType": "IfStatement",
														"src": "3567:160:6",
														"trueBody": {
															"id": 514,
															"nodeType": "Block",
															"src": "3609:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 509,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 489,
																				"src": "3667:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 510,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "3676:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 511,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "3694:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 508,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "3634:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 513,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 517,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3753:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 518,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3760:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 519,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "3769:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 520,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "3788:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 516,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "3740:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 523,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3386:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 485,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3386:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3386:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3400:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3417:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:6"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:6"
									},
									"scope": 789,
									"src": "3355:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "4477:303:6",
										"statements": [
											{
												"assignments": [
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "4487:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 537,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 541,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "4530:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "4530:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 543,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "4546:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 544,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4555:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 545,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 539,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:6"
											},
											{
												"condition": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 549,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "4602:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 550,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "4609:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 548,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "4578:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "4573:201:6",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "4624:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 554,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "4658:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 557,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "4680:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "4680:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 559,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 532,
																						"src": "4696:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 555,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 553,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4638:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 564,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 566,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "4743:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 567,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "4750:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 565,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4723:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 569,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4422:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 529,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 528,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4422:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4422:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4436:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4453:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:6"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:6"
									},
									"scope": 789,
									"src": "4400:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "5227:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 586,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "5241:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 600,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "5350:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 601,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5354:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 602,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5361:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 598,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "5328:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5328:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 613,
													"nodeType": "IfStatement",
													"src": "5323:117:6",
													"trueBody": {
														"id": 612,
														"nodeType": "Block",
														"src": "5368:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 608,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 577,
																					"src": "5422:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 606,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 605,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5389:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 611,
																"nodeType": "RevertStatement",
																"src": "5382:47:6"
															}
														]
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "5237:203:6",
												"trueBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "5262:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "5289:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 593,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "5296:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "5300:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 591,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5276:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 596,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5156:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 576,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 575,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5156:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5156:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5172:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5184:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5199:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:6"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:6"
									},
									"scope": 789,
									"src": "5124:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "5965:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 631,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "5979:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 646,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6102:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 647,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "6108:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 648,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6112:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 649,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6119:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 644,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "6076:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6076:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 660,
													"nodeType": "IfStatement",
													"src": "6071:127:6",
													"trueBody": {
														"id": 659,
														"nodeType": "Block",
														"src": "6126:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 655,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 620,
																					"src": "6180:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 654,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 653,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 652,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6147:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 658,
																"nodeType": "RevertStatement",
																"src": "6140:47:6"
															}
														]
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "5975:223:6",
												"trueBody": {
													"id": 643,
													"nodeType": "Block",
													"src": "6000:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "6031:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 638,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "6038:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "6044:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 640,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6048:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6014:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 642,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5843:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 619,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 618,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5843:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5843:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5867:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5889:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5909:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5932:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:6"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:6"
									},
									"scope": 789,
									"src": "5798:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "6971:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 676,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "6985:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 690,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "7093:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 691,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "7097:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 692,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "7104:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 688,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "7072:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7072:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 703,
													"nodeType": "IfStatement",
													"src": "7067:116:6",
													"trueBody": {
														"id": 702,
														"nodeType": "Block",
														"src": "7111:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 698,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 667,
																					"src": "7165:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 696,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 695,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7132:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 701,
																"nodeType": "RevertStatement",
																"src": "7125:47:6"
															}
														]
													}
												},
												"id": 704,
												"nodeType": "IfStatement",
												"src": "6981:202:6",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "7006:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 682,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "7033:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 683,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "7040:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 684,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "7044:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 681,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "7020:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6900:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 665,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6900:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6900:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6916:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6928:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6943:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 672,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:6"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:6"
									},
									"scope": 789,
									"src": "6869:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7756:650:6",
										"statements": [
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "7766:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 717,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:6"
											},
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "7794:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7848:396:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7877:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7998:157:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7982:15:6"
															},
															"nodeType": "YulIf",
															"src": "7979:176:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8168:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8182:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8211:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8226:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:6",
														"valueSize": 1
													},
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:6",
														"valueSize": 1
													},
													{
														"declaration": 716,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:6",
														"valueSize": 1
													},
													{
														"declaration": 719,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:6",
														"valueSize": 1
													},
													{
														"declaration": 710,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 721,
												"nodeType": "InlineAssembly",
												"src": "7823:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 722,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "8258:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 733,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "8310:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 727,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "8284:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 725,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "IfStatement",
												"src": "8254:146:6",
												"trueBody": {
													"id": 744,
													"nodeType": "Block",
													"src": "8328:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 740,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "8382:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 738,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 737,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "8349:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 743,
															"nodeType": "RevertStatement",
															"src": "8342:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7715:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 709,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 708,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "7715:6:6"
													},
													"referencedDeclaration": 380,
													"src": "7715:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7729:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:6"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:6"
									},
									"scope": 789,
									"src": "7686:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "8997:391:6",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9007:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 758,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 760,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:6"
											},
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9029:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:6"
											},
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9057:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 764,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9111:174:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9125:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9136:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9209:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9223:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9252:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9267:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:6",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:6",
														"valueSize": 1
													},
													{
														"declaration": 762,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:6",
														"valueSize": 1
													},
													{
														"declaration": 759,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:6",
														"valueSize": 1
													},
													{
														"declaration": 751,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 767,
												"nodeType": "InlineAssembly",
												"src": "9086:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 768,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "9301:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 769,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "9313:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 780,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9364:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 774,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 751,
																						"src": "9339:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 773,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 772,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 784,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 757,
												"id": 786,
												"nodeType": "Return",
												"src": "9294:87:6"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8941:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 750,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 749,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8941:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8941:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8955:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:6"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8991:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:6"
									},
									"scope": 789,
									"src": "8908:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 790,
							"src": "698:8692:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							819
						]
					},
					"id": 820,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 791,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 792,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 819,
							"linearizedBaseContracts": [
								819
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 797,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 796,
												"id": 799,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 819,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 806,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 805,
												"id": 808,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 803,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 819,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 814,
												"id": 816,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 819,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 820,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							831
						]
					},
					"id": 832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 821,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 822,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 831,
							"linearizedBaseContracts": [
								831
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 824,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 831,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 832,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"C/consolidation.sol": {
				"ast": {
					"absolutePath": "C/consolidation.sol",
					"exportedSymbols": {
						"Consolidation": [
							1148
						],
						"Context": [
							819
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							789
						]
					},
					"id": 1149,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 834,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1149,
							"sourceUnit": 381,
							"src": "57:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 835,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1149,
							"sourceUnit": 790,
							"src": "115:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 836,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1149,
							"sourceUnit": 148,
							"src": "182:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 837,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1149,
							"sourceUnit": 303,
							"src": "235:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 839,
										"name": "Ownable",
										"nameLocations": [
											"667:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "667:7:9"
									},
									"id": 840,
									"nodeType": "InheritanceSpecifier",
									"src": "667:7:9"
								},
								{
									"baseName": {
										"id": 841,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"676:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "676:15:9"
									},
									"id": 842,
									"nodeType": "InheritanceSpecifier",
									"src": "676:15:9"
								}
							],
							"canonicalName": "Consolidation",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 838,
								"nodeType": "StructuredDocumentation",
								"src": "299:342:9",
								"text": "@title Consolidation\n @notice This contract allows users to deposit tokens in fragmented amounts and later consolidate\n those deposits into a single balance. This process minimizes storage overhead and gas costs for future operations.\n The contract is dynamic (with an adjustable consolidation threshold), optimized, and secure."
							},
							"fullyImplemented": true,
							"id": 1148,
							"linearizedBaseContracts": [
								1148,
								302,
								147,
								819
							],
							"name": "Consolidation",
							"nameLocation": "650:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 846,
									"libraryName": {
										"id": 843,
										"name": "SafeERC20",
										"nameLocations": [
											"704:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 789,
										"src": "704:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "698:27:9",
									"typeName": {
										"id": 845,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 844,
											"name": "IERC20",
											"nameLocations": [
												"718:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "718:6:9"
										},
										"referencedDeclaration": 380,
										"src": "718:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 849,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "805:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1148,
									"src": "781:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 848,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 847,
											"name": "IERC20",
											"nameLocations": [
												"781:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "781:6:9"
										},
										"referencedDeclaration": 380,
										"src": "781:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 854,
									"mutability": "mutable",
									"name": "deposits",
									"nameLocation": "919:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1148,
									"src": "881:46:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 853,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 850,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "889:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "881:29:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 851,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "900:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 852,
											"nodeType": "ArrayTypeName",
											"src": "900:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "aef373c3",
									"id": 858,
									"mutability": "mutable",
									"name": "consolidatedBalance",
									"nameLocation": "1012:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 1148,
									"src": "977:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 857,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 855,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "985:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "977:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 856,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "996:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6b018114",
									"id": 860,
									"mutability": "mutable",
									"name": "consolidationThreshold",
									"nameLocation": "1120:22:9",
									"nodeType": "VariableDeclaration",
									"scope": 1148,
									"src": "1105:37:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 859,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1105:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4",
									"id": 866,
									"name": "Deposited",
									"nameLocation": "1177:9:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1203:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1187:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1217:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1209:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:38:9"
									},
									"src": "1171:54:9"
								},
								{
									"anonymous": false,
									"eventSelector": "cc5cf0dc864a84ad6423dd5608abd129b84caa27094cc7e97113e5eb0b368040",
									"id": 874,
									"name": "Consolidated",
									"nameLocation": "1236:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1265:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "1249:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"indexed": false,
												"mutability": "mutable",
												"name": "consolidatedAmount",
												"nameLocation": "1279:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "1271:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": false,
												"mutability": "mutable",
												"name": "fragmentsConsolidated",
												"nameLocation": "1307:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "1299:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1248:81:9"
									},
									"src": "1230:100:9"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 880,
									"name": "Withdrawn",
									"nameLocation": "1341:9:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1367:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1351:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1381:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1373:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1350:38:9"
									},
									"src": "1335:54:9"
								},
								{
									"anonymous": false,
									"eventSelector": "b6c39172f87fd26c15439100462296233a2021d7140ab8e2e3feec9976bec723",
									"id": 884,
									"name": "ConsolidationThresholdUpdated",
									"nameLocation": "1400:29:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"indexed": false,
												"mutability": "mutable",
												"name": "newThreshold",
												"nameLocation": "1438:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1430:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1430:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1429:22:9"
									},
									"src": "1394:58:9"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "1794:161:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 897,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "1812:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1830:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1822:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 898,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1822:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1822:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1812:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1834:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 896,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1804:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1804:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "1804:54:9"
											},
											{
												"expression": {
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 906,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "1868:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 908,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "1883:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 907,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "1876:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1876:14:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "1868:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "1868:22:9"
											},
											{
												"expression": {
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 912,
														"name": "consolidationThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "1900:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 913,
														"name": "_consolidationThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "1925:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1900:48:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1900:48:9"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "1458:250:9",
										"text": "@notice Constructor sets the token to consolidate and the initial consolidation threshold.\n @param _token The address of the ERC20 token.\n @param _consolidationThreshold The number of deposit fragments triggering auto-consolidation."
									},
									"id": 917,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 892,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1782:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1786:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1782:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 894,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 891,
												"name": "Ownable",
												"nameLocations": [
													"1774:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1774:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1774:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1733:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1725:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "_consolidationThreshold",
												"nameLocation": "1749:23:9",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1741:31:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1741:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1724:49:9"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1794:0:9"
									},
									"scope": 1148,
									"src": "1713:242:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "2173:112:9",
										"statements": [
											{
												"expression": {
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 925,
														"name": "consolidationThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "2183:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 926,
														"name": "newThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "2208:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2183:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "2183:37:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 930,
															"name": "newThreshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "2265:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 929,
														"name": "ConsolidationThresholdUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "2235:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "EmitStatement",
												"src": "2230:48:9"
											}
										]
									},
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "1961:128:9",
										"text": "@notice Allows the owner to update the consolidation threshold.\n @param newThreshold The new consolidation threshold."
									},
									"functionSelector": "43ba6be5",
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 923,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 922,
												"name": "onlyOwner",
												"nameLocations": [
													"2163:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2163:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2163:9:9"
										}
									],
									"name": "updateConsolidationThreshold",
									"nameLocation": "2103:28:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "newThreshold",
												"nameLocation": "2140:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "2132:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2132:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2131:22:9"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2173:0:9"
									},
									"scope": 1148,
									"src": "2094:191:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "2474:425:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 943,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "2492:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2501:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2492:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2504:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 942,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2484:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "2484:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 952,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2558:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2562:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2558:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 956,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2578:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Consolidation_$1148",
																		"typeString": "contract Consolidation"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Consolidation_$1148",
																		"typeString": "contract Consolidation"
																	}
																],
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2570:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 954,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2570:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2570:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 958,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "2585:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 949,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "2535:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2541:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "2535:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2535:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "2535:57:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 966,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "2628:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 961,
																"name": "deposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "2602:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 964,
															"indexExpression": {
																"expression": {
																	"id": 962,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2611:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2615:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2611:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2602:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2623:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2602:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2602:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "2602:33:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 970,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2660:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2664:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2660:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 972,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "2672:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 969,
														"name": "Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "2650:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "EmitStatement",
												"src": "2645:34:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 975,
																"name": "deposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "2789:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 978,
															"indexExpression": {
																"expression": {
																	"id": 976,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2798:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2802:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2798:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2789:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2810:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2789:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 980,
														"name": "consolidationThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "2820:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2789:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 988,
												"nodeType": "IfStatement",
												"src": "2785:108:9",
												"trueBody": {
													"id": 987,
													"nodeType": "Block",
													"src": "2844:49:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 983,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2871:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2875:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2871:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 982,
																	"name": "_consolidate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "2858:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2858:24:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 986,
															"nodeType": "ExpressionStatement",
															"src": "2858:24:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "2291:123:9",
										"text": "@notice Deposit tokens into the contract as fragmented deposits.\n @param amount The amount of tokens to deposit."
									},
									"functionSelector": "b6b55f25",
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 940,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 939,
												"name": "nonReentrant",
												"nameLocations": [
													"2461:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "2461:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2461:12:9"
										}
									],
									"name": "deposit",
									"nameLocation": "2428:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2444:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "2436:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2436:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2435:16:9"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2474:0:9"
									},
									"scope": 1148,
									"src": "2419:480:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "3044:41:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 997,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3067:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3071:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3067:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 996,
														"name": "_consolidate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "3054:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3054:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "3054:24:9"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "2905:89:9",
										"text": "@notice Manually consolidate your fragmented deposits into your consolidated balance."
									},
									"functionSelector": "724f024b",
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 994,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 993,
												"name": "nonReentrant",
												"nameLocations": [
													"3031:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3031:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3031:12:9"
										}
									],
									"name": "consolidate",
									"nameLocation": "3008:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:9"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3044:0:9"
									},
									"scope": 1148,
									"src": "2999:86:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "3342:439:9",
										"statements": [
											{
												"assignments": [
													1012
												],
												"declarations": [
													{
														"constant": false,
														"id": 1012,
														"mutability": "mutable",
														"name": "userDeposits",
														"nameLocation": "3370:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "3352:30:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1010,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3352:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1011,
															"nodeType": "ArrayTypeName",
															"src": "3352:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1016,
												"initialValue": {
													"baseExpression": {
														"id": 1013,
														"name": "deposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "3385:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 1015,
													"indexExpression": {
														"id": 1014,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "3394:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3385:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3352:47:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1018,
																	"name": "userDeposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "3417:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[] storage pointer"
																	}
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3430:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3417:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3439:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3417:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206465706f7369747320746f20636f6e736f6c6964617465",
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3442:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_be1d2b744db54cb219f1f9036b95f6aa025799c63e16f6ecf5b38c8381f4eb72",
																"typeString": "literal_string \"No deposits to consolidate\""
															},
															"value": "No deposits to consolidate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_be1d2b744db54cb219f1f9036b95f6aa025799c63e16f6ecf5b38c8381f4eb72",
																"typeString": "literal_string \"No deposits to consolidate\""
															}
														],
														"id": 1017,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3409:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3409:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "3409:62:9"
											},
											{
												"assignments": [
													1026
												],
												"declarations": [
													{
														"constant": false,
														"id": 1026,
														"mutability": "mutable",
														"name": "sum",
														"nameLocation": "3490:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "3482:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1025,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3482:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1028,
												"initialValue": {
													"hexValue": "30",
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3496:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3482:15:9"
											},
											{
												"assignments": [
													1030
												],
												"declarations": [
													{
														"constant": false,
														"id": 1030,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "3515:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "3507:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1029,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3507:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1033,
												"initialValue": {
													"expression": {
														"id": 1031,
														"name": "userDeposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "3523:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3536:6:9",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3523:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3507:35:9"
											},
											{
												"body": {
													"id": 1050,
													"nodeType": "Block",
													"src": "3588:47:9",
													"statements": [
														{
															"expression": {
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1044,
																	"name": "sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "3602:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1045,
																		"name": "userDeposits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "3609:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 1047,
																	"indexExpression": {
																		"id": 1046,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "3622:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3609:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3602:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1049,
															"nodeType": "ExpressionStatement",
															"src": "3602:22:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1038,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "3572:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1039,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "3576:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3572:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1051,
												"initializationExpression": {
													"assignments": [
														1035
													],
													"declarations": [
														{
															"constant": false,
															"id": 1035,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3565:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1051,
															"src": "3557:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1034,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3557:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1037,
													"initialValue": {
														"hexValue": "30",
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3569:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3557:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3583:3:9",
														"subExpression": {
															"id": 1041,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "3583:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1043,
													"nodeType": "ExpressionStatement",
													"src": "3583:3:9"
												},
												"nodeType": "ForStatement",
												"src": "3552:83:9"
											},
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1052,
															"name": "consolidatedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "3644:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1054,
														"indexExpression": {
															"id": 1053,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "3664:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3644:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1055,
														"name": "sum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "3673:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3644:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "3644:32:9"
											},
											{
												"expression": {
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3686:21:9",
													"subExpression": {
														"baseExpression": {
															"id": 1058,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "3693:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1060,
														"indexExpression": {
															"id": 1059,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "3702:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3693:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "3686:21:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1064,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "3735:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1065,
																"name": "consolidatedBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "3741:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1067,
															"indexExpression": {
																"id": 1066,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1005,
																"src": "3761:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3741:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1068,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "3768:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1063,
														"name": "Consolidated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "3722:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3722:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "EmitStatement",
												"src": "3717:57:9"
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "3091:201:9",
										"text": "@notice Internal function that sums all deposit fragments for a user, adds them to the consolidated balance,\n and clears the fragmented deposits.\n @param user The address of the user."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_consolidate",
									"nameLocation": "3306:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3327:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "3319:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3319:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3318:14:9"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3342:0:9"
									},
									"scope": 1148,
									"src": "3297:484:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "3963:298:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1081,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "3981:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3990:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3981:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3993:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1080,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3973:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3973:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "3973:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1088,
																	"name": "consolidatedBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "4032:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1091,
																"indexExpression": {
																	"expression": {
																		"id": 1089,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4052:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4056:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4052:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4032:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1092,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "4067:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4032:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6e736f6c6964617465642062616c616e6365",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4075:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0635ad17ff9099e47ed880fcb678760e95e2bef8a001321e6bf452783765bc20",
																"typeString": "literal_string \"Insufficient consolidated balance\""
															},
															"value": "Insufficient consolidated balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0635ad17ff9099e47ed880fcb678760e95e2bef8a001321e6bf452783765bc20",
																"typeString": "literal_string \"Insufficient consolidated balance\""
															}
														],
														"id": 1087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4024:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4024:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "4024:87:9"
											},
											{
												"expression": {
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1097,
															"name": "consolidatedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "4121:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1100,
														"indexExpression": {
															"expression": {
																"id": 1098,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4141:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4145:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4141:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4121:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1101,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "4156:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4121:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "4121:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1107,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4191:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4195:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4191:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "4203:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1104,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "4172:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4178:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "4172:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4172:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "4172:38:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1113,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4235:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4239:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4235:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1115,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "4247:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1112,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "4225:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "EmitStatement",
												"src": "4220:34:9"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "3787:115:9",
										"text": "@notice Withdraw tokens from your consolidated balance.\n @param amount The amount of tokens to withdraw."
									},
									"functionSelector": "2e1a7d4d",
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1078,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1077,
												"name": "nonReentrant",
												"nameLocations": [
													"3950:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3950:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3950:12:9"
										}
									],
									"name": "withdraw",
									"nameLocation": "3916:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3933:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "3925:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3925:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3924:16:9"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3963:0:9"
									},
									"scope": 1148,
									"src": "3907:354:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "4516:45:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1127,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "4533:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1129,
														"indexExpression": {
															"id": 1128,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "4542:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4533:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4548:6:9",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4533:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1126,
												"id": 1131,
												"nodeType": "Return",
												"src": "4526:28:9"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "4267:165:9",
										"text": "@notice Returns the number of fragmented deposit records for a user.\n @param user The address of the user.\n @return The count of deposit fragments."
									},
									"functionSelector": "bfc64292",
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositFragmentCount",
									"nameLocation": "4446:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4478:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "4470:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4470:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4469:14:9"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "4507:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4507:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4506:9:9"
									},
									"scope": 1148,
									"src": "4437:124:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "4840:38:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1142,
														"name": "deposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "4857:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 1144,
													"indexExpression": {
														"id": 1143,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "4866:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4857:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1145,
												"nodeType": "Return",
												"src": "4850:21:9"
											}
										]
									},
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "4567:184:9",
										"text": "@notice Returns the fragmented deposit amounts for a user.\n @param user The address of the user.\n @return An array containing the individual deposit fragment amounts."
									},
									"functionSelector": "b3dba8da",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositFragments",
									"nameLocation": "4765:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4793:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "4785:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4784:14:9"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "4822:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1138,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4822:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1139,
													"nodeType": "ArrayTypeName",
													"src": "4822:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:18:9"
									},
									"scope": 1148,
									"src": "4756:122:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1149,
							"src": "641:4239:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								866,
								874,
								880,
								884
							]
						}
					],
					"src": "32:4849:9"
				},
				"id": 9
			}
		}
	}
}