{
	"id": "d74c3253343f98dbde1f889396d5eab2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"C/coreWallet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\"; \nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; \nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/// @title CoreWallet\n/// @notice A dynamic, optimized, and secure smart wallet contract that can hold Ether and ERC20 tokens.\n/// The owner can add or remove additional authorized addresses. Authorized addresses can execute arbitrary calls\n/// and transfer funds on behalf of the wallet.\ncontract CoreWallet is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // Mapping to track additional authorized addresses (besides the owner).\n    mapping(address => bool) public authorized;\n\n    // --- Events ---\n    event AuthorizedAdded(address indexed account);\n    event AuthorizedRemoved(address indexed account);\n    event Executed(address indexed target, uint256 value, bytes data, bytes result);\n    event EtherWithdrawn(address indexed to, uint256 amount);\n    event TokenTransferred(address indexed token, address indexed to, uint256 amount);\n    event Received(address indexed sender, uint256 amount);\n\n    /// @notice Modifier to restrict function calls to only the owner or authorized addresses.\n    modifier onlyAuthorized() {\n        require(msg.sender == owner() || authorized[msg.sender], \"Not authorized\");\n        _;\n    }\n\n    /// @notice Constructor sets the deployer as the initial owner.\n    constructor() Ownable(msg.sender) {\n        // Owner is set via Ownable.\n    }\n\n    /// @notice Allows the owner to add an authorized address.\n    /// @param account The address to authorize.\n    function addAuthorized(address account) external onlyOwner {\n        require(account != address(0), \"Invalid address\");\n        require(!authorized[account], \"Already authorized\");\n        authorized[account] = true;\n        emit AuthorizedAdded(account);\n    }\n\n    /// @notice Allows the owner to remove an authorized address.\n    /// @param account The address to remove.\n    function removeAuthorized(address account) external onlyOwner {\n        require(authorized[account], \"Address not authorized\");\n        authorized[account] = false;\n        emit AuthorizedRemoved(account);\n    }\n\n    /// @notice Executes an arbitrary call from this wallet.\n    /// @param target The target address to call.\n    /// @param value The amount of Ether (in wei) to send.\n    /// @param data The calldata for the call.\n    /// @return result The returned data from the call.\n    function executeCall(address target, uint256 value, bytes calldata data)\n        external\n        onlyAuthorized\n        nonReentrant\n        returns (bytes memory result)\n    {\n        require(target != address(0), \"Invalid target\");\n        (bool success, bytes memory res) = target.call{value: value}(data);\n        require(success, \"Call failed\");\n        emit Executed(target, value, data, res);\n        return res;\n    }\n\n    /// @notice Withdraws Ether from the wallet to the caller.\n    /// @param amount The amount of Ether (in wei) to withdraw.\n    function withdrawEther(uint256 amount) external onlyAuthorized nonReentrant {\n        require(address(this).balance >= amount, \"Insufficient balance\");\n        (bool success, ) = payable(msg.sender).call{value: amount}(\"\");\n        require(success, \"Ether withdrawal failed\");\n        emit EtherWithdrawn(msg.sender, amount);\n    }\n\n    /// @notice Transfers ERC20 tokens from the wallet to a specified address.\n    /// @param token The ERC20 token to transfer.\n    /// @param to The recipient address.\n    /// @param amount The amount of tokens to transfer.\n    function transferToken(IERC20 token, address to, uint256 amount) external onlyAuthorized nonReentrant {\n        require(address(token) != address(0), \"Invalid token address\");\n        require(to != address(0), \"Invalid recipient address\");\n        token.safeTransfer(to, amount);\n        emit TokenTransferred(address(token), to, amount);\n    }\n\n    /// @notice Fallback function to receive Ether.\n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n\n    /// @notice Fallback function for non-empty calldata.\n    fallback() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cc4cd23662a6c46b3043a1164533b5e879b9f9a97f2743f79d9d3a8c466b60b364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cc4cd23662a6c46b3043a1164533b5e879b9f9a97f2743f79d9d3a8c466b60b364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0x4C 0xD2 CALLDATASIZE PUSH3 0xA6C46B ADDRESS NUMBER LOG1 AND GASLIMIT CALLER 0xB5 0xE8 PUSH26 0xB9F9A97F2743F79D9D3A8C466B60B364736F6C63430008140033 ",
							"sourceMap": "698:8692:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cc4cd23662a6c46b3043a1164533b5e879b9f9a97f2743f79d9d3a8c466b60b364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0x4C 0xD2 CALLDATASIZE PUSH3 0xA6C46B ADDRESS NUMBER LOG1 AND GASLIMIT CALLER 0xB5 0xE8 PUSH26 0xB9F9A97F2743F79D9D3A8C466B60B364736F6C63430008140033 ",
							"sourceMap": "698:8692:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc4cd23662a6c46b3043a1164533b5e879b9f9a97f2743f79d9d3a8c466b60b364736f6c63430008140033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"C/coreWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"C/coreWallet.sol": {
				"CoreWallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AuthorizedAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AuthorizedRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EtherWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Received",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addAuthorized",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "authorized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeAuthorized",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawEther",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addAuthorized(address)": {
								"params": {
									"account": "The address to authorize."
								}
							},
							"executeCall(address,uint256,bytes)": {
								"params": {
									"data": "The calldata for the call.",
									"target": "The target address to call.",
									"value": "The amount of Ether (in wei) to send."
								},
								"returns": {
									"result": "The returned data from the call."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeAuthorized(address)": {
								"params": {
									"account": "The address to remove."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"transferToken(address,address,uint256)": {
								"params": {
									"amount": "The amount of tokens to transfer.",
									"to": "The recipient address.",
									"token": "The ERC20 token to transfer."
								}
							},
							"withdrawEther(uint256)": {
								"params": {
									"amount": "The amount of Ether (in wei) to withdraw."
								}
							}
						},
						"title": "CoreWallet",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"C/coreWallet.sol\":588:4337  contract CoreWallet is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"C/coreWallet.sol\":1521:1599  constructor() Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"C/coreWallet.sol\":1543:1553  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"C/coreWallet.sol\":588:4337  contract CoreWallet is Ownable, ReentrancyGuard {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_15:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_16:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_21\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_17:\n    /* \"#utility.yul\":328:352   */\n  tag_23\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_16\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_8:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_25\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"C/coreWallet.sol\":588:4337  contract CoreWallet is Ownable, ReentrancyGuard {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"C/coreWallet.sol\":588:4337  contract CoreWallet is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e5d4c49\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x9e5d4c49\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb9181611\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xcf1c316a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf5537ede\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x3bed33ce\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x485d7d94\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"C/coreWallet.sol\":4161:4171  msg.sender */\n      caller\n        /* \"C/coreWallet.sol\":4152:4183  Received(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874\n        /* \"C/coreWallet.sol\":4173:4182  msg.value */\n      callvalue\n        /* \"C/coreWallet.sol\":4152:4183  Received(msg.sender, msg.value) */\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/coreWallet.sol\":588:4337  contract CoreWallet is Ownable, ReentrancyGuard {... */\n      stop\n    tag_2:\n        /* \"C/coreWallet.sol\":4306:4316  msg.sender */\n      caller\n        /* \"C/coreWallet.sol\":4297:4328  Received(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874\n        /* \"C/coreWallet.sol\":4318:4327  msg.value */\n      callvalue\n        /* \"C/coreWallet.sol\":4297:4328  Received(msg.sender, msg.value) */\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/coreWallet.sol\":588:4337  contract CoreWallet is Ownable, ReentrancyGuard {... */\n      stop\n        /* \"C/coreWallet.sol\":3145:3476  function withdrawEther(uint256 amount) external onlyAuthorized nonReentrant {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"C/coreWallet.sol\":2096:2307  function removeAuthorized(address account) external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/coreWallet.sol\":2586:3012  function executeCall(address target, uint256 value, bytes calldata data)... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/coreWallet.sol\":752:794  mapping(address => bool) public authorized */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/coreWallet.sol\":1717:1978  function addAuthorized(address account) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"C/coreWallet.sol\":3708:4052  function transferToken(IERC20 token, address to, uint256 amount) external onlyAuthorized nonReentrant {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"C/coreWallet.sol\":3145:3476  function withdrawEther(uint256 amount) external onlyAuthorized nonReentrant {... */\n    tag_24:\n        /* \"C/coreWallet.sol\":1377:1384  owner() */\n      tag_65\n        /* \"C/coreWallet.sol\":1377:1382  owner */\n      tag_35\n        /* \"C/coreWallet.sol\":1377:1384  owner() */\n      jump\t// in\n    tag_65:\n        /* \"C/coreWallet.sol\":1363:1384  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/coreWallet.sol\":1363:1373  msg.sender */\n      caller\n        /* \"C/coreWallet.sol\":1363:1384  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"C/coreWallet.sol\":1363:1410  msg.sender == owner() || authorized[msg.sender] */\n      dup1\n      tag_66\n      jumpi\n      pop\n        /* \"C/coreWallet.sol\":1388:1398  authorized */\n      0x02\n        /* \"C/coreWallet.sol\":1388:1410  authorized[msg.sender] */\n      0x00\n        /* \"C/coreWallet.sol\":1399:1409  msg.sender */\n      caller\n        /* \"C/coreWallet.sol\":1388:1410  authorized[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"C/coreWallet.sol\":1363:1410  msg.sender == owner() || authorized[msg.sender] */\n    tag_66:\n        /* \"C/coreWallet.sol\":1355:1429  require(msg.sender == owner() || authorized[msg.sender], \"Not authorized\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_71\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_71:\n        /* \"C/coreWallet.sol\":3264:3270  amount */\n      dup1\n        /* \"C/coreWallet.sol\":3239:3260  address(this).balance */\n      selfbalance\n        /* \"C/coreWallet.sol\":3239:3270  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"C/coreWallet.sol\":3231:3295  require(address(this).balance >= amount, \"Insufficient balance\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"C/coreWallet.sol\":3306:3318  bool success */\n      0x00\n        /* \"C/coreWallet.sol\":3332:3342  msg.sender */\n      caller\n        /* \"C/coreWallet.sol\":3324:3348  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/coreWallet.sol\":3356:3362  amount */\n      dup3\n        /* \"C/coreWallet.sol\":3324:3367  payable(msg.sender).call{value: amount}(\"\") */\n      mload(0x40)\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_81\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_80)\n    tag_81:\n      0x60\n      swap2\n      pop\n    tag_80:\n      pop\n        /* \"C/coreWallet.sol\":3305:3367  (bool success, ) = payable(msg.sender).call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"C/coreWallet.sol\":3385:3392  success */\n      dup1\n        /* \"C/coreWallet.sol\":3377:3420  require(success, \"Ether withdrawal failed\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"C/coreWallet.sol\":3450:3460  msg.sender */\n      caller\n        /* \"C/coreWallet.sol\":3435:3469  EtherWithdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x06097061aeda806b5e9cb4133d9899f332ff0913956567fc0f7ea15e3d19947c\n        /* \"C/coreWallet.sol\":3462:3468  amount */\n      dup4\n        /* \"C/coreWallet.sol\":3435:3469  EtherWithdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/coreWallet.sol\":3221:3476  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_86\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_87\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_86:\n        /* \"C/coreWallet.sol\":3145:3476  function withdrawEther(uint256 amount) external onlyAuthorized nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"C/coreWallet.sol\":2096:2307  function removeAuthorized(address account) external onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_89:\n        /* \"C/coreWallet.sol\":2176:2186  authorized */\n      0x02\n        /* \"C/coreWallet.sol\":2176:2195  authorized[account] */\n      0x00\n        /* \"C/coreWallet.sol\":2187:2194  account */\n      dup3\n        /* \"C/coreWallet.sol\":2176:2195  authorized[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"C/coreWallet.sol\":2168:2222  require(authorized[account], \"Address not authorized\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"C/coreWallet.sol\":2254:2259  false */\n      0x00\n        /* \"C/coreWallet.sol\":2232:2242  authorized */\n      0x02\n        /* \"C/coreWallet.sol\":2232:2251  authorized[account] */\n      0x00\n        /* \"C/coreWallet.sol\":2243:2250  account */\n      dup4\n        /* \"C/coreWallet.sol\":2232:2251  authorized[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/coreWallet.sol\":2232:2259  authorized[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"C/coreWallet.sol\":2292:2299  account */\n      dup1\n        /* \"C/coreWallet.sol\":2274:2300  AuthorizedRemoved(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0fafd0343e6c6f6985727574866da48938c918559eb9521cf9cc0d317ea0f7b4\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/coreWallet.sol\":2096:2307  function removeAuthorized(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"C/coreWallet.sol\":2586:3012  function executeCall(address target, uint256 value, bytes calldata data)... */\n    tag_42:\n        /* \"C/coreWallet.sol\":2737:2756  bytes memory result */\n      0x60\n        /* \"C/coreWallet.sol\":1377:1384  owner() */\n      tag_102\n        /* \"C/coreWallet.sol\":1377:1382  owner */\n      tag_35\n        /* \"C/coreWallet.sol\":1377:1384  owner() */\n      jump\t// in\n    tag_102:\n        /* \"C/coreWallet.sol\":1363:1384  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/coreWallet.sol\":1363:1373  msg.sender */\n      caller\n        /* \"C/coreWallet.sol\":1363:1384  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"C/coreWallet.sol\":1363:1410  msg.sender == owner() || authorized[msg.sender] */\n      dup1\n      tag_103\n      jumpi\n      pop\n        /* \"C/coreWallet.sol\":1388:1398  authorized */\n      0x02\n        /* \"C/coreWallet.sol\":1388:1410  authorized[msg.sender] */\n      0x00\n        /* \"C/coreWallet.sol\":1399:1409  msg.sender */\n      caller\n        /* \"C/coreWallet.sol\":1388:1410  authorized[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"C/coreWallet.sol\":1363:1410  msg.sender == owner() || authorized[msg.sender] */\n    tag_103:\n        /* \"C/coreWallet.sol\":1355:1429  require(msg.sender == owner() || authorized[msg.sender], \"Not authorized\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_69\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_107\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_107:\n        /* \"C/coreWallet.sol\":2798:2799  0 */\n      0x00\n        /* \"C/coreWallet.sol\":2780:2800  target != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/coreWallet.sol\":2780:2786  target */\n      dup6\n        /* \"C/coreWallet.sol\":2780:2800  target != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"C/coreWallet.sol\":2772:2819  require(target != address(0), \"Invalid target\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"C/coreWallet.sol\":2830:2842  bool success */\n      0x00\n        /* \"C/coreWallet.sol\":2844:2860  bytes memory res */\n      dup1\n        /* \"C/coreWallet.sol\":2864:2870  target */\n      dup7\n        /* \"C/coreWallet.sol\":2864:2875  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/coreWallet.sol\":2883:2888  value */\n      dup7\n        /* \"C/coreWallet.sol\":2890:2894  data */\n      dup7\n      dup7\n        /* \"C/coreWallet.sol\":2864:2895  target.call{value: value}(data) */\n      mload(0x40)\n      tag_112\n      swap3\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_116\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_115)\n    tag_116:\n      0x60\n      swap2\n      pop\n    tag_115:\n      pop\n        /* \"C/coreWallet.sol\":2829:2895  (bool success, bytes memory res) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"C/coreWallet.sol\":2913:2920  success */\n      dup2\n        /* \"C/coreWallet.sol\":2905:2936  require(success, \"Call failed\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"C/coreWallet.sol\":2960:2966  target */\n      dup7\n        /* \"C/coreWallet.sol\":2951:2985  Executed(target, value, data, res) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe39b605d485d947e52b62c3b5028a14d5277db44425263c74171a85707154334\n        /* \"C/coreWallet.sol\":2968:2973  value */\n      dup8\n        /* \"C/coreWallet.sol\":2975:2979  data */\n      dup8\n      dup8\n        /* \"C/coreWallet.sol\":2981:2984  res */\n      dup6\n        /* \"C/coreWallet.sol\":2951:2985  Executed(target, value, data, res) */\n      mload(0x40)\n      tag_120\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/coreWallet.sol\":3002:3005  res */\n      dup1\n        /* \"C/coreWallet.sol\":2995:3005  return res */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_122\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_87\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_122:\n        /* \"C/coreWallet.sol\":2586:3012  function executeCall(address target, uint256 value, bytes calldata data)... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"C/coreWallet.sol\":752:794  mapping(address => bool) public authorized */\n    tag_48:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"C/coreWallet.sol\":1717:1978  function addAuthorized(address account) external onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_124:\n        /* \"C/coreWallet.sol\":1813:1814  0 */\n      0x00\n        /* \"C/coreWallet.sol\":1794:1815  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/coreWallet.sol\":1794:1801  account */\n      dup2\n        /* \"C/coreWallet.sol\":1794:1815  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"C/coreWallet.sol\":1786:1835  require(account != address(0), \"Invalid address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"C/coreWallet.sol\":1854:1864  authorized */\n      0x02\n        /* \"C/coreWallet.sol\":1854:1873  authorized[account] */\n      0x00\n        /* \"C/coreWallet.sol\":1865:1872  account */\n      dup3\n        /* \"C/coreWallet.sol\":1854:1873  authorized[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"C/coreWallet.sol\":1853:1873  !authorized[account] */\n      iszero\n        /* \"C/coreWallet.sol\":1845:1896  require(!authorized[account], \"Already authorized\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"C/coreWallet.sol\":1928:1932  true */\n      0x01\n        /* \"C/coreWallet.sol\":1906:1916  authorized */\n      0x02\n        /* \"C/coreWallet.sol\":1906:1925  authorized[account] */\n      0x00\n        /* \"C/coreWallet.sol\":1917:1924  account */\n      dup4\n        /* \"C/coreWallet.sol\":1906:1925  authorized[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/coreWallet.sol\":1906:1932  authorized[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"C/coreWallet.sol\":1963:1970  account */\n      dup1\n        /* \"C/coreWallet.sol\":1947:1971  AuthorizedAdded(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd10d14f6ac19e913d4edbb11fd30661531e2ccd0d23f571e9b224f001f0dd06\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/coreWallet.sol\":1717:1978  function addAuthorized(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"C/coreWallet.sol\":3708:4052  function transferToken(IERC20 token, address to, uint256 amount) external onlyAuthorized nonReentrant {... */\n    tag_63:\n        /* \"C/coreWallet.sol\":1377:1384  owner() */\n      tag_139\n        /* \"C/coreWallet.sol\":1377:1382  owner */\n      tag_35\n        /* \"C/coreWallet.sol\":1377:1384  owner() */\n      jump\t// in\n    tag_139:\n        /* \"C/coreWallet.sol\":1363:1384  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/coreWallet.sol\":1363:1373  msg.sender */\n      caller\n        /* \"C/coreWallet.sol\":1363:1384  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"C/coreWallet.sol\":1363:1410  msg.sender == owner() || authorized[msg.sender] */\n      dup1\n      tag_140\n      jumpi\n      pop\n        /* \"C/coreWallet.sol\":1388:1398  authorized */\n      0x02\n        /* \"C/coreWallet.sol\":1388:1410  authorized[msg.sender] */\n      0x00\n        /* \"C/coreWallet.sol\":1399:1409  msg.sender */\n      caller\n        /* \"C/coreWallet.sol\":1388:1410  authorized[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"C/coreWallet.sol\":1363:1410  msg.sender == owner() || authorized[msg.sender] */\n    tag_140:\n        /* \"C/coreWallet.sol\":1355:1429  require(msg.sender == owner() || authorized[msg.sender], \"Not authorized\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_69\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_144\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_144:\n        /* \"C/coreWallet.sol\":3854:3855  0 */\n      0x00\n        /* \"C/coreWallet.sol\":3828:3856  address(token) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/coreWallet.sol\":3836:3841  token */\n      dup4\n        /* \"C/coreWallet.sol\":3828:3856  address(token) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"C/coreWallet.sol\":3820:3882  require(address(token) != address(0), \"Invalid token address\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"C/coreWallet.sol\":3914:3915  0 */\n      0x00\n        /* \"C/coreWallet.sol\":3900:3916  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/coreWallet.sol\":3900:3902  to */\n      dup3\n        /* \"C/coreWallet.sol\":3900:3916  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"C/coreWallet.sol\":3892:3946  require(to != address(0), \"Invalid recipient address\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"C/coreWallet.sol\":3956:3986  token.safeTransfer(to, amount) */\n      tag_152\n        /* \"C/coreWallet.sol\":3975:3977  to */\n      dup3\n        /* \"C/coreWallet.sol\":3979:3985  amount */\n      dup3\n        /* \"C/coreWallet.sol\":3956:3961  token */\n      dup6\n        /* \"C/coreWallet.sol\":3956:3974  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_153\n      swap1\n        /* \"C/coreWallet.sol\":3956:3986  token.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"C/coreWallet.sol\":4034:4036  to */\n      dup2\n        /* \"C/coreWallet.sol\":4001:4045  TokenTransferred(address(token), to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/coreWallet.sol\":4026:4031  token */\n      dup4\n        /* \"C/coreWallet.sol\":4001:4045  TokenTransferred(address(token), to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9c8515990fd8c61431c4ac8db9b81475f90c292a1dda77731e56c22e64fc7643\n        /* \"C/coreWallet.sol\":4038:4044  amount */\n      dup4\n        /* \"C/coreWallet.sol\":4001:4045  TokenTransferred(address(token), to, amount) */\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_155\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_87\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_155:\n        /* \"C/coreWallet.sol\":3708:4052  function transferToken(IERC20 token, address to, uint256 amount) external onlyAuthorized nonReentrant {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_176\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_178)\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_181:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_182:\n        /* \"#utility.yul\":177:201   */\n      tag_239\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_181\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_16:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_241\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_182\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_184:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":646:763   */\n    tag_185:\n        /* \"#utility.yul\":755:756   */\n      0x00\n        /* \"#utility.yul\":752:753   */\n      dup1\n        /* \"#utility.yul\":745:757   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_186:\n        /* \"#utility.yul\":842:866   */\n      tag_246\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_181\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_247:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_187:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_249\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_186\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_23:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_252\n      tag_184\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":1118:1237   */\n    tag_251:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_253\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_187\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_188:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_189:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_256\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_188\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_190:\n        /* \"#utility.yul\":1684:1708   */\n      tag_258\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_189\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_259:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_191:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_261\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_190\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_28:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_264\n      tag_184\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1960:2079   */\n    tag_263:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_265\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_191\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2337   */\n    tag_192:\n        /* \"#utility.yul\":2306:2330   */\n      tag_267\n        /* \"#utility.yul\":2324:2329   */\n      dup2\n        /* \"#utility.yul\":2306:2330   */\n      tag_189\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2301:2304   */\n      dup3\n        /* \"#utility.yul\":2294:2331   */\n      mstore\n        /* \"#utility.yul\":2219:2337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2343:2565   */\n    tag_37:\n        /* \"#utility.yul\":2436:2440   */\n      0x00\n        /* \"#utility.yul\":2474:2476   */\n      0x20\n        /* \"#utility.yul\":2463:2472   */\n      dup3\n        /* \"#utility.yul\":2459:2477   */\n      add\n        /* \"#utility.yul\":2451:2477   */\n      swap1\n      pop\n        /* \"#utility.yul\":2487:2558   */\n      tag_269\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2544:2553   */\n      dup4\n        /* \"#utility.yul\":2540:2557   */\n      add\n        /* \"#utility.yul\":2531:2537   */\n      dup5\n        /* \"#utility.yul\":2487:2558   */\n      tag_192\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2343:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2688   */\n    tag_193:\n        /* \"#utility.yul\":2680:2681   */\n      0x00\n        /* \"#utility.yul\":2677:2678   */\n      dup1\n        /* \"#utility.yul\":2670:2682   */\n      revert\n        /* \"#utility.yul\":2694:2811   */\n    tag_194:\n        /* \"#utility.yul\":2803:2804   */\n      0x00\n        /* \"#utility.yul\":2800:2801   */\n      dup1\n        /* \"#utility.yul\":2793:2805   */\n      revert\n        /* \"#utility.yul\":2817:2934   */\n    tag_195:\n        /* \"#utility.yul\":2926:2927   */\n      0x00\n        /* \"#utility.yul\":2923:2924   */\n      dup1\n        /* \"#utility.yul\":2916:2928   */\n      revert\n        /* \"#utility.yul\":2953:3505   */\n    tag_196:\n        /* \"#utility.yul\":3010:3018   */\n      0x00\n        /* \"#utility.yul\":3020:3026   */\n      dup1\n        /* \"#utility.yul\":3070:3073   */\n      dup4\n        /* \"#utility.yul\":3063:3067   */\n      0x1f\n        /* \"#utility.yul\":3055:3061   */\n      dup5\n        /* \"#utility.yul\":3051:3068   */\n      add\n        /* \"#utility.yul\":3047:3074   */\n      slt\n        /* \"#utility.yul\":3037:3159   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":3078:3157   */\n      tag_275\n      tag_193\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":3037:3159   */\n    tag_274:\n        /* \"#utility.yul\":3191:3197   */\n      dup3\n        /* \"#utility.yul\":3178:3198   */\n      calldataload\n        /* \"#utility.yul\":3168:3198   */\n      swap1\n      pop\n        /* \"#utility.yul\":3221:3239   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3213:3219   */\n      dup2\n        /* \"#utility.yul\":3210:3240   */\n      gt\n        /* \"#utility.yul\":3207:3324   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":3243:3322   */\n      tag_277\n      tag_194\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":3207:3324   */\n    tag_276:\n        /* \"#utility.yul\":3357:3361   */\n      0x20\n        /* \"#utility.yul\":3349:3355   */\n      dup4\n        /* \"#utility.yul\":3345:3362   */\n      add\n        /* \"#utility.yul\":3333:3362   */\n      swap2\n      pop\n        /* \"#utility.yul\":3411:3414   */\n      dup4\n        /* \"#utility.yul\":3403:3407   */\n      0x01\n        /* \"#utility.yul\":3395:3401   */\n      dup3\n        /* \"#utility.yul\":3391:3408   */\n      mul\n        /* \"#utility.yul\":3381:3389   */\n      dup4\n        /* \"#utility.yul\":3377:3409   */\n      add\n        /* \"#utility.yul\":3374:3415   */\n      gt\n        /* \"#utility.yul\":3371:3499   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":3418:3497   */\n      tag_279\n      tag_195\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":3371:3499   */\n    tag_278:\n        /* \"#utility.yul\":2953:3505   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3511:4328   */\n    tag_41:\n        /* \"#utility.yul\":3599:3605   */\n      0x00\n        /* \"#utility.yul\":3607:3613   */\n      dup1\n        /* \"#utility.yul\":3615:3621   */\n      0x00\n        /* \"#utility.yul\":3623:3629   */\n      dup1\n        /* \"#utility.yul\":3672:3674   */\n      0x60\n        /* \"#utility.yul\":3660:3669   */\n      dup6\n        /* \"#utility.yul\":3651:3658   */\n      dup8\n        /* \"#utility.yul\":3647:3670   */\n      sub\n        /* \"#utility.yul\":3643:3675   */\n      slt\n        /* \"#utility.yul\":3640:3759   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":3678:3757   */\n      tag_282\n      tag_184\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":3640:3759   */\n    tag_281:\n        /* \"#utility.yul\":3798:3799   */\n      0x00\n        /* \"#utility.yul\":3823:3876   */\n      tag_283\n        /* \"#utility.yul\":3868:3875   */\n      dup8\n        /* \"#utility.yul\":3859:3865   */\n      dup3\n        /* \"#utility.yul\":3848:3857   */\n      dup9\n        /* \"#utility.yul\":3844:3866   */\n      add\n        /* \"#utility.yul\":3823:3876   */\n      tag_191\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3813:3876   */\n      swap5\n      pop\n        /* \"#utility.yul\":3769:3886   */\n      pop\n        /* \"#utility.yul\":3925:3927   */\n      0x20\n        /* \"#utility.yul\":3951:4004   */\n      tag_284\n        /* \"#utility.yul\":3996:4003   */\n      dup8\n        /* \"#utility.yul\":3987:3993   */\n      dup3\n        /* \"#utility.yul\":3976:3985   */\n      dup9\n        /* \"#utility.yul\":3972:3994   */\n      add\n        /* \"#utility.yul\":3951:4004   */\n      tag_187\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3941:4004   */\n      swap4\n      pop\n        /* \"#utility.yul\":3896:4014   */\n      pop\n        /* \"#utility.yul\":4081:4083   */\n      0x40\n        /* \"#utility.yul\":4070:4079   */\n      dup6\n        /* \"#utility.yul\":4066:4084   */\n      add\n        /* \"#utility.yul\":4053:4085   */\n      calldataload\n        /* \"#utility.yul\":4112:4130   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4104:4110   */\n      dup2\n        /* \"#utility.yul\":4101:4131   */\n      gt\n        /* \"#utility.yul\":4098:4215   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":4134:4213   */\n      tag_286\n      tag_185\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4098:4215   */\n    tag_285:\n        /* \"#utility.yul\":4247:4311   */\n      tag_287\n        /* \"#utility.yul\":4303:4310   */\n      dup8\n        /* \"#utility.yul\":4294:4300   */\n      dup3\n        /* \"#utility.yul\":4283:4292   */\n      dup9\n        /* \"#utility.yul\":4279:4301   */\n      add\n        /* \"#utility.yul\":4247:4311   */\n      tag_196\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":4229:4311   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":4024:4321   */\n      pop\n        /* \"#utility.yul\":3511:4328   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4334:4432   */\n    tag_197:\n        /* \"#utility.yul\":4385:4391   */\n      0x00\n        /* \"#utility.yul\":4419:4424   */\n      dup2\n        /* \"#utility.yul\":4413:4425   */\n      mload\n        /* \"#utility.yul\":4403:4425   */\n      swap1\n      pop\n        /* \"#utility.yul\":4334:4432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4438:4606   */\n    tag_198:\n        /* \"#utility.yul\":4521:4532   */\n      0x00\n        /* \"#utility.yul\":4555:4561   */\n      dup3\n        /* \"#utility.yul\":4550:4553   */\n      dup3\n        /* \"#utility.yul\":4543:4562   */\n      mstore\n        /* \"#utility.yul\":4595:4599   */\n      0x20\n        /* \"#utility.yul\":4590:4593   */\n      dup3\n        /* \"#utility.yul\":4586:4600   */\n      add\n        /* \"#utility.yul\":4571:4600   */\n      swap1\n      pop\n        /* \"#utility.yul\":4438:4606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4612:4858   */\n    tag_199:\n        /* \"#utility.yul\":4693:4694   */\n      0x00\n        /* \"#utility.yul\":4703:4816   */\n    tag_291:\n        /* \"#utility.yul\":4717:4723   */\n      dup4\n        /* \"#utility.yul\":4714:4715   */\n      dup2\n        /* \"#utility.yul\":4711:4724   */\n      lt\n        /* \"#utility.yul\":4703:4816   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":4802:4803   */\n      dup1\n        /* \"#utility.yul\":4797:4800   */\n      dup3\n        /* \"#utility.yul\":4793:4804   */\n      add\n        /* \"#utility.yul\":4787:4805   */\n      mload\n        /* \"#utility.yul\":4783:4784   */\n      dup2\n        /* \"#utility.yul\":4778:4781   */\n      dup5\n        /* \"#utility.yul\":4774:4785   */\n      add\n        /* \"#utility.yul\":4767:4806   */\n      mstore\n        /* \"#utility.yul\":4739:4741   */\n      0x20\n        /* \"#utility.yul\":4736:4737   */\n      dup2\n        /* \"#utility.yul\":4732:4742   */\n      add\n        /* \"#utility.yul\":4727:4742   */\n      swap1\n      pop\n        /* \"#utility.yul\":4703:4816   */\n      jump(tag_291)\n    tag_293:\n        /* \"#utility.yul\":4850:4851   */\n      0x00\n        /* \"#utility.yul\":4841:4847   */\n      dup5\n        /* \"#utility.yul\":4836:4839   */\n      dup5\n        /* \"#utility.yul\":4832:4848   */\n      add\n        /* \"#utility.yul\":4825:4852   */\n      mstore\n        /* \"#utility.yul\":4674:4858   */\n      pop\n        /* \"#utility.yul\":4612:4858   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4864:4966   */\n    tag_200:\n        /* \"#utility.yul\":4905:4911   */\n      0x00\n        /* \"#utility.yul\":4956:4958   */\n      0x1f\n        /* \"#utility.yul\":4952:4959   */\n      not\n        /* \"#utility.yul\":4947:4949   */\n      0x1f\n        /* \"#utility.yul\":4940:4945   */\n      dup4\n        /* \"#utility.yul\":4936:4950   */\n      add\n        /* \"#utility.yul\":4932:4960   */\n      and\n        /* \"#utility.yul\":4922:4960   */\n      swap1\n      pop\n        /* \"#utility.yul\":4864:4966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4972:5345   */\n    tag_201:\n        /* \"#utility.yul\":5058:5061   */\n      0x00\n        /* \"#utility.yul\":5086:5124   */\n      tag_296\n        /* \"#utility.yul\":5118:5123   */\n      dup3\n        /* \"#utility.yul\":5086:5124   */\n      tag_197\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":5140:5210   */\n      tag_297\n        /* \"#utility.yul\":5203:5209   */\n      dup2\n        /* \"#utility.yul\":5198:5201   */\n      dup6\n        /* \"#utility.yul\":5140:5210   */\n      tag_198\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5133:5210   */\n      swap4\n      pop\n        /* \"#utility.yul\":5219:5284   */\n      tag_298\n        /* \"#utility.yul\":5277:5283   */\n      dup2\n        /* \"#utility.yul\":5272:5275   */\n      dup6\n        /* \"#utility.yul\":5265:5269   */\n      0x20\n        /* \"#utility.yul\":5258:5263   */\n      dup7\n        /* \"#utility.yul\":5254:5270   */\n      add\n        /* \"#utility.yul\":5219:5284   */\n      tag_199\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5309:5338   */\n      tag_299\n        /* \"#utility.yul\":5331:5337   */\n      dup2\n        /* \"#utility.yul\":5309:5338   */\n      tag_200\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":5304:5307   */\n      dup5\n        /* \"#utility.yul\":5300:5339   */\n      add\n        /* \"#utility.yul\":5293:5339   */\n      swap2\n      pop\n        /* \"#utility.yul\":5062:5345   */\n      pop\n        /* \"#utility.yul\":4972:5345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5351:5660   */\n    tag_44:\n        /* \"#utility.yul\":5462:5466   */\n      0x00\n        /* \"#utility.yul\":5500:5502   */\n      0x20\n        /* \"#utility.yul\":5489:5498   */\n      dup3\n        /* \"#utility.yul\":5485:5503   */\n      add\n        /* \"#utility.yul\":5477:5503   */\n      swap1\n      pop\n        /* \"#utility.yul\":5549:5558   */\n      dup2\n        /* \"#utility.yul\":5543:5547   */\n      dup2\n        /* \"#utility.yul\":5539:5559   */\n      sub\n        /* \"#utility.yul\":5535:5536   */\n      0x00\n        /* \"#utility.yul\":5524:5533   */\n      dup4\n        /* \"#utility.yul\":5520:5537   */\n      add\n        /* \"#utility.yul\":5513:5560   */\n      mstore\n        /* \"#utility.yul\":5577:5653   */\n      tag_301\n        /* \"#utility.yul\":5648:5652   */\n      dup2\n        /* \"#utility.yul\":5639:5645   */\n      dup5\n        /* \"#utility.yul\":5577:5653   */\n      tag_201\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":5569:5653   */\n      swap1\n      pop\n        /* \"#utility.yul\":5351:5660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5666:5756   */\n    tag_202:\n        /* \"#utility.yul\":5700:5707   */\n      0x00\n        /* \"#utility.yul\":5743:5748   */\n      dup2\n        /* \"#utility.yul\":5736:5749   */\n      iszero\n        /* \"#utility.yul\":5729:5750   */\n      iszero\n        /* \"#utility.yul\":5718:5750   */\n      swap1\n      pop\n        /* \"#utility.yul\":5666:5756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5762:5871   */\n    tag_203:\n        /* \"#utility.yul\":5843:5864   */\n      tag_304\n        /* \"#utility.yul\":5858:5863   */\n      dup2\n        /* \"#utility.yul\":5843:5864   */\n      tag_202\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":5838:5841   */\n      dup3\n        /* \"#utility.yul\":5831:5865   */\n      mstore\n        /* \"#utility.yul\":5762:5871   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5877:6087   */\n    tag_50:\n        /* \"#utility.yul\":5964:5968   */\n      0x00\n        /* \"#utility.yul\":6002:6004   */\n      0x20\n        /* \"#utility.yul\":5991:6000   */\n      dup3\n        /* \"#utility.yul\":5987:6005   */\n      add\n        /* \"#utility.yul\":5979:6005   */\n      swap1\n      pop\n        /* \"#utility.yul\":6015:6080   */\n      tag_306\n        /* \"#utility.yul\":6077:6078   */\n      0x00\n        /* \"#utility.yul\":6066:6075   */\n      dup4\n        /* \"#utility.yul\":6062:6079   */\n      add\n        /* \"#utility.yul\":6053:6059   */\n      dup5\n        /* \"#utility.yul\":6015:6080   */\n      tag_203\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":5877:6087   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6093:6203   */\n    tag_204:\n        /* \"#utility.yul\":6144:6151   */\n      0x00\n        /* \"#utility.yul\":6173:6197   */\n      tag_308\n        /* \"#utility.yul\":6191:6196   */\n      dup3\n        /* \"#utility.yul\":6173:6197   */\n      tag_189\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":6162:6197   */\n      swap1\n      pop\n        /* \"#utility.yul\":6093:6203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6209:6359   */\n    tag_205:\n        /* \"#utility.yul\":6296:6334   */\n      tag_310\n        /* \"#utility.yul\":6328:6333   */\n      dup2\n        /* \"#utility.yul\":6296:6334   */\n      tag_204\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":6289:6294   */\n      dup2\n        /* \"#utility.yul\":6286:6335   */\n      eq\n        /* \"#utility.yul\":6276:6353   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":6349:6350   */\n      0x00\n        /* \"#utility.yul\":6346:6347   */\n      dup1\n        /* \"#utility.yul\":6339:6351   */\n      revert\n        /* \"#utility.yul\":6276:6353   */\n    tag_311:\n        /* \"#utility.yul\":6209:6359   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6365:6532   */\n    tag_206:\n        /* \"#utility.yul\":6425:6430   */\n      0x00\n        /* \"#utility.yul\":6463:6469   */\n      dup2\n        /* \"#utility.yul\":6450:6470   */\n      calldataload\n        /* \"#utility.yul\":6441:6470   */\n      swap1\n      pop\n        /* \"#utility.yul\":6479:6526   */\n      tag_313\n        /* \"#utility.yul\":6520:6525   */\n      dup2\n        /* \"#utility.yul\":6479:6526   */\n      tag_205\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6365:6532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6538:7185   */\n    tag_62:\n        /* \"#utility.yul\":6629:6635   */\n      0x00\n        /* \"#utility.yul\":6637:6643   */\n      dup1\n        /* \"#utility.yul\":6645:6651   */\n      0x00\n        /* \"#utility.yul\":6694:6696   */\n      0x60\n        /* \"#utility.yul\":6682:6691   */\n      dup5\n        /* \"#utility.yul\":6673:6680   */\n      dup7\n        /* \"#utility.yul\":6669:6692   */\n      sub\n        /* \"#utility.yul\":6665:6697   */\n      slt\n        /* \"#utility.yul\":6662:6781   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":6700:6779   */\n      tag_316\n      tag_184\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6662:6781   */\n    tag_315:\n        /* \"#utility.yul\":6820:6821   */\n      0x00\n        /* \"#utility.yul\":6845:6912   */\n      tag_317\n        /* \"#utility.yul\":6904:6911   */\n      dup7\n        /* \"#utility.yul\":6895:6901   */\n      dup3\n        /* \"#utility.yul\":6884:6893   */\n      dup8\n        /* \"#utility.yul\":6880:6902   */\n      add\n        /* \"#utility.yul\":6845:6912   */\n      tag_206\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":6835:6912   */\n      swap4\n      pop\n        /* \"#utility.yul\":6791:6922   */\n      pop\n        /* \"#utility.yul\":6961:6963   */\n      0x20\n        /* \"#utility.yul\":6987:7040   */\n      tag_318\n        /* \"#utility.yul\":7032:7039   */\n      dup7\n        /* \"#utility.yul\":7023:7029   */\n      dup3\n        /* \"#utility.yul\":7012:7021   */\n      dup8\n        /* \"#utility.yul\":7008:7030   */\n      add\n        /* \"#utility.yul\":6987:7040   */\n      tag_191\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6977:7040   */\n      swap3\n      pop\n        /* \"#utility.yul\":6932:7050   */\n      pop\n        /* \"#utility.yul\":7089:7091   */\n      0x40\n        /* \"#utility.yul\":7115:7168   */\n      tag_319\n        /* \"#utility.yul\":7160:7167   */\n      dup7\n        /* \"#utility.yul\":7151:7157   */\n      dup3\n        /* \"#utility.yul\":7140:7149   */\n      dup8\n        /* \"#utility.yul\":7136:7158   */\n      add\n        /* \"#utility.yul\":7115:7168   */\n      tag_187\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":7105:7168   */\n      swap2\n      pop\n        /* \"#utility.yul\":7060:7178   */\n      pop\n        /* \"#utility.yul\":6538:7185   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7191:7360   */\n    tag_207:\n        /* \"#utility.yul\":7275:7286   */\n      0x00\n        /* \"#utility.yul\":7309:7315   */\n      dup3\n        /* \"#utility.yul\":7304:7307   */\n      dup3\n        /* \"#utility.yul\":7297:7316   */\n      mstore\n        /* \"#utility.yul\":7349:7353   */\n      0x20\n        /* \"#utility.yul\":7344:7347   */\n      dup3\n        /* \"#utility.yul\":7340:7354   */\n      add\n        /* \"#utility.yul\":7325:7354   */\n      swap1\n      pop\n        /* \"#utility.yul\":7191:7360   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7366:7530   */\n    tag_208:\n        /* \"#utility.yul\":7506:7522   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":7502:7503   */\n      0x00\n        /* \"#utility.yul\":7494:7500   */\n      dup3\n        /* \"#utility.yul\":7490:7504   */\n      add\n        /* \"#utility.yul\":7483:7523   */\n      mstore\n        /* \"#utility.yul\":7366:7530   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7536:7902   */\n    tag_209:\n        /* \"#utility.yul\":7678:7681   */\n      0x00\n        /* \"#utility.yul\":7699:7766   */\n      tag_323\n        /* \"#utility.yul\":7763:7765   */\n      0x0e\n        /* \"#utility.yul\":7758:7761   */\n      dup4\n        /* \"#utility.yul\":7699:7766   */\n      tag_207\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":7692:7766   */\n      swap2\n      pop\n        /* \"#utility.yul\":7775:7868   */\n      tag_324\n        /* \"#utility.yul\":7864:7867   */\n      dup3\n        /* \"#utility.yul\":7775:7868   */\n      tag_208\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":7893:7895   */\n      0x20\n        /* \"#utility.yul\":7888:7891   */\n      dup3\n        /* \"#utility.yul\":7884:7896   */\n      add\n        /* \"#utility.yul\":7877:7896   */\n      swap1\n      pop\n        /* \"#utility.yul\":7536:7902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7908:8327   */\n    tag_69:\n        /* \"#utility.yul\":8074:8078   */\n      0x00\n        /* \"#utility.yul\":8112:8114   */\n      0x20\n        /* \"#utility.yul\":8101:8110   */\n      dup3\n        /* \"#utility.yul\":8097:8115   */\n      add\n        /* \"#utility.yul\":8089:8115   */\n      swap1\n      pop\n        /* \"#utility.yul\":8161:8170   */\n      dup2\n        /* \"#utility.yul\":8155:8159   */\n      dup2\n        /* \"#utility.yul\":8151:8171   */\n      sub\n        /* \"#utility.yul\":8147:8148   */\n      0x00\n        /* \"#utility.yul\":8136:8145   */\n      dup4\n        /* \"#utility.yul\":8132:8149   */\n      add\n        /* \"#utility.yul\":8125:8172   */\n      mstore\n        /* \"#utility.yul\":8189:8320   */\n      tag_326\n        /* \"#utility.yul\":8315:8319   */\n      dup2\n        /* \"#utility.yul\":8189:8320   */\n      tag_209\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":8181:8320   */\n      swap1\n      pop\n        /* \"#utility.yul\":7908:8327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8333:8503   */\n    tag_210:\n        /* \"#utility.yul\":8473:8495   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":8469:8470   */\n      0x00\n        /* \"#utility.yul\":8461:8467   */\n      dup3\n        /* \"#utility.yul\":8457:8471   */\n      add\n        /* \"#utility.yul\":8450:8496   */\n      mstore\n        /* \"#utility.yul\":8333:8503   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8509:8875   */\n    tag_211:\n        /* \"#utility.yul\":8651:8654   */\n      0x00\n        /* \"#utility.yul\":8672:8739   */\n      tag_329\n        /* \"#utility.yul\":8736:8738   */\n      0x14\n        /* \"#utility.yul\":8731:8734   */\n      dup4\n        /* \"#utility.yul\":8672:8739   */\n      tag_207\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":8665:8739   */\n      swap2\n      pop\n        /* \"#utility.yul\":8748:8841   */\n      tag_330\n        /* \"#utility.yul\":8837:8840   */\n      dup3\n        /* \"#utility.yul\":8748:8841   */\n      tag_210\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":8866:8868   */\n      0x20\n        /* \"#utility.yul\":8861:8864   */\n      dup3\n        /* \"#utility.yul\":8857:8869   */\n      add\n        /* \"#utility.yul\":8850:8869   */\n      swap1\n      pop\n        /* \"#utility.yul\":8509:8875   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8881:9300   */\n    tag_76:\n        /* \"#utility.yul\":9047:9051   */\n      0x00\n        /* \"#utility.yul\":9085:9087   */\n      0x20\n        /* \"#utility.yul\":9074:9083   */\n      dup3\n        /* \"#utility.yul\":9070:9088   */\n      add\n        /* \"#utility.yul\":9062:9088   */\n      swap1\n      pop\n        /* \"#utility.yul\":9134:9143   */\n      dup2\n        /* \"#utility.yul\":9128:9132   */\n      dup2\n        /* \"#utility.yul\":9124:9144   */\n      sub\n        /* \"#utility.yul\":9120:9121   */\n      0x00\n        /* \"#utility.yul\":9109:9118   */\n      dup4\n        /* \"#utility.yul\":9105:9122   */\n      add\n        /* \"#utility.yul\":9098:9145   */\n      mstore\n        /* \"#utility.yul\":9162:9293   */\n      tag_332\n        /* \"#utility.yul\":9288:9292   */\n      dup2\n        /* \"#utility.yul\":9162:9293   */\n      tag_211\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":9154:9293   */\n      swap1\n      pop\n        /* \"#utility.yul\":8881:9300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9306:9453   */\n    tag_212:\n        /* \"#utility.yul\":9407:9418   */\n      0x00\n        /* \"#utility.yul\":9444:9447   */\n      dup2\n        /* \"#utility.yul\":9429:9447   */\n      swap1\n      pop\n        /* \"#utility.yul\":9306:9453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9459:9573   */\n    tag_213:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9579:9977   */\n    tag_214:\n        /* \"#utility.yul\":9738:9741   */\n      0x00\n        /* \"#utility.yul\":9759:9842   */\n      tag_336\n        /* \"#utility.yul\":9840:9841   */\n      0x00\n        /* \"#utility.yul\":9835:9838   */\n      dup4\n        /* \"#utility.yul\":9759:9842   */\n      tag_212\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":9752:9842   */\n      swap2\n      pop\n        /* \"#utility.yul\":9851:9944   */\n      tag_337\n        /* \"#utility.yul\":9940:9943   */\n      dup3\n        /* \"#utility.yul\":9851:9944   */\n      tag_213\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":9969:9970   */\n      0x00\n        /* \"#utility.yul\":9964:9967   */\n      dup3\n        /* \"#utility.yul\":9960:9971   */\n      add\n        /* \"#utility.yul\":9953:9971   */\n      swap1\n      pop\n        /* \"#utility.yul\":9579:9977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9983:10362   */\n    tag_78:\n        /* \"#utility.yul\":10167:10170   */\n      0x00\n        /* \"#utility.yul\":10189:10336   */\n      tag_339\n        /* \"#utility.yul\":10332:10335   */\n      dup3\n        /* \"#utility.yul\":10189:10336   */\n      tag_214\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":10182:10336   */\n      swap2\n      pop\n        /* \"#utility.yul\":10353:10356   */\n      dup2\n        /* \"#utility.yul\":10346:10356   */\n      swap1\n      pop\n        /* \"#utility.yul\":9983:10362   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10368:10541   */\n    tag_215:\n        /* \"#utility.yul\":10508:10533   */\n      0x4574686572207769746864726177616c206661696c6564000000000000000000\n        /* \"#utility.yul\":10504:10505   */\n      0x00\n        /* \"#utility.yul\":10496:10502   */\n      dup3\n        /* \"#utility.yul\":10492:10506   */\n      add\n        /* \"#utility.yul\":10485:10534   */\n      mstore\n        /* \"#utility.yul\":10368:10541   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10547:10913   */\n    tag_216:\n        /* \"#utility.yul\":10689:10692   */\n      0x00\n        /* \"#utility.yul\":10710:10777   */\n      tag_342\n        /* \"#utility.yul\":10774:10776   */\n      0x17\n        /* \"#utility.yul\":10769:10772   */\n      dup4\n        /* \"#utility.yul\":10710:10777   */\n      tag_207\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":10703:10777   */\n      swap2\n      pop\n        /* \"#utility.yul\":10786:10879   */\n      tag_343\n        /* \"#utility.yul\":10875:10878   */\n      dup3\n        /* \"#utility.yul\":10786:10879   */\n      tag_215\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":10904:10906   */\n      0x20\n        /* \"#utility.yul\":10899:10902   */\n      dup3\n        /* \"#utility.yul\":10895:10907   */\n      add\n        /* \"#utility.yul\":10888:10907   */\n      swap1\n      pop\n        /* \"#utility.yul\":10547:10913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10919:11338   */\n    tag_84:\n        /* \"#utility.yul\":11085:11089   */\n      0x00\n        /* \"#utility.yul\":11123:11125   */\n      0x20\n        /* \"#utility.yul\":11112:11121   */\n      dup3\n        /* \"#utility.yul\":11108:11126   */\n      add\n        /* \"#utility.yul\":11100:11126   */\n      swap1\n      pop\n        /* \"#utility.yul\":11172:11181   */\n      dup2\n        /* \"#utility.yul\":11166:11170   */\n      dup2\n        /* \"#utility.yul\":11162:11182   */\n      sub\n        /* \"#utility.yul\":11158:11159   */\n      0x00\n        /* \"#utility.yul\":11147:11156   */\n      dup4\n        /* \"#utility.yul\":11143:11160   */\n      add\n        /* \"#utility.yul\":11136:11183   */\n      mstore\n        /* \"#utility.yul\":11200:11331   */\n      tag_345\n        /* \"#utility.yul\":11326:11330   */\n      dup2\n        /* \"#utility.yul\":11200:11331   */\n      tag_216\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":11192:11331   */\n      swap1\n      pop\n        /* \"#utility.yul\":10919:11338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11344:11516   */\n    tag_217:\n        /* \"#utility.yul\":11484:11508   */\n      0x41646472657373206e6f7420617574686f72697a656400000000000000000000\n        /* \"#utility.yul\":11480:11481   */\n      0x00\n        /* \"#utility.yul\":11472:11478   */\n      dup3\n        /* \"#utility.yul\":11468:11482   */\n      add\n        /* \"#utility.yul\":11461:11509   */\n      mstore\n        /* \"#utility.yul\":11344:11516   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11522:11888   */\n    tag_218:\n        /* \"#utility.yul\":11664:11667   */\n      0x00\n        /* \"#utility.yul\":11685:11752   */\n      tag_348\n        /* \"#utility.yul\":11749:11751   */\n      0x16\n        /* \"#utility.yul\":11744:11747   */\n      dup4\n        /* \"#utility.yul\":11685:11752   */\n      tag_207\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":11678:11752   */\n      swap2\n      pop\n        /* \"#utility.yul\":11761:11854   */\n      tag_349\n        /* \"#utility.yul\":11850:11853   */\n      dup3\n        /* \"#utility.yul\":11761:11854   */\n      tag_217\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":11879:11881   */\n      0x20\n        /* \"#utility.yul\":11874:11877   */\n      dup3\n        /* \"#utility.yul\":11870:11882   */\n      add\n        /* \"#utility.yul\":11863:11882   */\n      swap1\n      pop\n        /* \"#utility.yul\":11522:11888   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11894:12313   */\n    tag_94:\n        /* \"#utility.yul\":12060:12064   */\n      0x00\n        /* \"#utility.yul\":12098:12100   */\n      0x20\n        /* \"#utility.yul\":12087:12096   */\n      dup3\n        /* \"#utility.yul\":12083:12101   */\n      add\n        /* \"#utility.yul\":12075:12101   */\n      swap1\n      pop\n        /* \"#utility.yul\":12147:12156   */\n      dup2\n        /* \"#utility.yul\":12141:12145   */\n      dup2\n        /* \"#utility.yul\":12137:12157   */\n      sub\n        /* \"#utility.yul\":12133:12134   */\n      0x00\n        /* \"#utility.yul\":12122:12131   */\n      dup4\n        /* \"#utility.yul\":12118:12135   */\n      add\n        /* \"#utility.yul\":12111:12158   */\n      mstore\n        /* \"#utility.yul\":12175:12306   */\n      tag_351\n        /* \"#utility.yul\":12301:12305   */\n      dup2\n        /* \"#utility.yul\":12175:12306   */\n      tag_218\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":12167:12306   */\n      swap1\n      pop\n        /* \"#utility.yul\":11894:12313   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12319:12483   */\n    tag_219:\n        /* \"#utility.yul\":12459:12475   */\n      0x496e76616c696420746172676574000000000000000000000000000000000000\n        /* \"#utility.yul\":12455:12456   */\n      0x00\n        /* \"#utility.yul\":12447:12453   */\n      dup3\n        /* \"#utility.yul\":12443:12457   */\n      add\n        /* \"#utility.yul\":12436:12476   */\n      mstore\n        /* \"#utility.yul\":12319:12483   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12489:12855   */\n    tag_220:\n        /* \"#utility.yul\":12631:12634   */\n      0x00\n        /* \"#utility.yul\":12652:12719   */\n      tag_354\n        /* \"#utility.yul\":12716:12718   */\n      0x0e\n        /* \"#utility.yul\":12711:12714   */\n      dup4\n        /* \"#utility.yul\":12652:12719   */\n      tag_207\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":12645:12719   */\n      swap2\n      pop\n        /* \"#utility.yul\":12728:12821   */\n      tag_355\n        /* \"#utility.yul\":12817:12820   */\n      dup3\n        /* \"#utility.yul\":12728:12821   */\n      tag_219\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":12846:12848   */\n      0x20\n        /* \"#utility.yul\":12841:12844   */\n      dup3\n        /* \"#utility.yul\":12837:12849   */\n      add\n        /* \"#utility.yul\":12830:12849   */\n      swap1\n      pop\n        /* \"#utility.yul\":12489:12855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12861:13280   */\n    tag_111:\n        /* \"#utility.yul\":13027:13031   */\n      0x00\n        /* \"#utility.yul\":13065:13067   */\n      0x20\n        /* \"#utility.yul\":13054:13063   */\n      dup3\n        /* \"#utility.yul\":13050:13068   */\n      add\n        /* \"#utility.yul\":13042:13068   */\n      swap1\n      pop\n        /* \"#utility.yul\":13114:13123   */\n      dup2\n        /* \"#utility.yul\":13108:13112   */\n      dup2\n        /* \"#utility.yul\":13104:13124   */\n      sub\n        /* \"#utility.yul\":13100:13101   */\n      0x00\n        /* \"#utility.yul\":13089:13098   */\n      dup4\n        /* \"#utility.yul\":13085:13102   */\n      add\n        /* \"#utility.yul\":13078:13125   */\n      mstore\n        /* \"#utility.yul\":13142:13273   */\n      tag_357\n        /* \"#utility.yul\":13268:13272   */\n      dup2\n        /* \"#utility.yul\":13142:13273   */\n      tag_220\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":13134:13273   */\n      swap1\n      pop\n        /* \"#utility.yul\":12861:13280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13286:13432   */\n    tag_221:\n        /* \"#utility.yul\":13383:13389   */\n      dup3\n        /* \"#utility.yul\":13378:13381   */\n      dup2\n        /* \"#utility.yul\":13373:13376   */\n      dup4\n        /* \"#utility.yul\":13360:13390   */\n      calldatacopy\n        /* \"#utility.yul\":13424:13425   */\n      0x00\n        /* \"#utility.yul\":13415:13421   */\n      dup4\n        /* \"#utility.yul\":13410:13413   */\n      dup4\n        /* \"#utility.yul\":13406:13422   */\n      add\n        /* \"#utility.yul\":13399:13426   */\n      mstore\n        /* \"#utility.yul\":13286:13432   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13460:13787   */\n    tag_222:\n        /* \"#utility.yul\":13574:13577   */\n      0x00\n        /* \"#utility.yul\":13595:13683   */\n      tag_360\n        /* \"#utility.yul\":13676:13682   */\n      dup4\n        /* \"#utility.yul\":13671:13674   */\n      dup6\n        /* \"#utility.yul\":13595:13683   */\n      tag_212\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":13588:13683   */\n      swap4\n      pop\n        /* \"#utility.yul\":13693:13749   */\n      tag_361\n        /* \"#utility.yul\":13742:13748   */\n      dup4\n        /* \"#utility.yul\":13737:13740   */\n      dup6\n        /* \"#utility.yul\":13730:13735   */\n      dup5\n        /* \"#utility.yul\":13693:13749   */\n      tag_221\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":13774:13780   */\n      dup3\n        /* \"#utility.yul\":13769:13772   */\n      dup5\n        /* \"#utility.yul\":13765:13781   */\n      add\n        /* \"#utility.yul\":13758:13781   */\n      swap1\n      pop\n        /* \"#utility.yul\":13460:13787   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13793:14084   */\n    tag_113:\n        /* \"#utility.yul\":13933:13936   */\n      0x00\n        /* \"#utility.yul\":13955:14058   */\n      tag_363\n        /* \"#utility.yul\":14054:14057   */\n      dup3\n        /* \"#utility.yul\":14045:14051   */\n      dup5\n        /* \"#utility.yul\":14037:14043   */\n      dup7\n        /* \"#utility.yul\":13955:14058   */\n      tag_222\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":13948:14058   */\n      swap2\n      pop\n        /* \"#utility.yul\":14075:14078   */\n      dup2\n        /* \"#utility.yul\":14068:14078   */\n      swap1\n      pop\n        /* \"#utility.yul\":13793:14084   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14090:14251   */\n    tag_223:\n        /* \"#utility.yul\":14230:14243   */\n      0x43616c6c206661696c6564000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14226:14227   */\n      0x00\n        /* \"#utility.yul\":14218:14224   */\n      dup3\n        /* \"#utility.yul\":14214:14228   */\n      add\n        /* \"#utility.yul\":14207:14244   */\n      mstore\n        /* \"#utility.yul\":14090:14251   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14257:14623   */\n    tag_224:\n        /* \"#utility.yul\":14399:14402   */\n      0x00\n        /* \"#utility.yul\":14420:14487   */\n      tag_366\n        /* \"#utility.yul\":14484:14486   */\n      0x0b\n        /* \"#utility.yul\":14479:14482   */\n      dup4\n        /* \"#utility.yul\":14420:14487   */\n      tag_207\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":14413:14487   */\n      swap2\n      pop\n        /* \"#utility.yul\":14496:14589   */\n      tag_367\n        /* \"#utility.yul\":14585:14588   */\n      dup3\n        /* \"#utility.yul\":14496:14589   */\n      tag_223\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":14614:14616   */\n      0x20\n        /* \"#utility.yul\":14609:14612   */\n      dup3\n        /* \"#utility.yul\":14605:14617   */\n      add\n        /* \"#utility.yul\":14598:14617   */\n      swap1\n      pop\n        /* \"#utility.yul\":14257:14623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14629:15048   */\n    tag_119:\n        /* \"#utility.yul\":14795:14799   */\n      0x00\n        /* \"#utility.yul\":14833:14835   */\n      0x20\n        /* \"#utility.yul\":14822:14831   */\n      dup3\n        /* \"#utility.yul\":14818:14836   */\n      add\n        /* \"#utility.yul\":14810:14836   */\n      swap1\n      pop\n        /* \"#utility.yul\":14882:14891   */\n      dup2\n        /* \"#utility.yul\":14876:14880   */\n      dup2\n        /* \"#utility.yul\":14872:14892   */\n      sub\n        /* \"#utility.yul\":14868:14869   */\n      0x00\n        /* \"#utility.yul\":14857:14866   */\n      dup4\n        /* \"#utility.yul\":14853:14870   */\n      add\n        /* \"#utility.yul\":14846:14893   */\n      mstore\n        /* \"#utility.yul\":14910:15041   */\n      tag_369\n        /* \"#utility.yul\":15036:15040   */\n      dup2\n        /* \"#utility.yul\":14910:15041   */\n      tag_224\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":14902:15041   */\n      swap1\n      pop\n        /* \"#utility.yul\":14629:15048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15076:15390   */\n    tag_225:\n        /* \"#utility.yul\":15172:15175   */\n      0x00\n        /* \"#utility.yul\":15193:15263   */\n      tag_371\n        /* \"#utility.yul\":15256:15262   */\n      dup4\n        /* \"#utility.yul\":15251:15254   */\n      dup6\n        /* \"#utility.yul\":15193:15263   */\n      tag_198\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":15186:15263   */\n      swap4\n      pop\n        /* \"#utility.yul\":15273:15329   */\n      tag_372\n        /* \"#utility.yul\":15322:15328   */\n      dup4\n        /* \"#utility.yul\":15317:15320   */\n      dup6\n        /* \"#utility.yul\":15310:15315   */\n      dup5\n        /* \"#utility.yul\":15273:15329   */\n      tag_221\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":15354:15383   */\n      tag_373\n        /* \"#utility.yul\":15376:15382   */\n      dup4\n        /* \"#utility.yul\":15354:15383   */\n      tag_200\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":15349:15352   */\n      dup5\n        /* \"#utility.yul\":15345:15384   */\n      add\n        /* \"#utility.yul\":15338:15384   */\n      swap1\n      pop\n        /* \"#utility.yul\":15076:15390   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15396:16032   */\n    tag_121:\n        /* \"#utility.yul\":15591:15595   */\n      0x00\n        /* \"#utility.yul\":15629:15631   */\n      0x60\n        /* \"#utility.yul\":15618:15627   */\n      dup3\n        /* \"#utility.yul\":15614:15632   */\n      add\n        /* \"#utility.yul\":15606:15632   */\n      swap1\n      pop\n        /* \"#utility.yul\":15642:15713   */\n      tag_375\n        /* \"#utility.yul\":15710:15711   */\n      0x00\n        /* \"#utility.yul\":15699:15708   */\n      dup4\n        /* \"#utility.yul\":15695:15712   */\n      add\n        /* \"#utility.yul\":15686:15692   */\n      dup8\n        /* \"#utility.yul\":15642:15713   */\n      tag_182\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":15760:15769   */\n      dup2\n        /* \"#utility.yul\":15754:15758   */\n      dup2\n        /* \"#utility.yul\":15750:15770   */\n      sub\n        /* \"#utility.yul\":15745:15747   */\n      0x20\n        /* \"#utility.yul\":15734:15743   */\n      dup4\n        /* \"#utility.yul\":15730:15748   */\n      add\n        /* \"#utility.yul\":15723:15771   */\n      mstore\n        /* \"#utility.yul\":15788:15874   */\n      tag_376\n        /* \"#utility.yul\":15869:15873   */\n      dup2\n        /* \"#utility.yul\":15860:15866   */\n      dup6\n        /* \"#utility.yul\":15852:15858   */\n      dup8\n        /* \"#utility.yul\":15788:15874   */\n      tag_225\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":15780:15874   */\n      swap1\n      pop\n        /* \"#utility.yul\":15921:15930   */\n      dup2\n        /* \"#utility.yul\":15915:15919   */\n      dup2\n        /* \"#utility.yul\":15911:15931   */\n      sub\n        /* \"#utility.yul\":15906:15908   */\n      0x40\n        /* \"#utility.yul\":15895:15904   */\n      dup4\n        /* \"#utility.yul\":15891:15909   */\n      add\n        /* \"#utility.yul\":15884:15932   */\n      mstore\n        /* \"#utility.yul\":15949:16025   */\n      tag_377\n        /* \"#utility.yul\":16020:16024   */\n      dup2\n        /* \"#utility.yul\":16011:16017   */\n      dup5\n        /* \"#utility.yul\":15949:16025   */\n      tag_201\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":15941:16025   */\n      swap1\n      pop\n        /* \"#utility.yul\":15396:16032   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16038:16203   */\n    tag_226:\n        /* \"#utility.yul\":16178:16195   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":16174:16175   */\n      0x00\n        /* \"#utility.yul\":16166:16172   */\n      dup3\n        /* \"#utility.yul\":16162:16176   */\n      add\n        /* \"#utility.yul\":16155:16196   */\n      mstore\n        /* \"#utility.yul\":16038:16203   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16209:16575   */\n    tag_227:\n        /* \"#utility.yul\":16351:16354   */\n      0x00\n        /* \"#utility.yul\":16372:16439   */\n      tag_380\n        /* \"#utility.yul\":16436:16438   */\n      0x0f\n        /* \"#utility.yul\":16431:16434   */\n      dup4\n        /* \"#utility.yul\":16372:16439   */\n      tag_207\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":16365:16439   */\n      swap2\n      pop\n        /* \"#utility.yul\":16448:16541   */\n      tag_381\n        /* \"#utility.yul\":16537:16540   */\n      dup3\n        /* \"#utility.yul\":16448:16541   */\n      tag_226\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":16566:16568   */\n      0x20\n        /* \"#utility.yul\":16561:16564   */\n      dup3\n        /* \"#utility.yul\":16557:16569   */\n      add\n        /* \"#utility.yul\":16550:16569   */\n      swap1\n      pop\n        /* \"#utility.yul\":16209:16575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16581:17000   */\n    tag_128:\n        /* \"#utility.yul\":16747:16751   */\n      0x00\n        /* \"#utility.yul\":16785:16787   */\n      0x20\n        /* \"#utility.yul\":16774:16783   */\n      dup3\n        /* \"#utility.yul\":16770:16788   */\n      add\n        /* \"#utility.yul\":16762:16788   */\n      swap1\n      pop\n        /* \"#utility.yul\":16834:16843   */\n      dup2\n        /* \"#utility.yul\":16828:16832   */\n      dup2\n        /* \"#utility.yul\":16824:16844   */\n      sub\n        /* \"#utility.yul\":16820:16821   */\n      0x00\n        /* \"#utility.yul\":16809:16818   */\n      dup4\n        /* \"#utility.yul\":16805:16822   */\n      add\n        /* \"#utility.yul\":16798:16845   */\n      mstore\n        /* \"#utility.yul\":16862:16993   */\n      tag_383\n        /* \"#utility.yul\":16988:16992   */\n      dup2\n        /* \"#utility.yul\":16862:16993   */\n      tag_227\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":16854:16993   */\n      swap1\n      pop\n        /* \"#utility.yul\":16581:17000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17006:17174   */\n    tag_228:\n        /* \"#utility.yul\":17146:17166   */\n      0x416c726561647920617574686f72697a65640000000000000000000000000000\n        /* \"#utility.yul\":17142:17143   */\n      0x00\n        /* \"#utility.yul\":17134:17140   */\n      dup3\n        /* \"#utility.yul\":17130:17144   */\n      add\n        /* \"#utility.yul\":17123:17167   */\n      mstore\n        /* \"#utility.yul\":17006:17174   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17180:17546   */\n    tag_229:\n        /* \"#utility.yul\":17322:17325   */\n      0x00\n        /* \"#utility.yul\":17343:17410   */\n      tag_386\n        /* \"#utility.yul\":17407:17409   */\n      0x12\n        /* \"#utility.yul\":17402:17405   */\n      dup4\n        /* \"#utility.yul\":17343:17410   */\n      tag_207\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":17336:17410   */\n      swap2\n      pop\n        /* \"#utility.yul\":17419:17512   */\n      tag_387\n        /* \"#utility.yul\":17508:17511   */\n      dup3\n        /* \"#utility.yul\":17419:17512   */\n      tag_228\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":17537:17539   */\n      0x20\n        /* \"#utility.yul\":17532:17535   */\n      dup3\n        /* \"#utility.yul\":17528:17540   */\n      add\n        /* \"#utility.yul\":17521:17540   */\n      swap1\n      pop\n        /* \"#utility.yul\":17180:17546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17552:17971   */\n    tag_131:\n        /* \"#utility.yul\":17718:17722   */\n      0x00\n        /* \"#utility.yul\":17756:17758   */\n      0x20\n        /* \"#utility.yul\":17745:17754   */\n      dup3\n        /* \"#utility.yul\":17741:17759   */\n      add\n        /* \"#utility.yul\":17733:17759   */\n      swap1\n      pop\n        /* \"#utility.yul\":17805:17814   */\n      dup2\n        /* \"#utility.yul\":17799:17803   */\n      dup2\n        /* \"#utility.yul\":17795:17815   */\n      sub\n        /* \"#utility.yul\":17791:17792   */\n      0x00\n        /* \"#utility.yul\":17780:17789   */\n      dup4\n        /* \"#utility.yul\":17776:17793   */\n      add\n        /* \"#utility.yul\":17769:17816   */\n      mstore\n        /* \"#utility.yul\":17833:17964   */\n      tag_389\n        /* \"#utility.yul\":17959:17963   */\n      dup2\n        /* \"#utility.yul\":17833:17964   */\n      tag_229\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":17825:17964   */\n      swap1\n      pop\n        /* \"#utility.yul\":17552:17971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17977:18148   */\n    tag_230:\n        /* \"#utility.yul\":18117:18140   */\n      0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n        /* \"#utility.yul\":18113:18114   */\n      0x00\n        /* \"#utility.yul\":18105:18111   */\n      dup3\n        /* \"#utility.yul\":18101:18115   */\n      add\n        /* \"#utility.yul\":18094:18141   */\n      mstore\n        /* \"#utility.yul\":17977:18148   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18154:18520   */\n    tag_231:\n        /* \"#utility.yul\":18296:18299   */\n      0x00\n        /* \"#utility.yul\":18317:18384   */\n      tag_392\n        /* \"#utility.yul\":18381:18383   */\n      0x15\n        /* \"#utility.yul\":18376:18379   */\n      dup4\n        /* \"#utility.yul\":18317:18384   */\n      tag_207\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":18310:18384   */\n      swap2\n      pop\n        /* \"#utility.yul\":18393:18486   */\n      tag_393\n        /* \"#utility.yul\":18482:18485   */\n      dup3\n        /* \"#utility.yul\":18393:18486   */\n      tag_230\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":18511:18513   */\n      0x20\n        /* \"#utility.yul\":18506:18509   */\n      dup3\n        /* \"#utility.yul\":18502:18514   */\n      add\n        /* \"#utility.yul\":18495:18514   */\n      swap1\n      pop\n        /* \"#utility.yul\":18154:18520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18526:18945   */\n    tag_148:\n        /* \"#utility.yul\":18692:18696   */\n      0x00\n        /* \"#utility.yul\":18730:18732   */\n      0x20\n        /* \"#utility.yul\":18719:18728   */\n      dup3\n        /* \"#utility.yul\":18715:18733   */\n      add\n        /* \"#utility.yul\":18707:18733   */\n      swap1\n      pop\n        /* \"#utility.yul\":18779:18788   */\n      dup2\n        /* \"#utility.yul\":18773:18777   */\n      dup2\n        /* \"#utility.yul\":18769:18789   */\n      sub\n        /* \"#utility.yul\":18765:18766   */\n      0x00\n        /* \"#utility.yul\":18754:18763   */\n      dup4\n        /* \"#utility.yul\":18750:18767   */\n      add\n        /* \"#utility.yul\":18743:18790   */\n      mstore\n        /* \"#utility.yul\":18807:18938   */\n      tag_395\n        /* \"#utility.yul\":18933:18937   */\n      dup2\n        /* \"#utility.yul\":18807:18938   */\n      tag_231\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":18799:18938   */\n      swap1\n      pop\n        /* \"#utility.yul\":18526:18945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18951:19126   */\n    tag_232:\n        /* \"#utility.yul\":19091:19118   */\n      0x496e76616c696420726563697069656e74206164647265737300000000000000\n        /* \"#utility.yul\":19087:19088   */\n      0x00\n        /* \"#utility.yul\":19079:19085   */\n      dup3\n        /* \"#utility.yul\":19075:19089   */\n      add\n        /* \"#utility.yul\":19068:19119   */\n      mstore\n        /* \"#utility.yul\":18951:19126   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19132:19498   */\n    tag_233:\n        /* \"#utility.yul\":19274:19277   */\n      0x00\n        /* \"#utility.yul\":19295:19362   */\n      tag_398\n        /* \"#utility.yul\":19359:19361   */\n      0x19\n        /* \"#utility.yul\":19354:19357   */\n      dup4\n        /* \"#utility.yul\":19295:19362   */\n      tag_207\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":19288:19362   */\n      swap2\n      pop\n        /* \"#utility.yul\":19371:19464   */\n      tag_399\n        /* \"#utility.yul\":19460:19463   */\n      dup3\n        /* \"#utility.yul\":19371:19464   */\n      tag_232\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":19489:19491   */\n      0x20\n        /* \"#utility.yul\":19484:19487   */\n      dup3\n        /* \"#utility.yul\":19480:19492   */\n      add\n        /* \"#utility.yul\":19473:19492   */\n      swap1\n      pop\n        /* \"#utility.yul\":19132:19498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19504:19923   */\n    tag_151:\n        /* \"#utility.yul\":19670:19674   */\n      0x00\n        /* \"#utility.yul\":19708:19710   */\n      0x20\n        /* \"#utility.yul\":19697:19706   */\n      dup3\n        /* \"#utility.yul\":19693:19711   */\n      add\n        /* \"#utility.yul\":19685:19711   */\n      swap1\n      pop\n        /* \"#utility.yul\":19757:19766   */\n      dup2\n        /* \"#utility.yul\":19751:19755   */\n      dup2\n        /* \"#utility.yul\":19747:19767   */\n      sub\n        /* \"#utility.yul\":19743:19744   */\n      0x00\n        /* \"#utility.yul\":19732:19741   */\n      dup4\n        /* \"#utility.yul\":19728:19745   */\n      add\n        /* \"#utility.yul\":19721:19768   */\n      mstore\n        /* \"#utility.yul\":19785:19916   */\n      tag_401\n        /* \"#utility.yul\":19911:19915   */\n      dup2\n        /* \"#utility.yul\":19785:19916   */\n      tag_233\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":19777:19916   */\n      swap1\n      pop\n        /* \"#utility.yul\":19504:19923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19929:20110   */\n    tag_234:\n        /* \"#utility.yul\":20069:20102   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":20065:20066   */\n      0x00\n        /* \"#utility.yul\":20057:20063   */\n      dup3\n        /* \"#utility.yul\":20053:20067   */\n      add\n        /* \"#utility.yul\":20046:20103   */\n      mstore\n        /* \"#utility.yul\":19929:20110   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20116:20482   */\n    tag_235:\n        /* \"#utility.yul\":20258:20261   */\n      0x00\n        /* \"#utility.yul\":20279:20346   */\n      tag_404\n        /* \"#utility.yul\":20343:20345   */\n      0x1f\n        /* \"#utility.yul\":20338:20341   */\n      dup4\n        /* \"#utility.yul\":20279:20346   */\n      tag_207\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":20272:20346   */\n      swap2\n      pop\n        /* \"#utility.yul\":20355:20448   */\n      tag_405\n        /* \"#utility.yul\":20444:20447   */\n      dup3\n        /* \"#utility.yul\":20355:20448   */\n      tag_234\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":20473:20475   */\n      0x20\n        /* \"#utility.yul\":20468:20471   */\n      dup3\n        /* \"#utility.yul\":20464:20476   */\n      add\n        /* \"#utility.yul\":20457:20476   */\n      swap1\n      pop\n        /* \"#utility.yul\":20116:20482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20488:20907   */\n    tag_159:\n        /* \"#utility.yul\":20654:20658   */\n      0x00\n        /* \"#utility.yul\":20692:20694   */\n      0x20\n        /* \"#utility.yul\":20681:20690   */\n      dup3\n        /* \"#utility.yul\":20677:20695   */\n      add\n        /* \"#utility.yul\":20669:20695   */\n      swap1\n      pop\n        /* \"#utility.yul\":20741:20750   */\n      dup2\n        /* \"#utility.yul\":20735:20739   */\n      dup2\n        /* \"#utility.yul\":20731:20751   */\n      sub\n        /* \"#utility.yul\":20727:20728   */\n      0x00\n        /* \"#utility.yul\":20716:20725   */\n      dup4\n        /* \"#utility.yul\":20712:20729   */\n      add\n        /* \"#utility.yul\":20705:20752   */\n      mstore\n        /* \"#utility.yul\":20769:20900   */\n      tag_407\n        /* \"#utility.yul\":20895:20899   */\n      dup2\n        /* \"#utility.yul\":20769:20900   */\n      tag_235\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":20761:20900   */\n      swap1\n      pop\n        /* \"#utility.yul\":20488:20907   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20913:21245   */\n    tag_172:\n        /* \"#utility.yul\":21034:21038   */\n      0x00\n        /* \"#utility.yul\":21072:21074   */\n      0x40\n        /* \"#utility.yul\":21061:21070   */\n      dup3\n        /* \"#utility.yul\":21057:21075   */\n      add\n        /* \"#utility.yul\":21049:21075   */\n      swap1\n      pop\n        /* \"#utility.yul\":21085:21156   */\n      tag_409\n        /* \"#utility.yul\":21153:21154   */\n      0x00\n        /* \"#utility.yul\":21142:21151   */\n      dup4\n        /* \"#utility.yul\":21138:21155   */\n      add\n        /* \"#utility.yul\":21129:21135   */\n      dup6\n        /* \"#utility.yul\":21085:21156   */\n      tag_192\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":21166:21238   */\n      tag_410\n        /* \"#utility.yul\":21234:21236   */\n      0x20\n        /* \"#utility.yul\":21223:21232   */\n      dup4\n        /* \"#utility.yul\":21219:21237   */\n      add\n        /* \"#utility.yul\":21210:21216   */\n      dup5\n        /* \"#utility.yul\":21166:21238   */\n      tag_182\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":20913:21245   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cda063e044e8a2789d233ff6e2c7726297be6f2e1e31b783be08d74196b3f49e64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_916": {
									"entryPoint": null,
									"id": 916,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 164,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:590:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:10",
														"type": ""
													}
												],
												"src": "139:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:10",
														"type": ""
													}
												],
												"src": "241:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:10",
														"type": ""
													}
												],
												"src": "365:222:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000085575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200007c9190620001a8565b60405180910390fd5b6200009681620000a460201b60201c565b5060018081905550620001c3565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001908262000165565b9050919050565b620001a28162000184565b82525050565b5f602082019050620001bd5f83018462000197565b92915050565b61191580620001d15f395ff3fe608060405260043610610089575f3560e01c80639e5d4c49116100585780639e5d4c49146101be578063b9181611146101fa578063cf1c316a14610236578063f2fde38b1461025e578063f5537ede14610286576100de565b80633bed33ce1461012e578063485d7d9414610156578063715018a61461017e5780638da5cb5b14610194576100de565b366100de573373ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874346040516100d49190610fd7565b60405180910390a2005b3373ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874346040516101249190610fd7565b60405180910390a2005b348015610139575f80fd5b50610154600480360381019061014f9190611022565b6102ae565b005b348015610161575f80fd5b5061017c600480360381019061017791906110a7565b6104c1565b005b348015610189575f80fd5b506101926105ec565b005b34801561019f575f80fd5b506101a86105ff565b6040516101b591906110e1565b60405180910390f35b3480156101c9575f80fd5b506101e460048036038101906101df919061115b565b610626565b6040516101f19190611256565b60405180910390f35b348015610205575f80fd5b50610220600480360381019061021b91906110a7565b61087b565b60405161022d9190611290565b60405180910390f35b348015610241575f80fd5b5061025c600480360381019061025791906110a7565b610898565b005b348015610269575f80fd5b50610284600480360381019061027f91906110a7565b610a33565b005b348015610291575f80fd5b506102ac60048036038101906102a791906112e4565b610ab7565b005b6102b66105ff565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610335575060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036b9061138e565b60405180910390fd5b61037c610cfe565b804710156103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b6906113f6565b60405180910390fd5b5f3373ffffffffffffffffffffffffffffffffffffffff16826040516103e490611441565b5f6040518083038185875af1925050503d805f811461041e576040519150601f19603f3d011682016040523d82523d5f602084013e610423565b606091505b5050905080610467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045e9061149f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f06097061aeda806b5e9cb4133d9899f332ff0913956567fc0f7ea15e3d19947c836040516104ad9190610fd7565b60405180910390a2506104be610d4d565b50565b6104c9610d56565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054990611507565b60405180910390fd5b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f0fafd0343e6c6f6985727574866da48938c918559eb9521cf9cc0d317ea0f7b460405160405180910390a250565b6105f4610d56565b6105fd5f610ddd565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606106306105ff565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106af575060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b6106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e59061138e565b60405180910390fd5b6106f6610cfe565b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b9061156f565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff1686868660405161078e9291906115bf565b5f6040518083038185875af1925050503d805f81146107c8576040519150601f19603f3d011682016040523d82523d5f602084013e6107cd565b606091505b509150915081610812576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080990611621565b60405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff167fe39b605d485d947e52b62c3b5028a14d5277db44425263c74171a857071543348787878560405161085e949392919061166b565b60405180910390a28092505050610873610d4d565b949350505050565b6002602052805f5260405f205f915054906101000a900460ff1681565b6108a0610d56565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361090e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610905906116fa565b60405180910390fd5b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610998576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098f90611762565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fdd10d14f6ac19e913d4edbb11fd30661531e2ccd0d23f571e9b224f001f0dd0660405160405180910390a250565b610a3b610d56565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610aab575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610aa291906110e1565b60405180910390fd5b610ab481610ddd565b50565b610abf6105ff565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b3e575060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b749061138e565b60405180910390fd5b610b85610cfe565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bea906117ca565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5890611832565b60405180910390fd5b610c8c82828573ffffffffffffffffffffffffffffffffffffffff16610e9e9092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f9c8515990fd8c61431c4ac8db9b81475f90c292a1dda77731e56c22e64fc764383604051610ce99190610fd7565b60405180910390a3610cf9610d4d565b505050565b600260015403610d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3a9061189a565b60405180910390fd5b6002600181905550565b60018081905550565b610d5e610f1d565b73ffffffffffffffffffffffffffffffffffffffff16610d7c6105ff565b73ffffffffffffffffffffffffffffffffffffffff1614610ddb57610d9f610f1d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610dd291906110e1565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f18838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610ed19291906118b8565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f24565b505050565b5f33905090565b5f8060205f8451602086015f885af180610f43576040513d5f823e3d81fd5b3d92505f519150505f8214610f5c576001811415610f77565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610fb957836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610fb091906110e1565b60405180910390fd5b50505050565b5f819050919050565b610fd181610fbf565b82525050565b5f602082019050610fea5f830184610fc8565b92915050565b5f80fd5b5f80fd5b61100181610fbf565b811461100b575f80fd5b50565b5f8135905061101c81610ff8565b92915050565b5f6020828403121561103757611036610ff0565b5b5f6110448482850161100e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110768261104d565b9050919050565b6110868161106c565b8114611090575f80fd5b50565b5f813590506110a18161107d565b92915050565b5f602082840312156110bc576110bb610ff0565b5b5f6110c984828501611093565b91505092915050565b6110db8161106c565b82525050565b5f6020820190506110f45f8301846110d2565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261111b5761111a6110fa565b5b8235905067ffffffffffffffff811115611138576111376110fe565b5b60208301915083600182028301111561115457611153611102565b5b9250929050565b5f805f806060858703121561117357611172610ff0565b5b5f61118087828801611093565b94505060206111918782880161100e565b935050604085013567ffffffffffffffff8111156111b2576111b1610ff4565b5b6111be87828801611106565b925092505092959194509250565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156112035780820151818401526020810190506111e8565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611228826111cc565b61123281856111d6565b93506112428185602086016111e6565b61124b8161120e565b840191505092915050565b5f6020820190508181035f83015261126e818461121e565b905092915050565b5f8115159050919050565b61128a81611276565b82525050565b5f6020820190506112a35f830184611281565b92915050565b5f6112b38261106c565b9050919050565b6112c3816112a9565b81146112cd575f80fd5b50565b5f813590506112de816112ba565b92915050565b5f805f606084860312156112fb576112fa610ff0565b5b5f611308868287016112d0565b935050602061131986828701611093565b925050604061132a8682870161100e565b9150509250925092565b5f82825260208201905092915050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f611378600e83611334565b915061138382611344565b602082019050919050565b5f6020820190508181035f8301526113a58161136c565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6113e0601483611334565b91506113eb826113ac565b602082019050919050565b5f6020820190508181035f83015261140d816113d4565b9050919050565b5f81905092915050565b50565b5f61142c5f83611414565b91506114378261141e565b5f82019050919050565b5f61144b82611421565b9150819050919050565b7f4574686572207769746864726177616c206661696c65640000000000000000005f82015250565b5f611489601783611334565b915061149482611455565b602082019050919050565b5f6020820190508181035f8301526114b68161147d565b9050919050565b7f41646472657373206e6f7420617574686f72697a6564000000000000000000005f82015250565b5f6114f1601683611334565b91506114fc826114bd565b602082019050919050565b5f6020820190508181035f83015261151e816114e5565b9050919050565b7f496e76616c6964207461726765740000000000000000000000000000000000005f82015250565b5f611559600e83611334565b915061156482611525565b602082019050919050565b5f6020820190508181035f8301526115868161154d565b9050919050565b828183375f83830152505050565b5f6115a68385611414565b93506115b383858461158d565b82840190509392505050565b5f6115cb82848661159b565b91508190509392505050565b7f43616c6c206661696c65640000000000000000000000000000000000000000005f82015250565b5f61160b600b83611334565b9150611616826115d7565b602082019050919050565b5f6020820190508181035f830152611638816115ff565b9050919050565b5f61164a83856111d6565b935061165783858461158d565b6116608361120e565b840190509392505050565b5f60608201905061167e5f830187610fc8565b818103602083015261169181858761163f565b905081810360408301526116a5818461121e565b905095945050505050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f6116e4600f83611334565b91506116ef826116b0565b602082019050919050565b5f6020820190508181035f830152611711816116d8565b9050919050565b7f416c726561647920617574686f72697a656400000000000000000000000000005f82015250565b5f61174c601283611334565b915061175782611718565b602082019050919050565b5f6020820190508181035f83015261177981611740565b9050919050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f6117b4601583611334565b91506117bf82611780565b602082019050919050565b5f6020820190508181035f8301526117e1816117a8565b9050919050565b7f496e76616c696420726563697069656e742061646472657373000000000000005f82015250565b5f61181c601983611334565b9150611827826117e8565b602082019050919050565b5f6020820190508181035f83015261184981611810565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611884601f83611334565b915061188f82611850565b602082019050919050565b5f6020820190508181035f8301526118b181611878565b9050919050565b5f6040820190506118cb5f8301856110d2565b6118d86020830184610fc8565b939250505056fea2646970667358221220cda063e044e8a2789d233ff6e2c7726297be6f2e1e31b783be08d74196b3f49e64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x85 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7C SWAP2 SWAP1 PUSH3 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x96 DUP2 PUSH3 0xA4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH3 0x1C3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x190 DUP3 PUSH3 0x165 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1A2 DUP2 PUSH3 0x184 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1BD PUSH0 DUP4 ADD DUP5 PUSH3 0x197 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1915 DUP1 PUSH3 0x1D1 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x89 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5D4C49 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xCF1C316A EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF5537EDE EQ PUSH2 0x286 JUMPI PUSH2 0xDE JUMP JUMPDEST DUP1 PUSH4 0x3BED33CE EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x485D7D94 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x194 JUMPI PUSH2 0xDE JUMP JUMPDEST CALLDATASIZE PUSH2 0xDE JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x2AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x5EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x115B JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1290 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B6 PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x335 JUMPI POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x374 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36B SWAP1 PUSH2 0x138E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x37C PUSH2 0xCFE JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x423 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45E SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6097061AEDA806B5E9CB4133D9899F332FF0913956567FC0F7EA15E3D19947C DUP4 PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x4BE PUSH2 0xD4D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4C9 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x549 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFAFD0343E6C6F6985727574866DA48938C918559EB9521CF9CC0D317EA0F7B4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x5F4 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x5FD PUSH0 PUSH2 0xDDD JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x630 PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6AF JUMPI POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E5 SWAP1 PUSH2 0x138E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F6 PUSH2 0xCFE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75B SWAP1 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x78E SWAP3 SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP1 PUSH2 0x1621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE39B605D485D947E52B62C3B5028A14D5277DB44425263C74171A85707154334 DUP8 DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x85E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP3 POP POP POP PUSH2 0x873 PUSH2 0xD4D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0xD56 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x905 SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x998 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98F SWAP1 PUSH2 0x1762 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDD10D14F6AC19E913D4EDBB11FD30661531E2CCD0D23F571E9B224F001F0DD06 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xD56 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAAB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA2 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB4 DUP2 PUSH2 0xDDD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xABF PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB3E JUMPI POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB74 SWAP1 PUSH2 0x138E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB85 PUSH2 0xCFE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP1 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC58 SWAP1 PUSH2 0x1832 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8C DUP3 DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9C8515990FD8C61431C4AC8DB9B81475F90C292A1DDA77731E56C22E64FC7643 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xCF9 PUSH2 0xD4D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3A SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD5E PUSH2 0xF1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD7C PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDDB JUMPI PUSH2 0xD9F PUSH2 0xF1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD2 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF18 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xED1 SWAP3 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF24 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xF43 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xF5C JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xF77 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xFB9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD1 DUP2 PUSH2 0xFBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFEA PUSH0 DUP4 ADD DUP5 PUSH2 0xFC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1001 DUP2 PUSH2 0xFBF JUMP JUMPDEST DUP2 EQ PUSH2 0x100B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x101C DUP2 PUSH2 0xFF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1037 JUMPI PUSH2 0x1036 PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1044 DUP5 DUP3 DUP6 ADD PUSH2 0x100E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1076 DUP3 PUSH2 0x104D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1086 DUP2 PUSH2 0x106C JUMP JUMPDEST DUP2 EQ PUSH2 0x1090 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10A1 DUP2 PUSH2 0x107D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BC JUMPI PUSH2 0x10BB PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C9 DUP5 DUP3 DUP6 ADD PUSH2 0x1093 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10DB DUP2 PUSH2 0x106C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x10D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x111B JUMPI PUSH2 0x111A PUSH2 0x10FA JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1138 JUMPI PUSH2 0x1137 PUSH2 0x10FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1154 JUMPI PUSH2 0x1153 PUSH2 0x1102 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1173 JUMPI PUSH2 0x1172 PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1180 DUP8 DUP3 DUP9 ADD PUSH2 0x1093 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1191 DUP8 DUP3 DUP9 ADD PUSH2 0x100E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B2 JUMPI PUSH2 0x11B1 PUSH2 0xFF4 JUMP JUMPDEST JUMPDEST PUSH2 0x11BE DUP8 DUP3 DUP9 ADD PUSH2 0x1106 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1203 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11E8 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1228 DUP3 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x1232 DUP2 DUP6 PUSH2 0x11D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1242 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11E6 JUMP JUMPDEST PUSH2 0x124B DUP2 PUSH2 0x120E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x126E DUP2 DUP5 PUSH2 0x121E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128A DUP2 PUSH2 0x1276 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1281 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12B3 DUP3 PUSH2 0x106C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C3 DUP2 PUSH2 0x12A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x12CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12DE DUP2 PUSH2 0x12BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12FB JUMPI PUSH2 0x12FA PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1308 DUP7 DUP3 DUP8 ADD PUSH2 0x12D0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1319 DUP7 DUP3 DUP8 ADD PUSH2 0x1093 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x132A DUP7 DUP3 DUP8 ADD PUSH2 0x100E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1378 PUSH1 0xE DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x1383 DUP3 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13A5 DUP2 PUSH2 0x136C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13E0 PUSH1 0x14 DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x13EB DUP3 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x140D DUP2 PUSH2 0x13D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x142C PUSH0 DUP4 PUSH2 0x1414 JUMP JUMPDEST SWAP2 POP PUSH2 0x1437 DUP3 PUSH2 0x141E JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x144B DUP3 PUSH2 0x1421 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207769746864726177616C206661696C6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1489 PUSH1 0x17 DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x1494 DUP3 PUSH2 0x1455 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14B6 DUP2 PUSH2 0x147D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646472657373206E6F7420617574686F72697A656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14F1 PUSH1 0x16 DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x14FC DUP3 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x151E DUP2 PUSH2 0x14E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746172676574000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1559 PUSH1 0xE DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x1564 DUP3 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1586 DUP2 PUSH2 0x154D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15A6 DUP4 DUP6 PUSH2 0x1414 JUMP JUMPDEST SWAP4 POP PUSH2 0x15B3 DUP4 DUP6 DUP5 PUSH2 0x158D JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15CB DUP3 DUP5 DUP7 PUSH2 0x159B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43616C6C206661696C6564000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x160B PUSH1 0xB DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x1616 DUP3 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1638 DUP2 PUSH2 0x15FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x164A DUP4 DUP6 PUSH2 0x11D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1657 DUP4 DUP6 DUP5 PUSH2 0x158D JUMP JUMPDEST PUSH2 0x1660 DUP4 PUSH2 0x120E JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x167E PUSH0 DUP4 ADD DUP8 PUSH2 0xFC8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1691 DUP2 DUP6 DUP8 PUSH2 0x163F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x16A5 DUP2 DUP5 PUSH2 0x121E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16E4 PUSH1 0xF DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EF DUP3 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1711 DUP2 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920617574686F72697A65640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x174C PUSH1 0x12 DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x1757 DUP3 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1779 DUP2 PUSH2 0x1740 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17B4 PUSH1 0x15 DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x17BF DUP3 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17E1 DUP2 PUSH2 0x17A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x181C PUSH1 0x19 DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x1827 DUP3 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1849 DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1884 PUSH1 0x1F DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x188F DUP3 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18B1 DUP2 PUSH2 0x1878 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18CB PUSH0 DUP4 ADD DUP6 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x18D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFC8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD LOG0 PUSH4 0xE044E8A2 PUSH25 0x9D233FF6E2C7726297BE6F2E1E31B783BE08D74196B3F49E64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "588:3749:9:-:0;;;1521:78;;;;;;;;;;1543:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;588:3749:9;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;588:3749:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1144": {
									"entryPoint": null,
									"id": 1144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1156": {
									"entryPoint": null,
									"id": 1156,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_747": {
									"entryPoint": 3876,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3414,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_801": {
									"entryPoint": 3869,
									"id": 801,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 3405,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 3326,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3549,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addAuthorized_953": {
									"entryPoint": 2200,
									"id": 953,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@authorized_850": {
									"entryPoint": 2171,
									"id": 850,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@executeCall_1031": {
									"entryPoint": 1574,
									"id": 1031,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1535,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeAuthorized_979": {
									"entryPoint": 1217,
									"id": 979,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1516,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 3742,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2611,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferToken_1132": {
									"entryPoint": 2743,
									"id": 1132,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdrawEther_1077": {
									"entryPoint": 686,
									"id": 1077,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 4358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_contract$_IERC20_$380": {
									"entryPoint": 4816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 4443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_contract$_IERC20_$380t_addresst_uint256": {
									"entryPoint": 4836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5531,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5739,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$380": {
									"entryPoint": 4777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5517,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4582,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 4350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4346,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4354,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4084,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b": {
									"entryPoint": 5591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 5808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2": {
									"entryPoint": 5413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 5036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc": {
									"entryPoint": 5205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df": {
									"entryPoint": 6120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d": {
									"entryPoint": 5309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2": {
									"entryPoint": 5912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 5150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 6224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36": {
									"entryPoint": 4932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$380": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21248:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:10",
														"type": ""
													}
												],
												"src": "442:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:10"
															},
															"nodeType": "YulIf",
															"src": "822:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:10",
														"type": ""
													}
												],
												"src": "769:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:10",
														"type": ""
													}
												],
												"src": "897:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:10"
															},
															"nodeType": "YulIf",
															"src": "1118:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:10",
														"type": ""
													}
												],
												"src": "1042:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:10",
														"type": ""
													}
												],
												"src": "1377:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:10",
														"type": ""
													}
												],
												"src": "1509:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:10"
															},
															"nodeType": "YulIf",
															"src": "1664:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:10",
														"type": ""
													}
												],
												"src": "1611:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:10",
														"type": ""
													}
												],
												"src": "1739:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:10"
															},
															"nodeType": "YulIf",
															"src": "1960:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2089:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:10",
														"type": ""
													}
												],
												"src": "1884:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2284:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2301:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2324:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2306:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2272:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2279:3:10",
														"type": ""
													}
												],
												"src": "2219:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2441:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2451:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2474:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2459:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2459:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2451:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2544:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2555:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2540:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2487:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2487:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2487:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2413:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2425:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2436:4:10",
														"type": ""
													}
												],
												"src": "2343:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2660:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2677:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2680:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2670:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2670:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2670:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2571:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2783:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2800:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2803:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2793:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2793:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2793:12:10"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "2694:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2906:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2923:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2926:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2916:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2916:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "2817:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3027:478:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3076:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3078:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3078:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3078:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3055:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3063:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3051:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3051:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3070:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3047:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3040:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:35:10"
															},
															"nodeType": "YulIf",
															"src": "3037:122:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3168:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3191:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3178:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3178:20:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3241:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "3243:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3243:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3243:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3213:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3221:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3210:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3210:30:10"
															},
															"nodeType": "YulIf",
															"src": "3207:117:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3333:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3349:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3357:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3345:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3345:17:10"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "3333:8:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3416:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "3418:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3418:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3418:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "3381:8:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3395:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3403:4:10",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3391:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3391:17:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3377:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3377:32:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3411:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3374:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3374:41:10"
															},
															"nodeType": "YulIf",
															"src": "3371:128:10"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2994:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3002:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "3010:8:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3020:6:10",
														"type": ""
													}
												],
												"src": "2953:552:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3630:698:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3676:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3678:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3678:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3678:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3651:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3660:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3672:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3643:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3643:32:10"
															},
															"nodeType": "YulIf",
															"src": "3640:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3769:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3784:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3798:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3788:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3813:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3848:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3859:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3844:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3844:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3868:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3823:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3823:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3813:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3896:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3925:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3941:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3976:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3987:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3972:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3972:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3996:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3951:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3951:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3941:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4024:297:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4039:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4070:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4081:2:10",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4066:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4066:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4053:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4053:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4043:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4132:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4134:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4134:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4134:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4104:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4112:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4101:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4101:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "4098:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4229:82:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4283:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4294:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4279:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4279:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4303:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4247:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4247:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4229:6:10"
																		},
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4237:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3576:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3587:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3599:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3607:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3615:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3623:6:10",
														"type": ""
													}
												],
												"src": "3511:817:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4392:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4403:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4419:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4413:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4403:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4375:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4385:6:10",
														"type": ""
													}
												],
												"src": "4334:98:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4533:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4550:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4555:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4543:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4543:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4543:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4571:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4590:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4595:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4586:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4571:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4505:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4510:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4521:11:10",
														"type": ""
													}
												],
												"src": "4438:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4674:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4684:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4693:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4688:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4753:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4778:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4783:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4774:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4774:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4797:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4802:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4793:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4793:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4787:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4787:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4767:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4767:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4767:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4714:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4717:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4711:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4711:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4725:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4727:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4736:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4739:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4732:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4732:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4727:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4707:3:10",
																"statements": []
															},
															"src": "4703:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4836:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4841:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4832:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4832:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4850:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4825:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4825:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4825:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4656:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4661:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4666:6:10",
														"type": ""
													}
												],
												"src": "4612:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4912:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4922:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4940:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4947:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4956:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4952:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4952:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4895:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4905:6:10",
														"type": ""
													}
												],
												"src": "4864:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5062:283:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5072:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5118:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5086:31:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5086:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5076:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5133:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5198:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5203:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5140:57:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5140:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5133:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5258:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5265:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5254:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5254:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5272:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5277:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5219:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5219:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5219:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5293:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5304:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5331:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5309:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5309:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5300:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5293:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5043:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5050:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5058:3:10",
														"type": ""
													}
												],
												"src": "4972:373:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5467:193:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5477:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5489:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5500:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5485:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5485:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5477:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5524:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5535:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5520:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5520:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5543:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5549:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5539:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5539:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5513:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5513:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5513:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5569:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5639:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5648:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5577:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5577:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5569:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5439:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5451:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5462:4:10",
														"type": ""
													}
												],
												"src": "5351:309:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5708:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5718:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5743:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5736:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5736:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5729:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5729:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5718:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5690:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5700:7:10",
														"type": ""
													}
												],
												"src": "5666:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5821:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5838:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5858:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5843:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5843:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5831:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5831:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5831:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5809:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5816:3:10",
														"type": ""
													}
												],
												"src": "5762:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5969:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5979:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5991:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6002:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5987:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5987:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5979:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6053:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6066:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6077:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6062:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6062:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6015:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6015:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6015:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5941:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5953:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5964:4:10",
														"type": ""
													}
												],
												"src": "5877:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6152:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6162:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6191:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6173:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6173:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6162:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$380",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6134:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6144:7:10",
														"type": ""
													}
												],
												"src": "6093:110:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6266:93:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6337:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6346:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6349:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6339:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6339:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6339:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6289:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6328:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$380",
																					"nodeType": "YulIdentifier",
																					"src": "6296:31:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6296:38:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6286:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6286:49:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6279:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6279:57:10"
															},
															"nodeType": "YulIf",
															"src": "6276:77:10"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$380",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6259:5:10",
														"type": ""
													}
												],
												"src": "6209:150:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6431:101:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6441:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6463:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6450:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6450:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6441:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6520:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$380",
																	"nodeType": "YulIdentifier",
																	"src": "6479:40:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6479:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6479:47:10"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$380",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6409:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6417:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6425:5:10",
														"type": ""
													}
												],
												"src": "6365:167:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6652:533:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6698:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6700:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6700:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6700:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6673:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6682:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6669:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6669:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6694:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6665:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6665:32:10"
															},
															"nodeType": "YulIf",
															"src": "6662:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "6791:131:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6806:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6820:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6810:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6835:77:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6884:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6895:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6880:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6880:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6904:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$380",
																			"nodeType": "YulIdentifier",
																			"src": "6845:34:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6845:67:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6835:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6932:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6947:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6961:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6951:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6977:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7012:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7023:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7008:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7008:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7032:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6987:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6987:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6977:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7060:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7075:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7089:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7079:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7105:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7140:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7151:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7136:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7136:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7160:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7115:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7115:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7105:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$380t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6606:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6617:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6629:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6637:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6645:6:10",
														"type": ""
													}
												],
												"src": "6538:647:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7287:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7304:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7309:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7297:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7297:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7297:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7325:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7344:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7340:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7340:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7325:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7259:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7264:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7275:11:10",
														"type": ""
													}
												],
												"src": "7191:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7472:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7494:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7502:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7490:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7490:14:10"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7506:16:10",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7483:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7483:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7483:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7464:6:10",
														"type": ""
													}
												],
												"src": "7366:164:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7682:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7692:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7758:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7763:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7699:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7699:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7692:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7864:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																	"nodeType": "YulIdentifier",
																	"src": "7775:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7775:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7775:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7877:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7888:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7893:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7884:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7884:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7877:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7670:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7678:3:10",
														"type": ""
													}
												],
												"src": "7536:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8079:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8089:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8101:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8112:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8097:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8097:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8089:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8136:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8147:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8132:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8132:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8155:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8161:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8151:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8151:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8125:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8125:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8125:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8181:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8315:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8189:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8189:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8181:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8059:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8074:4:10",
														"type": ""
													}
												],
												"src": "7908:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8439:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8461:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8469:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8457:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8457:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8473:22:10",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8450:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8450:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8450:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8431:6:10",
														"type": ""
													}
												],
												"src": "8333:170:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8655:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8665:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8731:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8736:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8672:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8672:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8665:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8837:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "8748:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8748:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8748:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8850:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8861:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8866:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8857:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8857:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8850:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8643:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8651:3:10",
														"type": ""
													}
												],
												"src": "8509:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9052:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9062:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9074:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9085:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9070:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9070:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9062:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9109:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9120:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9105:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9105:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9128:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9134:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9124:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9124:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9098:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9098:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9098:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9154:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9288:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9162:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9162:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9154:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9032:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9047:4:10",
														"type": ""
													}
												],
												"src": "8881:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9419:34:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9429:18:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9444:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9429:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9391:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9396:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9407:11:10",
														"type": ""
													}
												],
												"src": "9306:147:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9565:8:10",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9557:6:10",
														"type": ""
													}
												],
												"src": "9459:114:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9742:235:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9752:90:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9835:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9840:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9759:75:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9759:83:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9752:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9940:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "9851:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9851:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9851:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9953:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9964:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9969:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9960:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9960:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9953:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9730:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9738:3:10",
														"type": ""
													}
												],
												"src": "9579:398:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10171:191:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10182:154:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10332:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10189:141:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10189:147:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10182:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10346:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10353:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10346:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10158:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10167:3:10",
														"type": ""
													}
												],
												"src": "9983:379:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10474:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10496:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10504:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10492:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10492:14:10"
																	},
																	{
																		"hexValue": "4574686572207769746864726177616c206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10508:25:10",
																		"type": "",
																		"value": "Ether withdrawal failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10485:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10485:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10485:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10466:6:10",
														"type": ""
													}
												],
												"src": "10368:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10693:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10703:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10769:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10774:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10710:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10710:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10703:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10875:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc",
																	"nodeType": "YulIdentifier",
																	"src": "10786:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10786:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10786:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10888:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10899:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10904:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10895:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10895:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10888:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10681:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10689:3:10",
														"type": ""
													}
												],
												"src": "10547:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11090:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11100:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11112:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11123:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11108:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11108:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11100:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11147:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11158:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11143:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11143:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11166:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11172:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11162:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11162:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11136:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11136:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11136:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11192:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11326:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11200:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11200:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11192:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11070:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11085:4:10",
														"type": ""
													}
												],
												"src": "10919:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11450:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11472:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11480:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11468:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11468:14:10"
																	},
																	{
																		"hexValue": "41646472657373206e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11484:24:10",
																		"type": "",
																		"value": "Address not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11461:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11461:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11461:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11442:6:10",
														"type": ""
													}
												],
												"src": "11344:172:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11668:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11678:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11744:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11749:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11685:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11685:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11678:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11850:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d",
																	"nodeType": "YulIdentifier",
																	"src": "11761:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11761:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11761:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11863:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11874:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11879:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11870:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11870:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11863:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11656:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11664:3:10",
														"type": ""
													}
												],
												"src": "11522:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12065:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12075:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12087:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12098:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12083:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12083:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12075:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12122:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12133:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12118:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12118:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12141:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12147:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12137:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12137:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12111:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12111:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12111:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12167:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12301:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12175:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12175:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12167:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12045:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12060:4:10",
														"type": ""
													}
												],
												"src": "11894:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12425:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12447:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12455:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12443:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12443:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746172676574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12459:16:10",
																		"type": "",
																		"value": "Invalid target"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12436:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12436:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12436:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12417:6:10",
														"type": ""
													}
												],
												"src": "12319:164:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12635:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12645:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12711:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12716:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12652:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12652:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12645:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12817:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2",
																	"nodeType": "YulIdentifier",
																	"src": "12728:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12728:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12728:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12830:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12841:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12846:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12837:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12837:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12830:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12623:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12631:3:10",
														"type": ""
													}
												],
												"src": "12489:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13032:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13042:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13054:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13065:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13050:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13050:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13042:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13089:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13100:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13085:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13085:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13108:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13114:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13104:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13104:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13078:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13078:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13078:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13134:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13268:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13142:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13142:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13134:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13012:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13027:4:10",
														"type": ""
													}
												],
												"src": "12861:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13350:82:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "13373:3:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "13378:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13383:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "13360:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13360:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13360:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "13410:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13415:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13406:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13406:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13424:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13399:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13399:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13399:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "13332:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "13337:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13342:6:10",
														"type": ""
													}
												],
												"src": "13286:146:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13578:209:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13588:95:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13671:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13676:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13595:75:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13595:88:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13588:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "13730:5:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13737:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13742:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13693:36:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13693:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13693:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13758:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13769:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13774:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13765:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13765:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13758:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "13551:5:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13558:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13566:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13574:3:10",
														"type": ""
													}
												],
												"src": "13460:327:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13937:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13948:110:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14037:6:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14045:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14054:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13955:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13955:103:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13948:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14068:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14075:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14068:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13908:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13914:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13922:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13933:3:10",
														"type": ""
													}
												],
												"src": "13793:291:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14196:55:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14218:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14226:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14214:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14214:14:10"
																	},
																	{
																		"hexValue": "43616c6c206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14230:13:10",
																		"type": "",
																		"value": "Call failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14207:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14207:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14207:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14188:6:10",
														"type": ""
													}
												],
												"src": "14090:161:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14403:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14413:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14479:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14484:2:10",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14420:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14420:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14413:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14585:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b",
																	"nodeType": "YulIdentifier",
																	"src": "14496:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14496:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14496:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14598:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14609:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14614:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14605:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14605:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14598:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14391:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14399:3:10",
														"type": ""
													}
												],
												"src": "14257:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14800:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14810:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14822:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14833:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14818:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14818:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14810:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14857:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14868:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14853:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14853:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14876:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14882:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14872:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14872:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14846:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14846:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14846:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14902:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15036:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14910:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14910:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14902:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14780:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14795:4:10",
														"type": ""
													}
												],
												"src": "14629:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15176:214:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15186:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15251:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15256:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15193:57:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15193:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15186:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "15310:5:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15317:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15322:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "15273:36:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15273:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15273:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15338:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15349:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15376:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "15354:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15354:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15345:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15345:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15338:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "15149:5:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15156:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15164:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15172:3:10",
														"type": ""
													}
												],
												"src": "15076:314:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15596:436:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15606:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15618:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15629:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15614:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15614:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15606:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15686:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15699:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15710:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15695:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15695:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15642:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15642:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15642:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15734:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15745:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15730:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15730:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15754:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15760:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15750:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15750:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15723:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15723:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15723:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15780:94:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15852:6:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15860:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15869:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15788:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15788:86:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15780:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15895:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15906:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15891:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15891:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15915:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15921:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15911:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15911:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15884:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15884:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15884:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15941:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16011:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16020:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15949:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15949:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15941:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15544:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15556:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15564:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15572:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15580:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15591:4:10",
														"type": ""
													}
												],
												"src": "15396:636:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16144:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16166:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16174:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16162:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16162:14:10"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16178:17:10",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16155:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16155:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16155:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16136:6:10",
														"type": ""
													}
												],
												"src": "16038:165:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16355:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16365:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16431:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16436:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16372:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16372:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16365:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16537:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nodeType": "YulIdentifier",
																	"src": "16448:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16448:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16448:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16550:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16561:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16566:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16557:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16557:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16550:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16343:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16351:3:10",
														"type": ""
													}
												],
												"src": "16209:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16752:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16762:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16774:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16785:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16770:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16770:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16762:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16809:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16820:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16805:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16805:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16828:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16834:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16824:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16824:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16798:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16798:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16798:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16854:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16988:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16862:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16862:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16854:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16732:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16747:4:10",
														"type": ""
													}
												],
												"src": "16581:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17112:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17134:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17142:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17130:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17130:14:10"
																	},
																	{
																		"hexValue": "416c726561647920617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17146:20:10",
																		"type": "",
																		"value": "Already authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17123:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17123:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17123:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17104:6:10",
														"type": ""
													}
												],
												"src": "17006:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17326:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17336:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17402:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17407:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17343:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17343:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17336:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17508:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2",
																	"nodeType": "YulIdentifier",
																	"src": "17419:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17419:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17419:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17521:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17532:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17537:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17528:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17528:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17521:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17314:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17322:3:10",
														"type": ""
													}
												],
												"src": "17180:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17723:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17733:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17745:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17756:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17741:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17741:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17733:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17780:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17791:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17776:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17776:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17799:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17805:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17795:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17795:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17769:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17769:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17769:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17825:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17959:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17833:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17833:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17825:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17703:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17718:4:10",
														"type": ""
													}
												],
												"src": "17552:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18083:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18105:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18113:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18101:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18101:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18117:23:10",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18094:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18094:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18094:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18075:6:10",
														"type": ""
													}
												],
												"src": "17977:171:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18300:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18310:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18376:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18381:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18317:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18317:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18310:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18482:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nodeType": "YulIdentifier",
																	"src": "18393:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18393:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18393:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18495:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18506:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18511:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18502:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18502:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18495:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18288:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18296:3:10",
														"type": ""
													}
												],
												"src": "18154:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18697:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18707:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18719:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18730:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18715:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18715:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18707:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18754:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18765:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18750:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18750:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18773:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18779:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18769:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18769:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18743:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18743:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18743:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18799:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18933:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18807:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18807:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18799:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18677:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18692:4:10",
														"type": ""
													}
												],
												"src": "18526:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19057:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19079:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19087:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19075:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19075:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420726563697069656e742061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19091:27:10",
																		"type": "",
																		"value": "Invalid recipient address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19068:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19068:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19068:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19049:6:10",
														"type": ""
													}
												],
												"src": "18951:175:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19278:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19288:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19354:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19359:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19295:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19295:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19288:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19460:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																	"nodeType": "YulIdentifier",
																	"src": "19371:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19371:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19371:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19473:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19484:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19489:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19480:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19480:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19473:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19266:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19274:3:10",
														"type": ""
													}
												],
												"src": "19132:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19675:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19685:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19697:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19708:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19693:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19693:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19685:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19732:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19743:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19728:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19728:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19751:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19757:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19747:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19747:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19721:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19721:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19721:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19777:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19911:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19785:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19785:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19777:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19655:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19670:4:10",
														"type": ""
													}
												],
												"src": "19504:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20035:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20057:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20065:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20053:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20053:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20069:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20046:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20046:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20046:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20027:6:10",
														"type": ""
													}
												],
												"src": "19929:181:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20262:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20272:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20338:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20343:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20279:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20279:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20272:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20444:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "20355:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20355:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20355:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20457:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20468:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20473:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20464:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20464:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20457:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20250:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20258:3:10",
														"type": ""
													}
												],
												"src": "20116:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20659:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20669:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20681:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20692:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20677:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20677:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20669:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20716:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20727:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20712:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20712:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20735:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20741:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20731:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20731:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20705:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20705:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20705:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20761:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20895:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20769:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20769:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20761:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20639:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20654:4:10",
														"type": ""
													}
												],
												"src": "20488:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21039:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21049:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21061:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21072:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21057:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21057:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21049:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21129:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21142:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21153:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21138:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21138:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21085:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21085:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21085:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21210:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21223:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21234:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21219:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21219:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21166:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21166:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21166:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21003:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21015:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21023:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21034:4:10",
														"type": ""
													}
												],
												"src": "20913:332:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IERC20_$380(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$380(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$380(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$380(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$380(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$380t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$380(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ether withdrawal failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid target\")\n\n    }\n\n    function abi_encode_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Call failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value1, value2,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid recipient address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610089575f3560e01c80639e5d4c49116100585780639e5d4c49146101be578063b9181611146101fa578063cf1c316a14610236578063f2fde38b1461025e578063f5537ede14610286576100de565b80633bed33ce1461012e578063485d7d9414610156578063715018a61461017e5780638da5cb5b14610194576100de565b366100de573373ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874346040516100d49190610fd7565b60405180910390a2005b3373ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874346040516101249190610fd7565b60405180910390a2005b348015610139575f80fd5b50610154600480360381019061014f9190611022565b6102ae565b005b348015610161575f80fd5b5061017c600480360381019061017791906110a7565b6104c1565b005b348015610189575f80fd5b506101926105ec565b005b34801561019f575f80fd5b506101a86105ff565b6040516101b591906110e1565b60405180910390f35b3480156101c9575f80fd5b506101e460048036038101906101df919061115b565b610626565b6040516101f19190611256565b60405180910390f35b348015610205575f80fd5b50610220600480360381019061021b91906110a7565b61087b565b60405161022d9190611290565b60405180910390f35b348015610241575f80fd5b5061025c600480360381019061025791906110a7565b610898565b005b348015610269575f80fd5b50610284600480360381019061027f91906110a7565b610a33565b005b348015610291575f80fd5b506102ac60048036038101906102a791906112e4565b610ab7565b005b6102b66105ff565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610335575060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036b9061138e565b60405180910390fd5b61037c610cfe565b804710156103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b6906113f6565b60405180910390fd5b5f3373ffffffffffffffffffffffffffffffffffffffff16826040516103e490611441565b5f6040518083038185875af1925050503d805f811461041e576040519150601f19603f3d011682016040523d82523d5f602084013e610423565b606091505b5050905080610467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045e9061149f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f06097061aeda806b5e9cb4133d9899f332ff0913956567fc0f7ea15e3d19947c836040516104ad9190610fd7565b60405180910390a2506104be610d4d565b50565b6104c9610d56565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054990611507565b60405180910390fd5b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f0fafd0343e6c6f6985727574866da48938c918559eb9521cf9cc0d317ea0f7b460405160405180910390a250565b6105f4610d56565b6105fd5f610ddd565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606106306105ff565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106af575060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b6106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e59061138e565b60405180910390fd5b6106f6610cfe565b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b9061156f565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff1686868660405161078e9291906115bf565b5f6040518083038185875af1925050503d805f81146107c8576040519150601f19603f3d011682016040523d82523d5f602084013e6107cd565b606091505b509150915081610812576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080990611621565b60405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff167fe39b605d485d947e52b62c3b5028a14d5277db44425263c74171a857071543348787878560405161085e949392919061166b565b60405180910390a28092505050610873610d4d565b949350505050565b6002602052805f5260405f205f915054906101000a900460ff1681565b6108a0610d56565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361090e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610905906116fa565b60405180910390fd5b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610998576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098f90611762565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fdd10d14f6ac19e913d4edbb11fd30661531e2ccd0d23f571e9b224f001f0dd0660405160405180910390a250565b610a3b610d56565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610aab575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610aa291906110e1565b60405180910390fd5b610ab481610ddd565b50565b610abf6105ff565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b3e575060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b749061138e565b60405180910390fd5b610b85610cfe565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bea906117ca565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5890611832565b60405180910390fd5b610c8c82828573ffffffffffffffffffffffffffffffffffffffff16610e9e9092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f9c8515990fd8c61431c4ac8db9b81475f90c292a1dda77731e56c22e64fc764383604051610ce99190610fd7565b60405180910390a3610cf9610d4d565b505050565b600260015403610d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3a9061189a565b60405180910390fd5b6002600181905550565b60018081905550565b610d5e610f1d565b73ffffffffffffffffffffffffffffffffffffffff16610d7c6105ff565b73ffffffffffffffffffffffffffffffffffffffff1614610ddb57610d9f610f1d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610dd291906110e1565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f18838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610ed19291906118b8565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f24565b505050565b5f33905090565b5f8060205f8451602086015f885af180610f43576040513d5f823e3d81fd5b3d92505f519150505f8214610f5c576001811415610f77565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610fb957836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610fb091906110e1565b60405180910390fd5b50505050565b5f819050919050565b610fd181610fbf565b82525050565b5f602082019050610fea5f830184610fc8565b92915050565b5f80fd5b5f80fd5b61100181610fbf565b811461100b575f80fd5b50565b5f8135905061101c81610ff8565b92915050565b5f6020828403121561103757611036610ff0565b5b5f6110448482850161100e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110768261104d565b9050919050565b6110868161106c565b8114611090575f80fd5b50565b5f813590506110a18161107d565b92915050565b5f602082840312156110bc576110bb610ff0565b5b5f6110c984828501611093565b91505092915050565b6110db8161106c565b82525050565b5f6020820190506110f45f8301846110d2565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261111b5761111a6110fa565b5b8235905067ffffffffffffffff811115611138576111376110fe565b5b60208301915083600182028301111561115457611153611102565b5b9250929050565b5f805f806060858703121561117357611172610ff0565b5b5f61118087828801611093565b94505060206111918782880161100e565b935050604085013567ffffffffffffffff8111156111b2576111b1610ff4565b5b6111be87828801611106565b925092505092959194509250565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156112035780820151818401526020810190506111e8565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611228826111cc565b61123281856111d6565b93506112428185602086016111e6565b61124b8161120e565b840191505092915050565b5f6020820190508181035f83015261126e818461121e565b905092915050565b5f8115159050919050565b61128a81611276565b82525050565b5f6020820190506112a35f830184611281565b92915050565b5f6112b38261106c565b9050919050565b6112c3816112a9565b81146112cd575f80fd5b50565b5f813590506112de816112ba565b92915050565b5f805f606084860312156112fb576112fa610ff0565b5b5f611308868287016112d0565b935050602061131986828701611093565b925050604061132a8682870161100e565b9150509250925092565b5f82825260208201905092915050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f611378600e83611334565b915061138382611344565b602082019050919050565b5f6020820190508181035f8301526113a58161136c565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6113e0601483611334565b91506113eb826113ac565b602082019050919050565b5f6020820190508181035f83015261140d816113d4565b9050919050565b5f81905092915050565b50565b5f61142c5f83611414565b91506114378261141e565b5f82019050919050565b5f61144b82611421565b9150819050919050565b7f4574686572207769746864726177616c206661696c65640000000000000000005f82015250565b5f611489601783611334565b915061149482611455565b602082019050919050565b5f6020820190508181035f8301526114b68161147d565b9050919050565b7f41646472657373206e6f7420617574686f72697a6564000000000000000000005f82015250565b5f6114f1601683611334565b91506114fc826114bd565b602082019050919050565b5f6020820190508181035f83015261151e816114e5565b9050919050565b7f496e76616c6964207461726765740000000000000000000000000000000000005f82015250565b5f611559600e83611334565b915061156482611525565b602082019050919050565b5f6020820190508181035f8301526115868161154d565b9050919050565b828183375f83830152505050565b5f6115a68385611414565b93506115b383858461158d565b82840190509392505050565b5f6115cb82848661159b565b91508190509392505050565b7f43616c6c206661696c65640000000000000000000000000000000000000000005f82015250565b5f61160b600b83611334565b9150611616826115d7565b602082019050919050565b5f6020820190508181035f830152611638816115ff565b9050919050565b5f61164a83856111d6565b935061165783858461158d565b6116608361120e565b840190509392505050565b5f60608201905061167e5f830187610fc8565b818103602083015261169181858761163f565b905081810360408301526116a5818461121e565b905095945050505050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f6116e4600f83611334565b91506116ef826116b0565b602082019050919050565b5f6020820190508181035f830152611711816116d8565b9050919050565b7f416c726561647920617574686f72697a656400000000000000000000000000005f82015250565b5f61174c601283611334565b915061175782611718565b602082019050919050565b5f6020820190508181035f83015261177981611740565b9050919050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f6117b4601583611334565b91506117bf82611780565b602082019050919050565b5f6020820190508181035f8301526117e1816117a8565b9050919050565b7f496e76616c696420726563697069656e742061646472657373000000000000005f82015250565b5f61181c601983611334565b9150611827826117e8565b602082019050919050565b5f6020820190508181035f83015261184981611810565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611884601f83611334565b915061188f82611850565b602082019050919050565b5f6020820190508181035f8301526118b181611878565b9050919050565b5f6040820190506118cb5f8301856110d2565b6118d86020830184610fc8565b939250505056fea2646970667358221220cda063e044e8a2789d233ff6e2c7726297be6f2e1e31b783be08d74196b3f49e64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x89 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5D4C49 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xCF1C316A EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xF5537EDE EQ PUSH2 0x286 JUMPI PUSH2 0xDE JUMP JUMPDEST DUP1 PUSH4 0x3BED33CE EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x485D7D94 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x194 JUMPI PUSH2 0xDE JUMP JUMPDEST CALLDATASIZE PUSH2 0xDE JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x2AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x5EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x115B JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1290 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0x898 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x10A7 JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B6 PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x335 JUMPI POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x374 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36B SWAP1 PUSH2 0x138E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x37C PUSH2 0xCFE JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0x13F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x423 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45E SWAP1 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6097061AEDA806B5E9CB4133D9899F332FF0913956567FC0F7EA15E3D19947C DUP4 PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x4BE PUSH2 0xD4D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4C9 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x549 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFAFD0343E6C6F6985727574866DA48938C918559EB9521CF9CC0D317EA0F7B4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x5F4 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x5FD PUSH0 PUSH2 0xDDD JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x630 PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6AF JUMPI POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E5 SWAP1 PUSH2 0x138E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F6 PUSH2 0xCFE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75B SWAP1 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x78E SWAP3 SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x809 SWAP1 PUSH2 0x1621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE39B605D485D947E52B62C3B5028A14D5277DB44425263C74171A85707154334 DUP8 DUP8 DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x85E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP3 POP POP POP PUSH2 0x873 PUSH2 0xD4D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0xD56 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x905 SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x998 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98F SWAP1 PUSH2 0x1762 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDD10D14F6AC19E913D4EDBB11FD30661531E2CCD0D23F571E9B224F001F0DD06 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xD56 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAAB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA2 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB4 DUP2 PUSH2 0xDDD JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xABF PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB3E JUMPI POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB74 SWAP1 PUSH2 0x138E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB85 PUSH2 0xCFE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP1 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC58 SWAP1 PUSH2 0x1832 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8C DUP3 DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9C8515990FD8C61431C4AC8DB9B81475F90C292A1DDA77731E56C22E64FC7643 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xCF9 PUSH2 0xD4D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3A SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD5E PUSH2 0xF1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD7C PUSH2 0x5FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDDB JUMPI PUSH2 0xD9F PUSH2 0xF1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD2 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF18 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xED1 SWAP3 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF24 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xF43 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xF5C JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xF77 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xFB9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD1 DUP2 PUSH2 0xFBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFEA PUSH0 DUP4 ADD DUP5 PUSH2 0xFC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1001 DUP2 PUSH2 0xFBF JUMP JUMPDEST DUP2 EQ PUSH2 0x100B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x101C DUP2 PUSH2 0xFF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1037 JUMPI PUSH2 0x1036 PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1044 DUP5 DUP3 DUP6 ADD PUSH2 0x100E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1076 DUP3 PUSH2 0x104D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1086 DUP2 PUSH2 0x106C JUMP JUMPDEST DUP2 EQ PUSH2 0x1090 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10A1 DUP2 PUSH2 0x107D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BC JUMPI PUSH2 0x10BB PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C9 DUP5 DUP3 DUP6 ADD PUSH2 0x1093 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10DB DUP2 PUSH2 0x106C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x10D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x111B JUMPI PUSH2 0x111A PUSH2 0x10FA JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1138 JUMPI PUSH2 0x1137 PUSH2 0x10FE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1154 JUMPI PUSH2 0x1153 PUSH2 0x1102 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1173 JUMPI PUSH2 0x1172 PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1180 DUP8 DUP3 DUP9 ADD PUSH2 0x1093 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1191 DUP8 DUP3 DUP9 ADD PUSH2 0x100E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B2 JUMPI PUSH2 0x11B1 PUSH2 0xFF4 JUMP JUMPDEST JUMPDEST PUSH2 0x11BE DUP8 DUP3 DUP9 ADD PUSH2 0x1106 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1203 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11E8 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1228 DUP3 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x1232 DUP2 DUP6 PUSH2 0x11D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1242 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11E6 JUMP JUMPDEST PUSH2 0x124B DUP2 PUSH2 0x120E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x126E DUP2 DUP5 PUSH2 0x121E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128A DUP2 PUSH2 0x1276 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1281 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12B3 DUP3 PUSH2 0x106C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C3 DUP2 PUSH2 0x12A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x12CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12DE DUP2 PUSH2 0x12BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12FB JUMPI PUSH2 0x12FA PUSH2 0xFF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1308 DUP7 DUP3 DUP8 ADD PUSH2 0x12D0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1319 DUP7 DUP3 DUP8 ADD PUSH2 0x1093 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x132A DUP7 DUP3 DUP8 ADD PUSH2 0x100E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1378 PUSH1 0xE DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x1383 DUP3 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13A5 DUP2 PUSH2 0x136C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13E0 PUSH1 0x14 DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x13EB DUP3 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x140D DUP2 PUSH2 0x13D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x142C PUSH0 DUP4 PUSH2 0x1414 JUMP JUMPDEST SWAP2 POP PUSH2 0x1437 DUP3 PUSH2 0x141E JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x144B DUP3 PUSH2 0x1421 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207769746864726177616C206661696C6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1489 PUSH1 0x17 DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x1494 DUP3 PUSH2 0x1455 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14B6 DUP2 PUSH2 0x147D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646472657373206E6F7420617574686F72697A656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14F1 PUSH1 0x16 DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x14FC DUP3 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x151E DUP2 PUSH2 0x14E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746172676574000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1559 PUSH1 0xE DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x1564 DUP3 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1586 DUP2 PUSH2 0x154D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15A6 DUP4 DUP6 PUSH2 0x1414 JUMP JUMPDEST SWAP4 POP PUSH2 0x15B3 DUP4 DUP6 DUP5 PUSH2 0x158D JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15CB DUP3 DUP5 DUP7 PUSH2 0x159B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43616C6C206661696C6564000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x160B PUSH1 0xB DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x1616 DUP3 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1638 DUP2 PUSH2 0x15FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x164A DUP4 DUP6 PUSH2 0x11D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1657 DUP4 DUP6 DUP5 PUSH2 0x158D JUMP JUMPDEST PUSH2 0x1660 DUP4 PUSH2 0x120E JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x167E PUSH0 DUP4 ADD DUP8 PUSH2 0xFC8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1691 DUP2 DUP6 DUP8 PUSH2 0x163F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x16A5 DUP2 DUP5 PUSH2 0x121E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16E4 PUSH1 0xF DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EF DUP3 PUSH2 0x16B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1711 DUP2 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920617574686F72697A65640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x174C PUSH1 0x12 DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x1757 DUP3 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1779 DUP2 PUSH2 0x1740 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17B4 PUSH1 0x15 DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x17BF DUP3 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17E1 DUP2 PUSH2 0x17A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x181C PUSH1 0x19 DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x1827 DUP3 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1849 DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1884 PUSH1 0x1F DUP4 PUSH2 0x1334 JUMP JUMPDEST SWAP2 POP PUSH2 0x188F DUP3 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18B1 DUP2 PUSH2 0x1878 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18CB PUSH0 DUP4 ADD DUP6 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x18D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFC8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD LOG0 PUSH4 0xE044E8A2 PUSH25 0x9D233FF6E2C7726297BE6F2E1E31B783BE08D74196B3F49E64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "588:3749:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4161:10;4152:31;;;4173:9;4152:31;;;;;;:::i;:::-;;;;;;;;588:3749;;4306:10;4297:31;;;4318:9;4297:31;;;;;;:::i;:::-;;;;;;;;588:3749;3145:331;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2096:211;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2586:426:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;752:42;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1717:261;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:344:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3145:331;1377:7;:5;:7::i;:::-;1363:21;;:10;:21;;;:47;;;;1388:10;:22;1399:10;1388:22;;;;;;;;;;;;;;;;;;;;;;;;;1363:47;1355:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:4::1;:19;:21::i;:::-;3264:6:9::2;3239:21;:31;;3231:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3306:12;3332:10;3324:24;;3356:6;3324:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3305:62;;;3385:7;3377:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;3450:10;3435:34;;;3462:6;3435:34;;;;;;:::i;:::-;;;;;;;;3221:255;2303:20:4::1;:18;:20::i;:::-;3145:331:9::0;:::o;2096:211::-;1531:13:0;:11;:13::i;:::-;2176:10:9::1;:19;2187:7;2176:19;;;;;;;;;;;;;;;;;;;;;;;;;2168:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2254:5;2232:10;:19;2243:7;2232:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2292:7;2274:26;;;;;;;;;;;;2096:211:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2586:426:9:-;2737:19;1377:7;:5;:7::i;:::-;1363:21;;:10;:21;;;:47;;;;1388:10;:22;1399:10;1388:22;;;;;;;;;;;;;;;;;;;;;;;;;1363:47;1355:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:4::1;:19;:21::i;:::-;2798:1:9::2;2780:20;;:6;:20;;::::0;2772:47:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2830:12;2844:16:::0;2864:6:::2;:11;;2883:5;2890:4;;2864:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2829:66;;;;2913:7;2905:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;2960:6;2951:34;;;2968:5;2975:4;;2981:3;2951:34;;;;;;;;;:::i;:::-;;;;;;;;3002:3;2995:10;;;;2303:20:4::1;:18;:20::i;:::-;2586:426:9::0;;;;;;:::o;752:42::-;;;;;;;;;;;;;;;;;;;;;;:::o;1717:261::-;1531:13:0;:11;:13::i;:::-;1813:1:9::1;1794:21;;:7;:21;;::::0;1786:49:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1854:10;:19;1865:7;1854:19;;;;;;;;;;;;;;;;;;;;;;;;;1853:20;1845:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1928:4;1906:10;:19;1917:7;1906:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1963:7;1947:24;;;;;;;;;;;;1717:261:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3708:344:9:-;1377:7;:5;:7::i;:::-;1363:21;;:10;:21;;;:47;;;;1388:10;:22;1399:10;1388:22;;;;;;;;;;;;;;;;;;;;;;;;;1363:47;1355:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:21:4::1;:19;:21::i;:::-;3854:1:9::2;3828:28;;3836:5;3828:28;;::::0;3820:62:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;3914:1;3900:16;;:2;:16;;::::0;3892:54:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;3956:30;3975:2;3979:6;3956:5;:18;;;;:30;;;;;:::i;:::-;4034:2;4001:44;;4026:5;4001:44;;;4038:6;4001:44;;;;;;:::i;:::-;;;;;;;;2303:20:4::1;:18;:20::i;:::-;3708:344:9::0;;;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;7686:720:6:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:222::-;2436:4;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2343:222;;;;:::o;2571:117::-;2680:1;2677;2670:12;2694:117;2803:1;2800;2793:12;2817:117;2926:1;2923;2916:12;2953:552;3010:8;3020:6;3070:3;3063:4;3055:6;3051:17;3047:27;3037:122;;3078:79;;:::i;:::-;3037:122;3191:6;3178:20;3168:30;;3221:18;3213:6;3210:30;3207:117;;;3243:79;;:::i;:::-;3207:117;3357:4;3349:6;3345:17;3333:29;;3411:3;3403:4;3395:6;3391:17;3381:8;3377:32;3374:41;3371:128;;;3418:79;;:::i;:::-;3371:128;2953:552;;;;;:::o;3511:817::-;3599:6;3607;3615;3623;3672:2;3660:9;3651:7;3647:23;3643:32;3640:119;;;3678:79;;:::i;:::-;3640:119;3798:1;3823:53;3868:7;3859:6;3848:9;3844:22;3823:53;:::i;:::-;3813:63;;3769:117;3925:2;3951:53;3996:7;3987:6;3976:9;3972:22;3951:53;:::i;:::-;3941:63;;3896:118;4081:2;4070:9;4066:18;4053:32;4112:18;4104:6;4101:30;4098:117;;;4134:79;;:::i;:::-;4098:117;4247:64;4303:7;4294:6;4283:9;4279:22;4247:64;:::i;:::-;4229:82;;;;4024:297;3511:817;;;;;;;:::o;4334:98::-;4385:6;4419:5;4413:12;4403:22;;4334:98;;;:::o;4438:168::-;4521:11;4555:6;4550:3;4543:19;4595:4;4590:3;4586:14;4571:29;;4438:168;;;;:::o;4612:246::-;4693:1;4703:113;4717:6;4714:1;4711:13;4703:113;;;4802:1;4797:3;4793:11;4787:18;4783:1;4778:3;4774:11;4767:39;4739:2;4736:1;4732:10;4727:15;;4703:113;;;4850:1;4841:6;4836:3;4832:16;4825:27;4674:184;4612:246;;;:::o;4864:102::-;4905:6;4956:2;4952:7;4947:2;4940:5;4936:14;4932:28;4922:38;;4864:102;;;:::o;4972:373::-;5058:3;5086:38;5118:5;5086:38;:::i;:::-;5140:70;5203:6;5198:3;5140:70;:::i;:::-;5133:77;;5219:65;5277:6;5272:3;5265:4;5258:5;5254:16;5219:65;:::i;:::-;5309:29;5331:6;5309:29;:::i;:::-;5304:3;5300:39;5293:46;;5062:283;4972:373;;;;:::o;5351:309::-;5462:4;5500:2;5489:9;5485:18;5477:26;;5549:9;5543:4;5539:20;5535:1;5524:9;5520:17;5513:47;5577:76;5648:4;5639:6;5577:76;:::i;:::-;5569:84;;5351:309;;;;:::o;5666:90::-;5700:7;5743:5;5736:13;5729:21;5718:32;;5666:90;;;:::o;5762:109::-;5843:21;5858:5;5843:21;:::i;:::-;5838:3;5831:34;5762:109;;:::o;5877:210::-;5964:4;6002:2;5991:9;5987:18;5979:26;;6015:65;6077:1;6066:9;6062:17;6053:6;6015:65;:::i;:::-;5877:210;;;;:::o;6093:110::-;6144:7;6173:24;6191:5;6173:24;:::i;:::-;6162:35;;6093:110;;;:::o;6209:150::-;6296:38;6328:5;6296:38;:::i;:::-;6289:5;6286:49;6276:77;;6349:1;6346;6339:12;6276:77;6209:150;:::o;6365:167::-;6425:5;6463:6;6450:20;6441:29;;6479:47;6520:5;6479:47;:::i;:::-;6365:167;;;;:::o;6538:647::-;6629:6;6637;6645;6694:2;6682:9;6673:7;6669:23;6665:32;6662:119;;;6700:79;;:::i;:::-;6662:119;6820:1;6845:67;6904:7;6895:6;6884:9;6880:22;6845:67;:::i;:::-;6835:77;;6791:131;6961:2;6987:53;7032:7;7023:6;7012:9;7008:22;6987:53;:::i;:::-;6977:63;;6932:118;7089:2;7115:53;7160:7;7151:6;7140:9;7136:22;7115:53;:::i;:::-;7105:63;;7060:118;6538:647;;;;;:::o;7191:169::-;7275:11;7309:6;7304:3;7297:19;7349:4;7344:3;7340:14;7325:29;;7191:169;;;;:::o;7366:164::-;7506:16;7502:1;7494:6;7490:14;7483:40;7366:164;:::o;7536:366::-;7678:3;7699:67;7763:2;7758:3;7699:67;:::i;:::-;7692:74;;7775:93;7864:3;7775:93;:::i;:::-;7893:2;7888:3;7884:12;7877:19;;7536:366;;;:::o;7908:419::-;8074:4;8112:2;8101:9;8097:18;8089:26;;8161:9;8155:4;8151:20;8147:1;8136:9;8132:17;8125:47;8189:131;8315:4;8189:131;:::i;:::-;8181:139;;7908:419;;;:::o;8333:170::-;8473:22;8469:1;8461:6;8457:14;8450:46;8333:170;:::o;8509:366::-;8651:3;8672:67;8736:2;8731:3;8672:67;:::i;:::-;8665:74;;8748:93;8837:3;8748:93;:::i;:::-;8866:2;8861:3;8857:12;8850:19;;8509:366;;;:::o;8881:419::-;9047:4;9085:2;9074:9;9070:18;9062:26;;9134:9;9128:4;9124:20;9120:1;9109:9;9105:17;9098:47;9162:131;9288:4;9162:131;:::i;:::-;9154:139;;8881:419;;;:::o;9306:147::-;9407:11;9444:3;9429:18;;9306:147;;;;:::o;9459:114::-;;:::o;9579:398::-;9738:3;9759:83;9840:1;9835:3;9759:83;:::i;:::-;9752:90;;9851:93;9940:3;9851:93;:::i;:::-;9969:1;9964:3;9960:11;9953:18;;9579:398;;;:::o;9983:379::-;10167:3;10189:147;10332:3;10189:147;:::i;:::-;10182:154;;10353:3;10346:10;;9983:379;;;:::o;10368:173::-;10508:25;10504:1;10496:6;10492:14;10485:49;10368:173;:::o;10547:366::-;10689:3;10710:67;10774:2;10769:3;10710:67;:::i;:::-;10703:74;;10786:93;10875:3;10786:93;:::i;:::-;10904:2;10899:3;10895:12;10888:19;;10547:366;;;:::o;10919:419::-;11085:4;11123:2;11112:9;11108:18;11100:26;;11172:9;11166:4;11162:20;11158:1;11147:9;11143:17;11136:47;11200:131;11326:4;11200:131;:::i;:::-;11192:139;;10919:419;;;:::o;11344:172::-;11484:24;11480:1;11472:6;11468:14;11461:48;11344:172;:::o;11522:366::-;11664:3;11685:67;11749:2;11744:3;11685:67;:::i;:::-;11678:74;;11761:93;11850:3;11761:93;:::i;:::-;11879:2;11874:3;11870:12;11863:19;;11522:366;;;:::o;11894:419::-;12060:4;12098:2;12087:9;12083:18;12075:26;;12147:9;12141:4;12137:20;12133:1;12122:9;12118:17;12111:47;12175:131;12301:4;12175:131;:::i;:::-;12167:139;;11894:419;;;:::o;12319:164::-;12459:16;12455:1;12447:6;12443:14;12436:40;12319:164;:::o;12489:366::-;12631:3;12652:67;12716:2;12711:3;12652:67;:::i;:::-;12645:74;;12728:93;12817:3;12728:93;:::i;:::-;12846:2;12841:3;12837:12;12830:19;;12489:366;;;:::o;12861:419::-;13027:4;13065:2;13054:9;13050:18;13042:26;;13114:9;13108:4;13104:20;13100:1;13089:9;13085:17;13078:47;13142:131;13268:4;13142:131;:::i;:::-;13134:139;;12861:419;;;:::o;13286:146::-;13383:6;13378:3;13373;13360:30;13424:1;13415:6;13410:3;13406:16;13399:27;13286:146;;;:::o;13460:327::-;13574:3;13595:88;13676:6;13671:3;13595:88;:::i;:::-;13588:95;;13693:56;13742:6;13737:3;13730:5;13693:56;:::i;:::-;13774:6;13769:3;13765:16;13758:23;;13460:327;;;;;:::o;13793:291::-;13933:3;13955:103;14054:3;14045:6;14037;13955:103;:::i;:::-;13948:110;;14075:3;14068:10;;13793:291;;;;;:::o;14090:161::-;14230:13;14226:1;14218:6;14214:14;14207:37;14090:161;:::o;14257:366::-;14399:3;14420:67;14484:2;14479:3;14420:67;:::i;:::-;14413:74;;14496:93;14585:3;14496:93;:::i;:::-;14614:2;14609:3;14605:12;14598:19;;14257:366;;;:::o;14629:419::-;14795:4;14833:2;14822:9;14818:18;14810:26;;14882:9;14876:4;14872:20;14868:1;14857:9;14853:17;14846:47;14910:131;15036:4;14910:131;:::i;:::-;14902:139;;14629:419;;;:::o;15076:314::-;15172:3;15193:70;15256:6;15251:3;15193:70;:::i;:::-;15186:77;;15273:56;15322:6;15317:3;15310:5;15273:56;:::i;:::-;15354:29;15376:6;15354:29;:::i;:::-;15349:3;15345:39;15338:46;;15076:314;;;;;:::o;15396:636::-;15591:4;15629:2;15618:9;15614:18;15606:26;;15642:71;15710:1;15699:9;15695:17;15686:6;15642:71;:::i;:::-;15760:9;15754:4;15750:20;15745:2;15734:9;15730:18;15723:48;15788:86;15869:4;15860:6;15852;15788:86;:::i;:::-;15780:94;;15921:9;15915:4;15911:20;15906:2;15895:9;15891:18;15884:48;15949:76;16020:4;16011:6;15949:76;:::i;:::-;15941:84;;15396:636;;;;;;;:::o;16038:165::-;16178:17;16174:1;16166:6;16162:14;16155:41;16038:165;:::o;16209:366::-;16351:3;16372:67;16436:2;16431:3;16372:67;:::i;:::-;16365:74;;16448:93;16537:3;16448:93;:::i;:::-;16566:2;16561:3;16557:12;16550:19;;16209:366;;;:::o;16581:419::-;16747:4;16785:2;16774:9;16770:18;16762:26;;16834:9;16828:4;16824:20;16820:1;16809:9;16805:17;16798:47;16862:131;16988:4;16862:131;:::i;:::-;16854:139;;16581:419;;;:::o;17006:168::-;17146:20;17142:1;17134:6;17130:14;17123:44;17006:168;:::o;17180:366::-;17322:3;17343:67;17407:2;17402:3;17343:67;:::i;:::-;17336:74;;17419:93;17508:3;17419:93;:::i;:::-;17537:2;17532:3;17528:12;17521:19;;17180:366;;;:::o;17552:419::-;17718:4;17756:2;17745:9;17741:18;17733:26;;17805:9;17799:4;17795:20;17791:1;17780:9;17776:17;17769:47;17833:131;17959:4;17833:131;:::i;:::-;17825:139;;17552:419;;;:::o;17977:171::-;18117:23;18113:1;18105:6;18101:14;18094:47;17977:171;:::o;18154:366::-;18296:3;18317:67;18381:2;18376:3;18317:67;:::i;:::-;18310:74;;18393:93;18482:3;18393:93;:::i;:::-;18511:2;18506:3;18502:12;18495:19;;18154:366;;;:::o;18526:419::-;18692:4;18730:2;18719:9;18715:18;18707:26;;18779:9;18773:4;18769:20;18765:1;18754:9;18750:17;18743:47;18807:131;18933:4;18807:131;:::i;:::-;18799:139;;18526:419;;;:::o;18951:175::-;19091:27;19087:1;19079:6;19075:14;19068:51;18951:175;:::o;19132:366::-;19274:3;19295:67;19359:2;19354:3;19295:67;:::i;:::-;19288:74;;19371:93;19460:3;19371:93;:::i;:::-;19489:2;19484:3;19480:12;19473:19;;19132:366;;;:::o;19504:419::-;19670:4;19708:2;19697:9;19693:18;19685:26;;19757:9;19751:4;19747:20;19743:1;19732:9;19728:17;19721:47;19785:131;19911:4;19785:131;:::i;:::-;19777:139;;19504:419;;;:::o;19929:181::-;20069:33;20065:1;20057:6;20053:14;20046:57;19929:181;:::o;20116:366::-;20258:3;20279:67;20343:2;20338:3;20279:67;:::i;:::-;20272:74;;20355:93;20444:3;20355:93;:::i;:::-;20473:2;20468:3;20464:12;20457:19;;20116:366;;;:::o;20488:419::-;20654:4;20692:2;20681:9;20677:18;20669:26;;20741:9;20735:4;20731:20;20727:1;20716:9;20712:17;20705:47;20769:131;20895:4;20769:131;:::i;:::-;20761:139;;20488:419;;;:::o;20913:332::-;21034:4;21072:2;21061:9;21057:18;21049:26;;21085:71;21153:1;21142:9;21138:17;21129:6;21085:71;:::i;:::-;21166:72;21234:2;21223:9;21219:18;21210:6;21166:72;:::i;:::-;20913:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1284200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "1743",
								"addAuthorized(address)": "infinite",
								"authorized(address)": "2855",
								"executeCall(address,uint256,bytes)": "infinite",
								"owner()": "2582",
								"removeAuthorized(address)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"transferToken(address,address,uint256)": "infinite",
								"withdrawEther(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 588,
									"end": 4337,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 588,
									"end": 4337,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 588,
									"end": 4337,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1599,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1599,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1599,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1599,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1521,
									"end": 1599,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1599,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1521,
									"end": 1599,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1599,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1599,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1521,
									"end": 1599,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1521,
									"end": 1599,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1543,
									"end": 1553,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 588,
									"end": 4337,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 588,
									"end": 4337,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 588,
									"end": 4337,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 588,
									"end": 4337,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 588,
									"end": 4337,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 588,
									"end": 4337,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 588,
									"end": 4337,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 588,
									"end": 4337,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 588,
									"end": 4337,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 588,
									"end": 4337,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 588,
									"end": 4337,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cda063e044e8a2789d233ff6e2c7726297be6f2e1e31b783be08d74196b3f49e64736f6c63430008140033",
									".code": [
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "9E5D4C49"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "9E5D4C49"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "B9181611"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "CF1C316A"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "F5537EDE"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "3BED33CE"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "485D7D94"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4161,
											"end": 4171,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "PUSH",
											"source": 9,
											"value": "88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
										},
										{
											"begin": 4173,
											"end": 4182,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 4152,
											"end": 4183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4183,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4316,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "PUSH",
											"source": 9,
											"value": "88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
										},
										{
											"begin": 4318,
											"end": 4327,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 4297,
											"end": 4328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4328,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 588,
											"end": 4337,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3145,
											"end": 3476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3145,
											"end": 3476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2096,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2096,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2586,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2586,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2586,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 752,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 752,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 752,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1717,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1717,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 3708,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3708,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1377,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1377,
											"end": 1384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1373,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1409,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1355,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3264,
											"end": 3270,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3260,
											"modifierDepth": 2,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3270,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3270,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3231,
											"end": 3295,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3231,
											"end": 3295,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3318,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3342,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3348,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3324,
											"end": 3348,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3362,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3324,
											"end": 3367,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3324,
											"end": 3367,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3305,
											"end": 3367,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3305,
											"end": 3367,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3305,
											"end": 3367,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3392,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3377,
											"end": 3420,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3377,
											"end": 3420,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3460,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6097061AEDA806B5E9CB4133D9899F332FF0913956567FC0F7EA15E3D19947C"
										},
										{
											"begin": 3462,
											"end": 3468,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3435,
											"end": 3469,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3469,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3221,
											"end": 3476,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2176,
											"end": 2195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2168,
											"end": 2222,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2168,
											"end": 2222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2254,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2250,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2299,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FAFD0343E6C6F6985727574866DA48938C918559EB9521CF9CC0D317EA0F7B4"
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2300,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2756,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1377,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1377,
											"end": 1384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1373,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1409,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1355,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2799,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2800,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2780,
											"end": 2800,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2786,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2800,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2780,
											"end": 2800,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2800,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2772,
											"end": 2819,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2772,
											"end": 2819,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2842,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2860,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2870,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2875,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2864,
											"end": 2875,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2883,
											"end": 2888,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2894,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2894,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 2864,
											"end": 2895,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2895,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2829,
											"end": 2895,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2829,
											"end": 2895,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2829,
											"end": 2895,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2829,
											"end": 2895,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2913,
											"end": 2920,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2905,
											"end": 2936,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2905,
											"end": 2936,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2966,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E39B605D485D947E52B62C3B5028A14D5277DB44425263C74171A85707154334"
										},
										{
											"begin": 2968,
											"end": 2973,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 2979,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 2979,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 2984,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2951,
											"end": 2985,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3005,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3005,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3005,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3005,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3005,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 3012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 752,
											"end": 794,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 752,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1815,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 1801,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 1815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1815,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 1815,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 1786,
											"end": 1835,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1786,
											"end": 1835,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1872,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1854,
											"end": 1873,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1873,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 1845,
											"end": 1896,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 1845,
											"end": 1896,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1906,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1917,
											"end": 1924,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1906,
											"end": 1932,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 1970,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "DD10D14F6AC19E913D4EDBB11FD30661531E2CCD0D23F571E9B224F001F0DD06"
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1377,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1377,
											"end": 1384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1373,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1398,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1409,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1388,
											"end": 1410,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1363,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1355,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1355,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3855,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3856,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3856,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3841,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3856,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3828,
											"end": 3856,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3856,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3820,
											"end": 3882,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3820,
											"end": 3882,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3914,
											"end": 3915,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3916,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3900,
											"end": 3916,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3900,
											"end": 3902,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3900,
											"end": 3916,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3900,
											"end": 3916,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3900,
											"end": 3916,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3892,
											"end": 3946,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3892,
											"end": 3946,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3986,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3975,
											"end": 3977,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3979,
											"end": 3985,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3961,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3974,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3956,
											"end": 3974,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3974,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3956,
											"end": 3974,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3986,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3986,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3986,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3986,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3956,
											"end": 3986,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3986,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3986,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3956,
											"end": 3986,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4036,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4031,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "9C8515990FD8C61431C4AC8DB9B81475F90C292A1DDA77731E56C22E64FC7643"
										},
										{
											"begin": 4038,
											"end": 4044,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 4001,
											"end": 4045,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4045,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 4052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 646,
											"end": 763,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 646,
											"end": 763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 755,
											"end": 756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 745,
											"end": 757,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 2306,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2301,
											"end": 2304,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2294,
											"end": 2331,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2436,
											"end": 2440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2476,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2540,
											"end": 2557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2487,
											"end": 2558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2688,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 2571,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2680,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2682,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2694,
											"end": 2811,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 2694,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2803,
											"end": 2804,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2801,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2793,
											"end": 2805,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2817,
											"end": 2934,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 2817,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2924,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2916,
											"end": 2928,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 3505,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 2953,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3010,
											"end": 3018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3070,
											"end": 3073,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3067,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3055,
											"end": 3061,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3051,
											"end": 3068,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3047,
											"end": 3074,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3037,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 3037,
											"end": 3159,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 3078,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 3078,
											"end": 3157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3157,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 3078,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3037,
											"end": 3159,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 3037,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3198,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3240,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3207,
											"end": 3324,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3207,
											"end": 3324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 3207,
											"end": 3324,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3243,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 3243,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 3243,
											"end": 3322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3243,
											"end": 3322,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 3243,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3207,
											"end": 3324,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 3207,
											"end": 3324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3357,
											"end": 3361,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3362,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3411,
											"end": 3414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3403,
											"end": 3407,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3395,
											"end": 3401,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3408,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3389,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3374,
											"end": 3415,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3499,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 3371,
											"end": 3499,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3418,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 3418,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 3418,
											"end": 3497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3418,
											"end": 3497,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 3418,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3371,
											"end": 3499,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 3371,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 3505,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 3505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 3505,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 3505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 3505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 3505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3599,
											"end": 3605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3613,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3615,
											"end": 3621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3629,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3674,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3660,
											"end": 3669,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3658,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3670,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3643,
											"end": 3675,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3759,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 3640,
											"end": 3759,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 3678,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 3678,
											"end": 3757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3757,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 3678,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3759,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 3640,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 3868,
											"end": 3875,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3859,
											"end": 3865,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3857,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3844,
											"end": 3866,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 3823,
											"end": 3876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3876,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 3823,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3876,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3769,
											"end": 3886,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3927,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 3996,
											"end": 4003,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 3994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 3951,
											"end": 4004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 4004,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 3951,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 4004,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 4004,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3896,
											"end": 4014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4083,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4070,
											"end": 4079,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4085,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4104,
											"end": 4110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4101,
											"end": 4131,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4098,
											"end": 4215,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4098,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4098,
											"end": 4215,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 4134,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4134,
											"end": 4213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4213,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 4134,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4098,
											"end": 4215,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4098,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4247,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 4303,
											"end": 4310,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4283,
											"end": 4292,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4301,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4247,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4247,
											"end": 4311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4247,
											"end": 4311,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 4247,
											"end": 4311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4311,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4311,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 4328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4432,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 4334,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4385,
											"end": 4391,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4424,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4413,
											"end": 4425,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4403,
											"end": 4425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4403,
											"end": 4425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4432,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4432,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4606,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 4438,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4532,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4555,
											"end": 4561,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4550,
											"end": 4553,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4543,
											"end": 4562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4595,
											"end": 4599,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4590,
											"end": 4593,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4606,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4606,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4438,
											"end": 4606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4858,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 4612,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4693,
											"end": 4694,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4703,
											"end": 4816,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 4703,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4717,
											"end": 4723,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4714,
											"end": 4715,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4711,
											"end": 4724,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4816,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 4703,
											"end": 4816,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4802,
											"end": 4803,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4797,
											"end": 4800,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 4804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4805,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4783,
											"end": 4784,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 4781,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4774,
											"end": 4785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4806,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4739,
											"end": 4741,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4736,
											"end": 4737,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4732,
											"end": 4742,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4727,
											"end": 4742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4727,
											"end": 4742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 4703,
											"end": 4816,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4703,
											"end": 4816,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 4703,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4841,
											"end": 4847,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4836,
											"end": 4839,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4832,
											"end": 4848,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4674,
											"end": 4858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4612,
											"end": 4858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4864,
											"end": 4966,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 4864,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4956,
											"end": 4958,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4952,
											"end": 4959,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4947,
											"end": 4949,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4940,
											"end": 4945,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4936,
											"end": 4950,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4932,
											"end": 4960,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4922,
											"end": 4960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4922,
											"end": 4960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4864,
											"end": 4966,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4864,
											"end": 4966,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4864,
											"end": 4966,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4864,
											"end": 4966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4972,
											"end": 5345,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 4972,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5058,
											"end": 5061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5086,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5086,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 5086,
											"end": 5124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5086,
											"end": 5124,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 5086,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5203,
											"end": 5209,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5198,
											"end": 5201,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 5140,
											"end": 5210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 5210,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5140,
											"end": 5210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5210,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 5277,
											"end": 5283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5272,
											"end": 5275,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5265,
											"end": 5269,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5258,
											"end": 5263,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5254,
											"end": 5270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 5219,
											"end": 5284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5284,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 5219,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5331,
											"end": 5337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 5309,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5338,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5309,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5307,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5300,
											"end": 5339,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5339,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5062,
											"end": 5345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4972,
											"end": 5345,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4972,
											"end": 5345,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4972,
											"end": 5345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4972,
											"end": 5345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4972,
											"end": 5345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5351,
											"end": 5660,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5351,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5462,
											"end": 5466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5500,
											"end": 5502,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5477,
											"end": 5503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5477,
											"end": 5503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5543,
											"end": 5547,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5539,
											"end": 5559,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5535,
											"end": 5536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5524,
											"end": 5533,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5520,
											"end": 5537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5513,
											"end": 5560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5577,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 5648,
											"end": 5652,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5639,
											"end": 5645,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5577,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 5577,
											"end": 5653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5577,
											"end": 5653,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 5577,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5569,
											"end": 5653,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5569,
											"end": 5653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5351,
											"end": 5660,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5351,
											"end": 5660,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5351,
											"end": 5660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5351,
											"end": 5660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5351,
											"end": 5660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5666,
											"end": 5756,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 5666,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5743,
											"end": 5748,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5749,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5729,
											"end": 5750,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5718,
											"end": 5750,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5718,
											"end": 5750,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5666,
											"end": 5756,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5666,
											"end": 5756,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5666,
											"end": 5756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5666,
											"end": 5756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5871,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 5762,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5843,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 5858,
											"end": 5863,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5843,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 5843,
											"end": 5864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5843,
											"end": 5864,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 5843,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5841,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5865,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5877,
											"end": 6087,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 5877,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5964,
											"end": 5968,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6004,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5991,
											"end": 6000,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 6005,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5979,
											"end": 6005,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5979,
											"end": 6005,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6015,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 6077,
											"end": 6078,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6066,
											"end": 6075,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6079,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6059,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6015,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 6015,
											"end": 6080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6015,
											"end": 6080,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 6015,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5877,
											"end": 6087,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5877,
											"end": 6087,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5877,
											"end": 6087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5877,
											"end": 6087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5877,
											"end": 6087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6093,
											"end": 6203,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 6093,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6173,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 6191,
											"end": 6196,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 6173,
											"end": 6197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6197,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 6173,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6093,
											"end": 6203,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6093,
											"end": 6203,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6093,
											"end": 6203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6093,
											"end": 6203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6209,
											"end": 6359,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 6209,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6296,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 6328,
											"end": 6333,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6296,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 6296,
											"end": 6334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6296,
											"end": 6334,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 6296,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6294,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6286,
											"end": 6335,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 6276,
											"end": 6353,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6349,
											"end": 6350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6346,
											"end": 6347,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6339,
											"end": 6351,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6353,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 6276,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6209,
											"end": 6359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6209,
											"end": 6359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6365,
											"end": 6532,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 6365,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6425,
											"end": 6430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6469,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6450,
											"end": 6470,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6441,
											"end": 6470,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6441,
											"end": 6470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6479,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 6520,
											"end": 6525,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6479,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 6479,
											"end": 6526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6479,
											"end": 6526,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 6479,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6365,
											"end": 6532,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6365,
											"end": 6532,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6365,
											"end": 6532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6365,
											"end": 6532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6365,
											"end": 6532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6538,
											"end": 7185,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 6538,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6629,
											"end": 6635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6637,
											"end": 6643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6694,
											"end": 6696,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6682,
											"end": 6691,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6680,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6669,
											"end": 6692,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6665,
											"end": 6697,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6662,
											"end": 6781,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6662,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 6662,
											"end": 6781,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6700,
											"end": 6779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 6700,
											"end": 6779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 6700,
											"end": 6779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6700,
											"end": 6779,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 6700,
											"end": 6779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6662,
											"end": 6781,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 6662,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6820,
											"end": 6821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6845,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 6904,
											"end": 6911,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6895,
											"end": 6901,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6884,
											"end": 6893,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6880,
											"end": 6902,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6845,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 6845,
											"end": 6912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6845,
											"end": 6912,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 6845,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6835,
											"end": 6912,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6835,
											"end": 6912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6961,
											"end": 6963,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6987,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 7032,
											"end": 7039,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7030,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 6987,
											"end": 7040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7040,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 6987,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7040,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6932,
											"end": 7050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7089,
											"end": 7091,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7115,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 7160,
											"end": 7167,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7151,
											"end": 7157,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7140,
											"end": 7149,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7136,
											"end": 7158,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7115,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 7115,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7115,
											"end": 7168,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 7115,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7105,
											"end": 7168,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7105,
											"end": 7168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6538,
											"end": 7185,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6538,
											"end": 7185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6538,
											"end": 7185,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6538,
											"end": 7185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6538,
											"end": 7185,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6538,
											"end": 7185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7191,
											"end": 7360,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 7191,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7286,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7309,
											"end": 7315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7304,
											"end": 7307,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7297,
											"end": 7316,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7349,
											"end": 7353,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7344,
											"end": 7347,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7340,
											"end": 7354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7191,
											"end": 7360,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7191,
											"end": 7360,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7191,
											"end": 7360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7191,
											"end": 7360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7191,
											"end": 7360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7366,
											"end": 7530,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 7366,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7522,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 7502,
											"end": 7503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7494,
											"end": 7500,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7490,
											"end": 7504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7523,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7366,
											"end": 7530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7366,
											"end": 7530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7902,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 7536,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7678,
											"end": 7681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7699,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 7763,
											"end": 7765,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 7758,
											"end": 7761,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7699,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 7699,
											"end": 7766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7699,
											"end": 7766,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 7699,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7692,
											"end": 7766,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7692,
											"end": 7766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 7864,
											"end": 7867,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 7775,
											"end": 7868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 7868,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 7775,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7893,
											"end": 7895,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7888,
											"end": 7891,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7884,
											"end": 7896,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7877,
											"end": 7896,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7877,
											"end": 7896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7902,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7902,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7902,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 8327,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 7908,
											"end": 8327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8074,
											"end": 8078,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8114,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8101,
											"end": 8110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8097,
											"end": 8115,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8089,
											"end": 8115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8089,
											"end": 8115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8161,
											"end": 8170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8155,
											"end": 8159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8151,
											"end": 8171,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8147,
											"end": 8148,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8136,
											"end": 8145,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8149,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8125,
											"end": 8172,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 8315,
											"end": 8319,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 8189,
											"end": 8320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8320,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 8189,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8181,
											"end": 8320,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8181,
											"end": 8320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 8327,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 8327,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 8327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7908,
											"end": 8327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8333,
											"end": 8503,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 8333,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8495,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 8469,
											"end": 8470,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8461,
											"end": 8467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8457,
											"end": 8471,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8450,
											"end": 8496,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8333,
											"end": 8503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8333,
											"end": 8503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8875,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 8509,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8651,
											"end": 8654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8672,
											"end": 8739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 8736,
											"end": 8738,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 8731,
											"end": 8734,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 8672,
											"end": 8739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8739,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 8672,
											"end": 8739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8739,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8748,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 8837,
											"end": 8840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8748,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 8748,
											"end": 8841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8748,
											"end": 8841,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 8748,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8866,
											"end": 8868,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8861,
											"end": 8864,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8857,
											"end": 8869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8850,
											"end": 8869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8850,
											"end": 8869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8875,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8875,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8875,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8881,
											"end": 9300,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 8881,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9047,
											"end": 9051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9085,
											"end": 9087,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9074,
											"end": 9083,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9062,
											"end": 9088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9062,
											"end": 9088,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9134,
											"end": 9143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9128,
											"end": 9132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9124,
											"end": 9144,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9120,
											"end": 9121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9109,
											"end": 9118,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9105,
											"end": 9122,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9098,
											"end": 9145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9162,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 9288,
											"end": 9292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9162,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 9162,
											"end": 9293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9162,
											"end": 9293,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 9162,
											"end": 9293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9154,
											"end": 9293,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9154,
											"end": 9293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8881,
											"end": 9300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8881,
											"end": 9300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8881,
											"end": 9300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8881,
											"end": 9300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9306,
											"end": 9453,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 9306,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9407,
											"end": 9418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9444,
											"end": 9447,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9447,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9306,
											"end": 9453,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9306,
											"end": 9453,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9306,
											"end": 9453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9306,
											"end": 9453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9306,
											"end": 9453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9459,
											"end": 9573,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 9459,
											"end": 9573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9459,
											"end": 9573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9459,
											"end": 9573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9579,
											"end": 9977,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 9579,
											"end": 9977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9738,
											"end": 9741,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 9840,
											"end": 9841,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9835,
											"end": 9838,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9759,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 9759,
											"end": 9842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9759,
											"end": 9842,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 9759,
											"end": 9842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9752,
											"end": 9842,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9752,
											"end": 9842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9851,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 9940,
											"end": 9943,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9851,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 9851,
											"end": 9944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9851,
											"end": 9944,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 9851,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9969,
											"end": 9970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9964,
											"end": 9967,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9960,
											"end": 9971,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9953,
											"end": 9971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9953,
											"end": 9971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9579,
											"end": 9977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9579,
											"end": 9977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9579,
											"end": 9977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9579,
											"end": 9977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9983,
											"end": 10362,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 9983,
											"end": 10362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10167,
											"end": 10170,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10189,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 10332,
											"end": 10335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10189,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 10189,
											"end": 10336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10189,
											"end": 10336,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 10189,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10182,
											"end": 10336,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10182,
											"end": 10336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10353,
											"end": 10356,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10346,
											"end": 10356,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10346,
											"end": 10356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9983,
											"end": 10362,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9983,
											"end": 10362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9983,
											"end": 10362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9983,
											"end": 10362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10368,
											"end": 10541,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 10368,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10508,
											"end": 10533,
											"name": "PUSH",
											"source": 10,
											"value": "4574686572207769746864726177616C206661696C6564000000000000000000"
										},
										{
											"begin": 10504,
											"end": 10505,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10496,
											"end": 10502,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10492,
											"end": 10506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10485,
											"end": 10534,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10368,
											"end": 10541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10368,
											"end": 10541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10547,
											"end": 10913,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 10547,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10689,
											"end": 10692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10710,
											"end": 10777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 10774,
											"end": 10776,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 10769,
											"end": 10772,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10710,
											"end": 10777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 10710,
											"end": 10777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10710,
											"end": 10777,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 10710,
											"end": 10777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 10777,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 10777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 10875,
											"end": 10878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 10786,
											"end": 10879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10879,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 10786,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10904,
											"end": 10906,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10899,
											"end": 10902,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 10907,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10888,
											"end": 10907,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10888,
											"end": 10907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10547,
											"end": 10913,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10547,
											"end": 10913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10547,
											"end": 10913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10547,
											"end": 10913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10919,
											"end": 11338,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10919,
											"end": 11338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11085,
											"end": 11089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11123,
											"end": 11125,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11112,
											"end": 11121,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11126,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11100,
											"end": 11126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11100,
											"end": 11126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11172,
											"end": 11181,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11166,
											"end": 11170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11162,
											"end": 11182,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11158,
											"end": 11159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11147,
											"end": 11156,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11136,
											"end": 11183,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11200,
											"end": 11331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 11326,
											"end": 11330,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11200,
											"end": 11331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 11200,
											"end": 11331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11200,
											"end": 11331,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 11200,
											"end": 11331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11192,
											"end": 11331,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11192,
											"end": 11331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10919,
											"end": 11338,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10919,
											"end": 11338,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10919,
											"end": 11338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10919,
											"end": 11338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11344,
											"end": 11516,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 11344,
											"end": 11516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11484,
											"end": 11508,
											"name": "PUSH",
											"source": 10,
											"value": "41646472657373206E6F7420617574686F72697A656400000000000000000000"
										},
										{
											"begin": 11480,
											"end": 11481,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11472,
											"end": 11478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11468,
											"end": 11482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11461,
											"end": 11509,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11344,
											"end": 11516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11344,
											"end": 11516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11522,
											"end": 11888,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 11522,
											"end": 11888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11664,
											"end": 11667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11685,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 11749,
											"end": 11751,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 11744,
											"end": 11747,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11685,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 11685,
											"end": 11752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11685,
											"end": 11752,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 11685,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11678,
											"end": 11752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11678,
											"end": 11752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11761,
											"end": 11854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 11850,
											"end": 11853,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11761,
											"end": 11854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 11761,
											"end": 11854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11761,
											"end": 11854,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 11761,
											"end": 11854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11879,
											"end": 11881,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11874,
											"end": 11877,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11870,
											"end": 11882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11863,
											"end": 11882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11863,
											"end": 11882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11522,
											"end": 11888,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11522,
											"end": 11888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11522,
											"end": 11888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11522,
											"end": 11888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11894,
											"end": 12313,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 11894,
											"end": 12313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12060,
											"end": 12064,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12098,
											"end": 12100,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12087,
											"end": 12096,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12083,
											"end": 12101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12075,
											"end": 12101,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12075,
											"end": 12101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12147,
											"end": 12156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12141,
											"end": 12145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12137,
											"end": 12157,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12133,
											"end": 12134,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12122,
											"end": 12131,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12118,
											"end": 12135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12111,
											"end": 12158,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 12301,
											"end": 12305,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 12175,
											"end": 12306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12306,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 12175,
											"end": 12306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12306,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11894,
											"end": 12313,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11894,
											"end": 12313,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11894,
											"end": 12313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11894,
											"end": 12313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12319,
											"end": 12483,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 12319,
											"end": 12483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12459,
											"end": 12475,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420746172676574000000000000000000000000000000000000"
										},
										{
											"begin": 12455,
											"end": 12456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12447,
											"end": 12453,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12443,
											"end": 12457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12436,
											"end": 12476,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12319,
											"end": 12483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12319,
											"end": 12483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12489,
											"end": 12855,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 12489,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12631,
											"end": 12634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12652,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 12716,
											"end": 12718,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 12711,
											"end": 12714,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12652,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 12652,
											"end": 12719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12652,
											"end": 12719,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 12652,
											"end": 12719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12645,
											"end": 12719,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12645,
											"end": 12719,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12728,
											"end": 12821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 12817,
											"end": 12820,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12728,
											"end": 12821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 12728,
											"end": 12821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12728,
											"end": 12821,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 12728,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12846,
											"end": 12848,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12841,
											"end": 12844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12837,
											"end": 12849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12830,
											"end": 12849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12830,
											"end": 12849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12489,
											"end": 12855,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12489,
											"end": 12855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12489,
											"end": 12855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12489,
											"end": 12855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12861,
											"end": 13280,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 12861,
											"end": 13280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13027,
											"end": 13031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13065,
											"end": 13067,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13054,
											"end": 13063,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13050,
											"end": 13068,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13042,
											"end": 13068,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13042,
											"end": 13068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13114,
											"end": 13123,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13108,
											"end": 13112,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13104,
											"end": 13124,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13100,
											"end": 13101,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13098,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13085,
											"end": 13102,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13078,
											"end": 13125,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13142,
											"end": 13273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 13268,
											"end": 13272,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13142,
											"end": 13273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 13142,
											"end": 13273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13142,
											"end": 13273,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 13142,
											"end": 13273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13273,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12861,
											"end": 13280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12861,
											"end": 13280,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12861,
											"end": 13280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12861,
											"end": 13280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13286,
											"end": 13432,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 13286,
											"end": 13432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13383,
											"end": 13389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13378,
											"end": 13381,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13373,
											"end": 13376,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13360,
											"end": 13390,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 13424,
											"end": 13425,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13415,
											"end": 13421,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13410,
											"end": 13413,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13406,
											"end": 13422,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13399,
											"end": 13426,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13286,
											"end": 13432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13286,
											"end": 13432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13286,
											"end": 13432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13286,
											"end": 13432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13787,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 13460,
											"end": 13787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13574,
											"end": 13577,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13595,
											"end": 13683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 13676,
											"end": 13682,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13671,
											"end": 13674,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13595,
											"end": 13683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 13595,
											"end": 13683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13595,
											"end": 13683,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 13595,
											"end": 13683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13683,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13683,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13693,
											"end": 13749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 13742,
											"end": 13748,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13737,
											"end": 13740,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13730,
											"end": 13735,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13693,
											"end": 13749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 13693,
											"end": 13749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13693,
											"end": 13749,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 13693,
											"end": 13749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13774,
											"end": 13780,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13769,
											"end": 13772,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13765,
											"end": 13781,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13758,
											"end": 13781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13758,
											"end": 13781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13787,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13787,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13460,
											"end": 13787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13793,
											"end": 14084,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 13793,
											"end": 14084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13933,
											"end": 13936,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13955,
											"end": 14058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 14054,
											"end": 14057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14045,
											"end": 14051,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14037,
											"end": 14043,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13955,
											"end": 14058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 13955,
											"end": 14058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13955,
											"end": 14058,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 13955,
											"end": 14058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13948,
											"end": 14058,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13948,
											"end": 14058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14075,
											"end": 14078,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14068,
											"end": 14078,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14068,
											"end": 14078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13793,
											"end": 14084,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13793,
											"end": 14084,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13793,
											"end": 14084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13793,
											"end": 14084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13793,
											"end": 14084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13793,
											"end": 14084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14090,
											"end": 14251,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 14090,
											"end": 14251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14230,
											"end": 14243,
											"name": "PUSH",
											"source": 10,
											"value": "43616C6C206661696C6564000000000000000000000000000000000000000000"
										},
										{
											"begin": 14226,
											"end": 14227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14218,
											"end": 14224,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14214,
											"end": 14228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14207,
											"end": 14244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14090,
											"end": 14251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14090,
											"end": 14251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14257,
											"end": 14623,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 14257,
											"end": 14623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14399,
											"end": 14402,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14420,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 14484,
											"end": 14486,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 14479,
											"end": 14482,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14420,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 14420,
											"end": 14487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14420,
											"end": 14487,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 14420,
											"end": 14487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14413,
											"end": 14487,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14413,
											"end": 14487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14496,
											"end": 14589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 14585,
											"end": 14588,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14496,
											"end": 14589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 14496,
											"end": 14589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14496,
											"end": 14589,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 14496,
											"end": 14589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14614,
											"end": 14616,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14605,
											"end": 14617,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14257,
											"end": 14623,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14257,
											"end": 14623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14257,
											"end": 14623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14257,
											"end": 14623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14629,
											"end": 15048,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 14629,
											"end": 15048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 14799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14833,
											"end": 14835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14822,
											"end": 14831,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14818,
											"end": 14836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14810,
											"end": 14836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14810,
											"end": 14836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14882,
											"end": 14891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14876,
											"end": 14880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14872,
											"end": 14892,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14868,
											"end": 14869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14857,
											"end": 14866,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14853,
											"end": 14870,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14846,
											"end": 14893,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14910,
											"end": 15041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 15036,
											"end": 15040,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14910,
											"end": 15041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 14910,
											"end": 15041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14910,
											"end": 15041,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 14910,
											"end": 15041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14902,
											"end": 15041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14902,
											"end": 15041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14629,
											"end": 15048,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14629,
											"end": 15048,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14629,
											"end": 15048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14629,
											"end": 15048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15076,
											"end": 15390,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 15076,
											"end": 15390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15172,
											"end": 15175,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15193,
											"end": 15263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 15256,
											"end": 15262,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15251,
											"end": 15254,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15193,
											"end": 15263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 15193,
											"end": 15263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15193,
											"end": 15263,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 15193,
											"end": 15263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15186,
											"end": 15263,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15186,
											"end": 15263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15273,
											"end": 15329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 15322,
											"end": 15328,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15317,
											"end": 15320,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15310,
											"end": 15315,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15273,
											"end": 15329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 15273,
											"end": 15329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15273,
											"end": 15329,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 15273,
											"end": 15329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15354,
											"end": 15383,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 15376,
											"end": 15382,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15354,
											"end": 15383,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 15354,
											"end": 15383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15354,
											"end": 15383,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 15354,
											"end": 15383,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15349,
											"end": 15352,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15345,
											"end": 15384,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15338,
											"end": 15384,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15338,
											"end": 15384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15076,
											"end": 15390,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15076,
											"end": 15390,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15076,
											"end": 15390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15076,
											"end": 15390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15076,
											"end": 15390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15076,
											"end": 15390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15396,
											"end": 16032,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 15396,
											"end": 16032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15591,
											"end": 15595,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15629,
											"end": 15631,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15618,
											"end": 15627,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15614,
											"end": 15632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15606,
											"end": 15632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15606,
											"end": 15632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15642,
											"end": 15713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 15710,
											"end": 15711,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15699,
											"end": 15708,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15695,
											"end": 15712,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15686,
											"end": 15692,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15642,
											"end": 15713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 15642,
											"end": 15713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15642,
											"end": 15713,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 15642,
											"end": 15713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15760,
											"end": 15769,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15754,
											"end": 15758,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15750,
											"end": 15770,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15745,
											"end": 15747,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15734,
											"end": 15743,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15730,
											"end": 15748,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15723,
											"end": 15771,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15788,
											"end": 15874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 15869,
											"end": 15873,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15860,
											"end": 15866,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15852,
											"end": 15858,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15788,
											"end": 15874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 15788,
											"end": 15874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15788,
											"end": 15874,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 15788,
											"end": 15874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15780,
											"end": 15874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15780,
											"end": 15874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15921,
											"end": 15930,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15915,
											"end": 15919,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15911,
											"end": 15931,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15906,
											"end": 15908,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15895,
											"end": 15904,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15891,
											"end": 15909,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15884,
											"end": 15932,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15949,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 16020,
											"end": 16024,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16011,
											"end": 16017,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15949,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 15949,
											"end": 16025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15949,
											"end": 16025,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 15949,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15941,
											"end": 16025,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15941,
											"end": 16025,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15396,
											"end": 16032,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15396,
											"end": 16032,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 15396,
											"end": 16032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15396,
											"end": 16032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15396,
											"end": 16032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15396,
											"end": 16032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15396,
											"end": 16032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15396,
											"end": 16032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16038,
											"end": 16203,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 16038,
											"end": 16203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16178,
											"end": 16195,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 16174,
											"end": 16175,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16166,
											"end": 16172,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16162,
											"end": 16176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16155,
											"end": 16196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16038,
											"end": 16203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16038,
											"end": 16203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16209,
											"end": 16575,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 16209,
											"end": 16575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16351,
											"end": 16354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16372,
											"end": 16439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 16436,
											"end": 16438,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 16431,
											"end": 16434,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16372,
											"end": 16439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 16372,
											"end": 16439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16372,
											"end": 16439,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 16372,
											"end": 16439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16365,
											"end": 16439,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16365,
											"end": 16439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16448,
											"end": 16541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 16537,
											"end": 16540,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16448,
											"end": 16541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 16448,
											"end": 16541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16448,
											"end": 16541,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 16448,
											"end": 16541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16566,
											"end": 16568,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16561,
											"end": 16564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16557,
											"end": 16569,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16550,
											"end": 16569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16550,
											"end": 16569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16209,
											"end": 16575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16209,
											"end": 16575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16209,
											"end": 16575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16209,
											"end": 16575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16581,
											"end": 17000,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 16581,
											"end": 17000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16747,
											"end": 16751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16785,
											"end": 16787,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16774,
											"end": 16783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16770,
											"end": 16788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16762,
											"end": 16788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16762,
											"end": 16788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16834,
											"end": 16843,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16828,
											"end": 16832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16824,
											"end": 16844,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16820,
											"end": 16821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16809,
											"end": 16818,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16805,
											"end": 16822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16798,
											"end": 16845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16862,
											"end": 16993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 16988,
											"end": 16992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16862,
											"end": 16993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 16862,
											"end": 16993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16862,
											"end": 16993,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 16862,
											"end": 16993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16854,
											"end": 16993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16854,
											"end": 16993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16581,
											"end": 17000,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16581,
											"end": 17000,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16581,
											"end": 17000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16581,
											"end": 17000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17006,
											"end": 17174,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 17006,
											"end": 17174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17146,
											"end": 17166,
											"name": "PUSH",
											"source": 10,
											"value": "416C726561647920617574686F72697A65640000000000000000000000000000"
										},
										{
											"begin": 17142,
											"end": 17143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17134,
											"end": 17140,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17130,
											"end": 17144,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17123,
											"end": 17167,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17006,
											"end": 17174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17006,
											"end": 17174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17180,
											"end": 17546,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 17180,
											"end": 17546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17322,
											"end": 17325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17343,
											"end": 17410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 17407,
											"end": 17409,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 17402,
											"end": 17405,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17343,
											"end": 17410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 17343,
											"end": 17410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17343,
											"end": 17410,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 17343,
											"end": 17410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17336,
											"end": 17410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17336,
											"end": 17410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17419,
											"end": 17512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 17508,
											"end": 17511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17419,
											"end": 17512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 17419,
											"end": 17512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17419,
											"end": 17512,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 17419,
											"end": 17512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17537,
											"end": 17539,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17532,
											"end": 17535,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17528,
											"end": 17540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17521,
											"end": 17540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17521,
											"end": 17540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17180,
											"end": 17546,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17180,
											"end": 17546,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17180,
											"end": 17546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17180,
											"end": 17546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17552,
											"end": 17971,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 17552,
											"end": 17971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17718,
											"end": 17722,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17756,
											"end": 17758,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17745,
											"end": 17754,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17741,
											"end": 17759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17733,
											"end": 17759,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17733,
											"end": 17759,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17805,
											"end": 17814,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17799,
											"end": 17803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17795,
											"end": 17815,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17791,
											"end": 17792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17780,
											"end": 17789,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17776,
											"end": 17793,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17769,
											"end": 17816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17833,
											"end": 17964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 17959,
											"end": 17963,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17833,
											"end": 17964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 17833,
											"end": 17964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17833,
											"end": 17964,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 17833,
											"end": 17964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17825,
											"end": 17964,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17825,
											"end": 17964,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17552,
											"end": 17971,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17552,
											"end": 17971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17552,
											"end": 17971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17552,
											"end": 17971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17977,
											"end": 18148,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 17977,
											"end": 18148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18117,
											"end": 18140,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
										},
										{
											"begin": 18113,
											"end": 18114,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18105,
											"end": 18111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18101,
											"end": 18115,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18094,
											"end": 18141,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17977,
											"end": 18148,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17977,
											"end": 18148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18154,
											"end": 18520,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 18154,
											"end": 18520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18296,
											"end": 18299,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18317,
											"end": 18384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 18381,
											"end": 18383,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 18376,
											"end": 18379,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18317,
											"end": 18384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 18317,
											"end": 18384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18317,
											"end": 18384,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 18317,
											"end": 18384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18310,
											"end": 18384,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18310,
											"end": 18384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18393,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 18482,
											"end": 18485,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18393,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 18393,
											"end": 18486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18393,
											"end": 18486,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 18393,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18511,
											"end": 18513,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18506,
											"end": 18509,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18502,
											"end": 18514,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18495,
											"end": 18514,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18495,
											"end": 18514,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18154,
											"end": 18520,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18154,
											"end": 18520,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18154,
											"end": 18520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18154,
											"end": 18520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18526,
											"end": 18945,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 18526,
											"end": 18945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18692,
											"end": 18696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18730,
											"end": 18732,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18719,
											"end": 18728,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18715,
											"end": 18733,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18707,
											"end": 18733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18707,
											"end": 18733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18779,
											"end": 18788,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18773,
											"end": 18777,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18769,
											"end": 18789,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18765,
											"end": 18766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18754,
											"end": 18763,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18750,
											"end": 18767,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18743,
											"end": 18790,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18807,
											"end": 18938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 18933,
											"end": 18937,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18807,
											"end": 18938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 18807,
											"end": 18938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18807,
											"end": 18938,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 18807,
											"end": 18938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18799,
											"end": 18938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18799,
											"end": 18938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18526,
											"end": 18945,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18526,
											"end": 18945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18526,
											"end": 18945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18526,
											"end": 18945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18951,
											"end": 19126,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 18951,
											"end": 19126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19091,
											"end": 19118,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420726563697069656E74206164647265737300000000000000"
										},
										{
											"begin": 19087,
											"end": 19088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19079,
											"end": 19085,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19075,
											"end": 19089,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19068,
											"end": 19119,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18951,
											"end": 19126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18951,
											"end": 19126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19132,
											"end": 19498,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 19132,
											"end": 19498,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19274,
											"end": 19277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19295,
											"end": 19362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 19359,
											"end": 19361,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 19354,
											"end": 19357,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19295,
											"end": 19362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 19295,
											"end": 19362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19295,
											"end": 19362,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 19295,
											"end": 19362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19288,
											"end": 19362,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19288,
											"end": 19362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19371,
											"end": 19464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 19460,
											"end": 19463,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19371,
											"end": 19464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 19371,
											"end": 19464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19371,
											"end": 19464,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 19371,
											"end": 19464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19489,
											"end": 19491,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19484,
											"end": 19487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19480,
											"end": 19492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19473,
											"end": 19492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19473,
											"end": 19492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19132,
											"end": 19498,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19132,
											"end": 19498,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19132,
											"end": 19498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19132,
											"end": 19498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19504,
											"end": 19923,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 19504,
											"end": 19923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19670,
											"end": 19674,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19708,
											"end": 19710,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19697,
											"end": 19706,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19693,
											"end": 19711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19685,
											"end": 19711,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19685,
											"end": 19711,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19757,
											"end": 19766,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19751,
											"end": 19755,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19747,
											"end": 19767,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19743,
											"end": 19744,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19732,
											"end": 19741,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19728,
											"end": 19745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19721,
											"end": 19768,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19785,
											"end": 19916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 19911,
											"end": 19915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19785,
											"end": 19916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 19785,
											"end": 19916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19785,
											"end": 19916,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 19785,
											"end": 19916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19777,
											"end": 19916,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19777,
											"end": 19916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19504,
											"end": 19923,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19504,
											"end": 19923,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19504,
											"end": 19923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19504,
											"end": 19923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19929,
											"end": 20110,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 19929,
											"end": 20110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20069,
											"end": 20102,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 20065,
											"end": 20066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20057,
											"end": 20063,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20053,
											"end": 20067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20046,
											"end": 20103,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19929,
											"end": 20110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19929,
											"end": 20110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20116,
											"end": 20482,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 20116,
											"end": 20482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20258,
											"end": 20261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20279,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 20343,
											"end": 20345,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 20338,
											"end": 20341,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20279,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 20279,
											"end": 20346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20279,
											"end": 20346,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 20279,
											"end": 20346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20272,
											"end": 20346,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20272,
											"end": 20346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20355,
											"end": 20448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 20444,
											"end": 20447,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20355,
											"end": 20448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 20355,
											"end": 20448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20355,
											"end": 20448,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 20355,
											"end": 20448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20473,
											"end": 20475,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20468,
											"end": 20471,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20464,
											"end": 20476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20457,
											"end": 20476,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20457,
											"end": 20476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20116,
											"end": 20482,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20116,
											"end": 20482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20116,
											"end": 20482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20116,
											"end": 20482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20488,
											"end": 20907,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 20488,
											"end": 20907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20654,
											"end": 20658,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20692,
											"end": 20694,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20681,
											"end": 20690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20677,
											"end": 20695,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20669,
											"end": 20695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20669,
											"end": 20695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20741,
											"end": 20750,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20735,
											"end": 20739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20731,
											"end": 20751,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20727,
											"end": 20728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20716,
											"end": 20725,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20712,
											"end": 20729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20705,
											"end": 20752,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20769,
											"end": 20900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 20895,
											"end": 20899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20769,
											"end": 20900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 20769,
											"end": 20900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20769,
											"end": 20900,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 20769,
											"end": 20900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20761,
											"end": 20900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20761,
											"end": 20900,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20488,
											"end": 20907,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20488,
											"end": 20907,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20488,
											"end": 20907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20488,
											"end": 20907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20913,
											"end": 21245,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 20913,
											"end": 21245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21034,
											"end": 21038,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21072,
											"end": 21074,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21061,
											"end": 21070,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21057,
											"end": 21075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21049,
											"end": 21075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21049,
											"end": 21075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21085,
											"end": 21156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 21153,
											"end": 21154,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21142,
											"end": 21151,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21138,
											"end": 21155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21129,
											"end": 21135,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21085,
											"end": 21156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 21085,
											"end": 21156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21085,
											"end": 21156,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 21085,
											"end": 21156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21166,
											"end": 21238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 21234,
											"end": 21236,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21223,
											"end": 21232,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21219,
											"end": 21237,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21210,
											"end": 21216,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21166,
											"end": 21238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 21166,
											"end": 21238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21166,
											"end": 21238,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 21166,
											"end": 21238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20913,
											"end": 21245,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20913,
											"end": 21245,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20913,
											"end": 21245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20913,
											"end": 21245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20913,
											"end": 21245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20913,
											"end": 21245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"C/coreWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAuthorized(address)": "cf1c316a",
							"authorized(address)": "b9181611",
							"executeCall(address,uint256,bytes)": "9e5d4c49",
							"owner()": "8da5cb5b",
							"removeAuthorized(address)": "485d7d94",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"transferToken(address,address,uint256)": "f5537ede",
							"withdrawEther(uint256)": "3bed33ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AuthorizedAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AuthorizedRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAuthorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAuthorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"addAuthorized(address)\":{\"params\":{\"account\":\"The address to authorize.\"}},\"executeCall(address,uint256,bytes)\":{\"params\":{\"data\":\"The calldata for the call.\",\"target\":\"The target address to call.\",\"value\":\"The amount of Ether (in wei) to send.\"},\"returns\":{\"result\":\"The returned data from the call.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeAuthorized(address)\":{\"params\":{\"account\":\"The address to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferToken(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"to\":\"The recipient address.\",\"token\":\"The ERC20 token to transfer.\"}},\"withdrawEther(uint256)\":{\"params\":{\"amount\":\"The amount of Ether (in wei) to withdraw.\"}}},\"title\":\"CoreWallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAuthorized(address)\":{\"notice\":\"Allows the owner to add an authorized address.\"},\"constructor\":{\"notice\":\"Constructor sets the deployer as the initial owner.\"},\"executeCall(address,uint256,bytes)\":{\"notice\":\"Executes an arbitrary call from this wallet.\"},\"removeAuthorized(address)\":{\"notice\":\"Allows the owner to remove an authorized address.\"},\"transferToken(address,address,uint256)\":{\"notice\":\"Transfers ERC20 tokens from the wallet to a specified address.\"},\"withdrawEther(uint256)\":{\"notice\":\"Withdraws Ether from the wallet to the caller.\"}},\"notice\":\"A dynamic, optimized, and secure smart wallet contract that can hold Ether and ERC20 tokens. The owner can add or remove additional authorized addresses. Authorized addresses can execute arbitrary calls and transfer funds on behalf of the wallet.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"C/coreWallet.sol\":\"CoreWallet\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"C/coreWallet.sol\":{\"keccak256\":\"0xf9a3bce85bc83ca43d4a66d01d501dea52ab16863f56322fb4e369c74683ac67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff675e235231c2d6bca99b7bc296bf75821b22a50267bf1c87675a66e0ab31c5\",\"dweb:/ipfs/QmcUnHmYYeP4g3tMW9SR8iQ9Mg78JJJiaVaNtMnZ8r8b9o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "C/coreWallet.sol:CoreWallet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "C/coreWallet.sol:CoreWallet",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 850,
								"contract": "C/coreWallet.sol:CoreWallet",
								"label": "authorized",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addAuthorized(address)": {
								"notice": "Allows the owner to add an authorized address."
							},
							"constructor": {
								"notice": "Constructor sets the deployer as the initial owner."
							},
							"executeCall(address,uint256,bytes)": {
								"notice": "Executes an arbitrary call from this wallet."
							},
							"removeAuthorized(address)": {
								"notice": "Allows the owner to remove an authorized address."
							},
							"transferToken(address,address,uint256)": {
								"notice": "Transfers ERC20 tokens from the wallet to a specified address."
							},
							"withdrawEther(uint256)": {
								"notice": "Withdraws Ether from the wallet to the caller."
							}
						},
						"notice": "A dynamic, optimized, and secure smart wallet contract that can hold Ether and ERC20 tokens. The owner can add or remove additional authorized addresses. Authorized addresses can execute arbitrary calls and transfer funds on behalf of the wallet.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							819
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 820,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 819,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 819,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								819
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 801,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							831
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 831,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								831,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							831
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 832,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							789
						]
					},
					"id": 790,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 790,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 790,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 789,
							"linearizedBaseContracts": [
								789
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 789,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 789,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "2548:139:6",
										"statements": [
											{
												"assignments": [
													464
												],
												"declarations": [
													{
														"constant": false,
														"id": 464,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "2558:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 463,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 469,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$789",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$789",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2612:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2581:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "2581:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 475,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2643:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 476,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2650:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 477,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "2659:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 478,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2674:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 474,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "2630:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2493:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2493:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2493:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2507:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2524:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:6"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:6"
									},
									"scope": 789,
									"src": "2462:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "3453:370:6",
										"statements": [
											{
												"id": 524,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:6",
												"statements": [
													{
														"assignments": [
															495
														],
														"declarations": [
															{
																"constant": false,
																"id": 495,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 524,
																"src": "3487:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 504,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 500,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$789",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$789",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 498,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 502,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3545:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 496,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3514:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "3514:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 505,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "3571:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 506,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "3590:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 515,
														"nodeType": "IfStatement",
														"src": "3567:160:6",
														"trueBody": {
															"id": 514,
															"nodeType": "Block",
															"src": "3609:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 509,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 489,
																				"src": "3667:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 510,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "3676:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 511,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "3694:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 508,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "3634:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 513,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 517,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3753:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 518,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3760:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 519,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "3769:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 520,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "3788:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 516,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "3740:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 523,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3386:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 485,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3386:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3386:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3400:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3417:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:6"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:6"
									},
									"scope": 789,
									"src": "3355:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "4477:303:6",
										"statements": [
											{
												"assignments": [
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "4487:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 537,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 541,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "4530:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "4530:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 543,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "4546:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 544,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4555:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 545,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 539,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:6"
											},
											{
												"condition": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 549,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "4602:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 550,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "4609:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 548,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "4578:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "4573:201:6",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "4624:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 554,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "4658:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 557,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "4680:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "4680:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 559,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 532,
																						"src": "4696:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 555,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 553,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4638:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 564,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 566,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "4743:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 567,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "4750:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 565,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4723:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 569,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4422:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 529,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 528,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4422:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4422:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4436:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4453:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:6"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:6"
									},
									"scope": 789,
									"src": "4400:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "5227:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 586,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "5241:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 600,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "5350:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 601,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5354:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 602,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5361:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 598,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "5328:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5328:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 613,
													"nodeType": "IfStatement",
													"src": "5323:117:6",
													"trueBody": {
														"id": 612,
														"nodeType": "Block",
														"src": "5368:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 608,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 577,
																					"src": "5422:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 606,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 605,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5389:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 611,
																"nodeType": "RevertStatement",
																"src": "5382:47:6"
															}
														]
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "5237:203:6",
												"trueBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "5262:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "5289:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 593,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "5296:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "5300:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 591,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5276:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 596,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5156:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 576,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 575,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5156:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5156:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5172:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5184:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5199:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:6"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:6"
									},
									"scope": 789,
									"src": "5124:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "5965:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 631,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "5979:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 646,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6102:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 647,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "6108:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 648,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6112:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 649,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6119:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 644,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "6076:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6076:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 660,
													"nodeType": "IfStatement",
													"src": "6071:127:6",
													"trueBody": {
														"id": 659,
														"nodeType": "Block",
														"src": "6126:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 655,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 620,
																					"src": "6180:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 654,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 653,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 652,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6147:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 658,
																"nodeType": "RevertStatement",
																"src": "6140:47:6"
															}
														]
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "5975:223:6",
												"trueBody": {
													"id": 643,
													"nodeType": "Block",
													"src": "6000:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "6031:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 638,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "6038:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "6044:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 640,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6048:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6014:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 642,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5843:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 619,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 618,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5843:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5843:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5867:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5889:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5909:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5932:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:6"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:6"
									},
									"scope": 789,
									"src": "5798:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "6971:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 676,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "6985:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 690,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "7093:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 691,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "7097:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 692,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "7104:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 688,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "7072:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7072:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 703,
													"nodeType": "IfStatement",
													"src": "7067:116:6",
													"trueBody": {
														"id": 702,
														"nodeType": "Block",
														"src": "7111:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 698,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 667,
																					"src": "7165:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 696,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 695,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7132:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 701,
																"nodeType": "RevertStatement",
																"src": "7125:47:6"
															}
														]
													}
												},
												"id": 704,
												"nodeType": "IfStatement",
												"src": "6981:202:6",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "7006:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 682,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "7033:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 683,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "7040:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 684,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "7044:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 681,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "7020:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6900:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 665,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6900:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6900:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6916:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6928:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6943:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 672,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:6"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:6"
									},
									"scope": 789,
									"src": "6869:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7756:650:6",
										"statements": [
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "7766:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 717,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:6"
											},
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "7794:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7848:396:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7877:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7998:157:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7982:15:6"
															},
															"nodeType": "YulIf",
															"src": "7979:176:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8168:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8182:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8211:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8226:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:6",
														"valueSize": 1
													},
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:6",
														"valueSize": 1
													},
													{
														"declaration": 716,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:6",
														"valueSize": 1
													},
													{
														"declaration": 719,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:6",
														"valueSize": 1
													},
													{
														"declaration": 710,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 721,
												"nodeType": "InlineAssembly",
												"src": "7823:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 722,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "8258:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 733,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "8310:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 727,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "8284:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 725,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "IfStatement",
												"src": "8254:146:6",
												"trueBody": {
													"id": 744,
													"nodeType": "Block",
													"src": "8328:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 740,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "8382:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 738,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 737,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "8349:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 743,
															"nodeType": "RevertStatement",
															"src": "8342:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7715:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 709,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 708,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "7715:6:6"
													},
													"referencedDeclaration": 380,
													"src": "7715:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7729:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:6"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:6"
									},
									"scope": 789,
									"src": "7686:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "8997:391:6",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9007:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 758,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 760,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:6"
											},
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9029:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:6"
											},
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9057:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 764,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9111:174:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9125:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:6"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9136:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9209:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9223:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9252:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9267:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:6",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:6",
														"valueSize": 1
													},
													{
														"declaration": 762,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:6",
														"valueSize": 1
													},
													{
														"declaration": 759,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:6",
														"valueSize": 1
													},
													{
														"declaration": 751,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 767,
												"nodeType": "InlineAssembly",
												"src": "9086:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 768,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "9301:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 769,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "9313:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 780,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9364:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 774,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 751,
																						"src": "9339:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 773,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 772,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 784,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 757,
												"id": 786,
												"nodeType": "Return",
												"src": "9294:87:6"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8941:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 750,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 749,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8941:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8941:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8955:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:6"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8991:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:6"
									},
									"scope": 789,
									"src": "8908:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 790,
							"src": "698:8692:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							819
						]
					},
					"id": 820,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 791,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 792,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 819,
							"linearizedBaseContracts": [
								819
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 797,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 796,
												"id": 799,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 819,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 806,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 805,
												"id": 808,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 803,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 819,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 814,
												"id": 816,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 819,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 820,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							831
						]
					},
					"id": 832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 821,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 822,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 831,
							"linearizedBaseContracts": [
								831
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 824,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 831,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 832,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"C/coreWallet.sol": {
				"ast": {
					"absolutePath": "C/coreWallet.sol",
					"exportedSymbols": {
						"Context": [
							819
						],
						"CoreWallet": [
							1157
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							789
						]
					},
					"id": 1158,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 834,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1158,
							"sourceUnit": 148,
							"src": "57:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 835,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1158,
							"sourceUnit": 303,
							"src": "111:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 836,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1158,
							"sourceUnit": 381,
							"src": "174:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 837,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1158,
							"sourceUnit": 790,
							"src": "232:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 839,
										"name": "Ownable",
										"nameLocations": [
											"611:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "611:7:9"
									},
									"id": 840,
									"nodeType": "InheritanceSpecifier",
									"src": "611:7:9"
								},
								{
									"baseName": {
										"id": 841,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"620:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "620:15:9"
									},
									"id": 842,
									"nodeType": "InheritanceSpecifier",
									"src": "620:15:9"
								}
							],
							"canonicalName": "CoreWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 838,
								"nodeType": "StructuredDocumentation",
								"src": "299:289:9",
								"text": "@title CoreWallet\n @notice A dynamic, optimized, and secure smart wallet contract that can hold Ether and ERC20 tokens.\n The owner can add or remove additional authorized addresses. Authorized addresses can execute arbitrary calls\n and transfer funds on behalf of the wallet."
							},
							"fullyImplemented": true,
							"id": 1157,
							"linearizedBaseContracts": [
								1157,
								302,
								147,
								819
							],
							"name": "CoreWallet",
							"nameLocation": "597:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 846,
									"libraryName": {
										"id": 843,
										"name": "SafeERC20",
										"nameLocations": [
											"648:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 789,
										"src": "648:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "642:27:9",
									"typeName": {
										"id": 845,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 844,
											"name": "IERC20",
											"nameLocations": [
												"662:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "662:6:9"
										},
										"referencedDeclaration": 380,
										"src": "662:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "b9181611",
									"id": 850,
									"mutability": "mutable",
									"name": "authorized",
									"nameLocation": "784:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1157,
									"src": "752:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 849,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 847,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "760:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "752:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 848,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "771:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "dd10d14f6ac19e913d4edbb11fd30661531e2ccd0d23f571e9b224f001f0dd06",
									"id": 854,
									"name": "AuthorizedAdded",
									"nameLocation": "829:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "861:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "845:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:25:9"
									},
									"src": "823:47:9"
								},
								{
									"anonymous": false,
									"eventSelector": "0fafd0343e6c6f6985727574866da48938c918559eb9521cf9cc0d317ea0f7b4",
									"id": 858,
									"name": "AuthorizedRemoved",
									"nameLocation": "881:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "915:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "899:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:25:9"
									},
									"src": "875:49:9"
								},
								{
									"anonymous": false,
									"eventSelector": "e39b605d485d947e52b62c3b5028a14d5277db44425263c74171a85707154334",
									"id": 868,
									"name": "Executed",
									"nameLocation": "935:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "960:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "944:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "976:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "968:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "989:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "983:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 863,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "983:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"indexed": false,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1001:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "995:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 865,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "995:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "943:65:9"
									},
									"src": "929:80:9"
								},
								{
									"anonymous": false,
									"eventSelector": "06097061aeda806b5e9cb4133d9899f332ff0913956567fc0f7ea15e3d19947c",
									"id": 874,
									"name": "EtherWithdrawn",
									"nameLocation": "1020:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1051:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "1035:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1063:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "1055:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1034:36:9"
									},
									"src": "1014:57:9"
								},
								{
									"anonymous": false,
									"eventSelector": "9c8515990fd8c61431c4ac8db9b81475f90c292a1dda77731e56c22e64fc7643",
									"id": 882,
									"name": "TokenTransferred",
									"nameLocation": "1082:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1115:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1099:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1138:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1122:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1150:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1142:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1142:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:59:9"
									},
									"src": "1076:82:9"
								},
								{
									"anonymous": false,
									"eventSelector": "88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874",
									"id": 888,
									"name": "Received",
									"nameLocation": "1169:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1194:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1178:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1210:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1202:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:40:9"
									},
									"src": "1163:55:9"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "1345:102:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 892,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1363:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1367:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1363:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 894,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "1377:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1377:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1363:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"id": 897,
																	"name": "authorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "1388:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 900,
																"indexExpression": {
																	"expression": {
																		"id": 898,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1399:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1403:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1399:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1388:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1363:47:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1412:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 891,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1355:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1355:74:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "1355:74:9"
											},
											{
												"id": 905,
												"nodeType": "PlaceholderStatement",
												"src": "1439:1:9"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "1224:90:9",
										"text": "@notice Modifier to restrict function calls to only the owner or authorized addresses."
									},
									"id": 907,
									"name": "onlyAuthorized",
									"nameLocation": "1328:14:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1342:2:9"
									},
									"src": "1319:128:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "1555:44:9",
										"statements": []
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "1453:63:9",
										"text": "@notice Constructor sets the deployer as the initial owner."
									},
									"id": 916,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1543:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1547:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1543:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 913,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 910,
												"name": "Ownable",
												"nameLocations": [
													"1535:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1535:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1535:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1532:2:9"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1555:0:9"
									},
									"scope": 1157,
									"src": "1521:78:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "1776:202:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 925,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "1794:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1813:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1805:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 926,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1805:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1794:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1817:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 924,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1786:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "1786:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1853:20:9",
															"subExpression": {
																"baseExpression": {
																	"id": 935,
																	"name": "authorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "1854:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 937,
																"indexExpression": {
																	"id": 936,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "1865:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1854:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920617574686f72697a6564",
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1875:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2",
																"typeString": "literal_string \"Already authorized\""
															},
															"value": "Already authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bca435634d2a0155dc832d6db8e242138f80416456a2df6a5b65f8da7c9812b2",
																"typeString": "literal_string \"Already authorized\""
															}
														],
														"id": 934,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1845:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1845:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "1845:51:9"
											},
											{
												"expression": {
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 942,
															"name": "authorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "1906:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 944,
														"indexExpression": {
															"id": 943,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "1917:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1906:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1928:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1906:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "1906:26:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 949,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "1963:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 948,
														"name": "AuthorizedAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "1947:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1947:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "EmitStatement",
												"src": "1942:29:9"
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "1605:107:9",
										"text": "@notice Allows the owner to add an authorized address.\n @param account The address to authorize."
									},
									"functionSelector": "cf1c316a",
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 922,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 921,
												"name": "onlyOwner",
												"nameLocations": [
													"1766:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1766:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1766:9:9"
										}
									],
									"name": "addAuthorized",
									"nameLocation": "1726:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1748:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1740:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1739:17:9"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1776:0:9"
									},
									"scope": 1157,
									"src": "1717:261:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "2158:149:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 962,
																"name": "authorized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "2176:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 964,
															"indexExpression": {
																"id": 963,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 956,
																"src": "2187:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2176:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646472657373206e6f7420617574686f72697a6564",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2197:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d",
																"typeString": "literal_string \"Address not authorized\""
															},
															"value": "Address not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d",
																"typeString": "literal_string \"Address not authorized\""
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2168:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2168:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "2168:54:9"
											},
											{
												"expression": {
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 968,
															"name": "authorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "2232:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 970,
														"indexExpression": {
															"id": 969,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "2243:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2232:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2254:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2232:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "2232:27:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 975,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "2292:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 974,
														"name": "AuthorizedRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "2274:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "EmitStatement",
												"src": "2269:31:9"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "1984:107:9",
										"text": "@notice Allows the owner to remove an authorized address.\n @param account The address to remove."
									},
									"functionSelector": "485d7d94",
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 959,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 958,
												"name": "onlyOwner",
												"nameLocations": [
													"2148:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2148:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2148:9:9"
										}
									],
									"name": "removeAuthorized",
									"nameLocation": "2105:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2130:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "2122:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2121:17:9"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:0:9"
									},
									"scope": 1157,
									"src": "2096:211:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "2762:250:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 996,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "2780:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2798:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2790:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 997,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2790:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2790:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2780:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746172676574",
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2802:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2",
																"typeString": "literal_string \"Invalid target\""
															},
															"value": "Invalid target"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_164f3d59e2a28679dc250ce99ebb52c1c471e60b45e8d5fed5845fd337ce17c2",
																"typeString": "literal_string \"Invalid target\""
															}
														],
														"id": 995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2772:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2772:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "2772:47:9"
											},
											{
												"assignments": [
													1006,
													1008
												],
												"declarations": [
													{
														"constant": false,
														"id": 1006,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2835:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "2830:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1005,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2830:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1008,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "2857:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "2844:16:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1007,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2844:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1015,
												"initialValue": {
													"arguments": [
														{
															"id": 1013,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "2890:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"expression": {
																"id": 1009,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "2864:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2871:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2864:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1011,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "2883:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2864:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2864:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2829:66:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1017,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "2913:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c206661696c6564",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2922:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b",
																"typeString": "literal_string \"Call failed\""
															},
															"value": "Call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_066ad49a0ed9e5d6a9f3c20fca13a038f0a5d629f0aaf09d634ae2a7c232ac2b",
																"typeString": "literal_string \"Call failed\""
															}
														],
														"id": 1016,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2905:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2905:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "2905:31:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1022,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "2960:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "2968:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1024,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "2975:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 1025,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "2981:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1021,
														"name": "Executed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "2951:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2951:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "EmitStatement",
												"src": "2946:39:9"
											},
											{
												"expression": {
													"id": 1028,
													"name": "res",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1008,
													"src": "3002:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 994,
												"id": 1029,
												"nodeType": "Return",
												"src": "2995:10:9"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "2313:268:9",
										"text": "@notice Executes an arbitrary call from this wallet.\n @param target The target address to call.\n @param value The amount of Ether (in wei) to send.\n @param data The calldata for the call.\n @return result The returned data from the call."
									},
									"functionSelector": "9e5d4c49",
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 989,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 988,
												"name": "onlyAuthorized",
												"nameLocations": [
													"2684:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 907,
												"src": "2684:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2684:14:9"
										},
										{
											"id": 991,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 990,
												"name": "nonReentrant",
												"nameLocations": [
													"2707:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "2707:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2707:12:9"
										}
									],
									"name": "executeCall",
									"nameLocation": "2595:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2615:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2607:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2631:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2623:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2623:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2653:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2638:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 985,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2638:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:52:9"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2750:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2737:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 992,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:21:9"
									},
									"scope": 1157,
									"src": "2586:426:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "3221:255:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1044,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3247:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CoreWallet_$1157",
																				"typeString": "contract CoreWallet"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CoreWallet_$1157",
																				"typeString": "contract CoreWallet"
																			}
																		],
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3239:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1042,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3239:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3239:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3253:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3239:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1047,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "3264:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3239:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3272:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1041,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3231:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3231:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "3231:64:9"
											},
											{
												"assignments": [
													1053,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1053,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3311:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1076,
														"src": "3306:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1052,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3306:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1064,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3364:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1056,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3332:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3336:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3332:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3324:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1054,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3324:8:9",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3324:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3344:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3324:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1060,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "3356:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3324:39:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3324:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3305:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1066,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "3385:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4574686572207769746864726177616c206661696c6564",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3394:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc",
																"typeString": "literal_string \"Ether withdrawal failed\""
															},
															"value": "Ether withdrawal failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4911b772f62b632fde8f43cd39d290abf72e6b0a1e3144715315e094a41df5dc",
																"typeString": "literal_string \"Ether withdrawal failed\""
															}
														],
														"id": 1065,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3377:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3377:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "3377:43:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1071,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3450:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3454:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3450:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "3462:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1070,
														"name": "EtherWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "3435:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3435:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "EmitStatement",
												"src": "3430:39:9"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "3018:122:9",
										"text": "@notice Withdraws Ether from the wallet to the caller.\n @param amount The amount of Ether (in wei) to withdraw."
									},
									"functionSelector": "3bed33ce",
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1037,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1036,
												"name": "onlyAuthorized",
												"nameLocations": [
													"3193:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 907,
												"src": "3193:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3193:14:9"
										},
										{
											"id": 1039,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1038,
												"name": "nonReentrant",
												"nameLocations": [
													"3208:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3208:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3208:12:9"
										}
									],
									"name": "withdrawEther",
									"nameLocation": "3154:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3176:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "3168:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3168:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3167:16:9"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3221:0:9"
									},
									"scope": 1157,
									"src": "3145:331:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "3810:242:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1095,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "3836:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3828:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1093,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3828:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3828:14:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3854:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3846:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1097,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3846:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3846:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3828:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3858:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3820:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3820:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "3820:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1106,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "3900:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3914:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3906:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1107,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3906:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3906:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3900:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e742061646472657373",
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3918:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															},
															"value": "Invalid recipient address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															}
														],
														"id": 1105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3892:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3892:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "3892:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1118,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "3975:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "3979:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1115,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "3956:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3962:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "3956:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3956:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "3956:30:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1125,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "4026:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4018:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1123,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4018:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4018:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1127,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "4034:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1128,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "4038:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1122,
														"name": "TokenTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4001:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4001:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "EmitStatement",
												"src": "3996:49:9"
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "3482:221:9",
										"text": "@notice Transfers ERC20 tokens from the wallet to a specified address.\n @param token The ERC20 token to transfer.\n @param to The recipient address.\n @param amount The amount of tokens to transfer."
									},
									"functionSelector": "f5537ede",
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1088,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1087,
												"name": "onlyAuthorized",
												"nameLocations": [
													"3782:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 907,
												"src": "3782:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3782:14:9"
										},
										{
											"id": 1090,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1089,
												"name": "nonReentrant",
												"nameLocations": [
													"3797:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3797:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3797:12:9"
										}
									],
									"name": "transferToken",
									"nameLocation": "3717:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3738:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "3731:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1080,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1079,
														"name": "IERC20",
														"nameLocations": [
															"3731:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3731:6:9"
													},
													"referencedDeclaration": 380,
													"src": "3731:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3753:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "3745:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3765:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "3757:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3730:42:9"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3810:0:9"
									},
									"scope": 1157,
									"src": "3708:344:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "4137:53:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1137,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4161:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4165:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4161:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1139,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4173:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4177:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4173:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1136,
														"name": "Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "4152:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4152:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1142,
												"nodeType": "EmitStatement",
												"src": "4147:36:9"
											}
										]
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "4058:47:9",
										"text": "@notice Fallback function to receive Ether."
									},
									"id": 1144,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4117:2:9"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:9"
									},
									"scope": 1157,
									"src": "4110:80:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "4282:53:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1149,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4306:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4310:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4306:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1151,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4318:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4322:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4318:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1148,
														"name": "Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "4297:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "EmitStatement",
												"src": "4292:36:9"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "4196:53:9",
										"text": "@notice Fallback function for non-empty calldata."
									},
									"id": 1156,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4262:2:9"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4282:0:9"
									},
									"scope": 1157,
									"src": "4254:81:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1158,
							"src": "588:3749:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								854,
								858,
								868,
								874,
								882,
								888
							]
						}
					],
					"src": "32:4306:9"
				},
				"id": 9
			}
		}
	}
}