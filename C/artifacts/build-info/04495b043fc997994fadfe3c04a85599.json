{
	"id": "04495b043fc997994fadfe3c04a85599",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"C/concentrated liquidity .sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; // Import IERC20 interface\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @notice ConcentratedLiquidityPool allows liquidity providers to deposit token0 and token1\n/// and concentrate their liquidity in a specified tick range (price range). This example\n/// calculates liquidity in a simplified manner (using the minimum of the provided amounts).\ncontract ConcentratedLiquidityPool is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    IERC20 public immutable token0;\n    IERC20 public immutable token1;\n\n    // For simplicity, we represent price as a \"tick\" (an integer)\n    uint256 public currentTick;\n\n    // Each liquidity position is represented by a unique ID.\n    struct Position {\n        uint256 id;\n        address owner;\n        int24 lowerTick;\n        int24 upperTick;\n        uint256 amount0;\n        uint256 amount1;\n        uint256 liquidity;\n    }\n\n    // Mapping from position ID to Position details.\n    mapping(uint256 => Position) public positions;\n    uint256 public nextPositionId;\n\n    event LiquidityAdded(\n        uint256 indexed positionId,\n        address indexed owner,\n        int24 lowerTick,\n        int24 upperTick,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 liquidity\n    );\n    event LiquidityRemoved(\n        uint256 indexed positionId,\n        address indexed owner,\n        uint256 amount0,\n        uint256 amount1\n    );\n    event CurrentTickUpdated(uint256 newTick);\n\n    /// @notice Constructor sets the addresses for token0 and token1 and an initial tick.\n    /// @param _token0 Address of the first token.\n    /// @param _token1 Address of the second token.\n    /// @param _initialTick The initial price tick.\n    constructor(address _token0, address _token1, uint256 _initialTick)\n        Ownable(msg.sender) // Pass msg.sender to Ownable base constructor\n    {\n        require(_token0 != address(0) && _token1 != address(0), \"Invalid token address\");\n        token0 = IERC20(_token0);\n        token1 = IERC20(_token1);\n        currentTick = _initialTick;\n        nextPositionId = 1;\n    }\n\n    /// @notice Internal helper to compute liquidity in a simplified manner.\n    /// For example, we use the minimum of the two token amounts.\n    function _calculateLiquidity(uint256 amount0, uint256 amount1) internal pure returns (uint256) {\n        return amount0 < amount1 ? amount0 : amount1;\n    }\n\n    /// @notice Allows a user to add liquidity within a specified tick range.\n    /// The user must have approved this contract to transfer the tokens.\n    /// @param lowerTick The lower bound of the tick range.\n    /// @param upperTick The upper bound of the tick range.\n    /// @param amount0 The amount of token0 to deposit.\n    /// @param amount1 The amount of token1 to deposit.\n    /// @return positionId The unique ID of the created liquidity position.\n    function addLiquidity(\n        int24 lowerTick,\n        int24 upperTick,\n        uint256 amount0,\n        uint256 amount1\n    ) external nonReentrant returns (uint256 positionId) {\n        require(lowerTick < upperTick, \"Invalid tick range\");\n        require(amount0 > 0 && amount1 > 0, \"Amounts must be > 0\");\n\n        // Transfer tokens from the provider to this contract.\n        token0.safeTransferFrom(msg.sender, address(this), amount0);\n        token1.safeTransferFrom(msg.sender, address(this), amount1);\n\n        uint256 liquidity = _calculateLiquidity(amount0, amount1);\n\n        positionId = nextPositionId++;\n        positions[positionId] = Position({\n            id: positionId,\n            owner: msg.sender,\n            lowerTick: lowerTick,\n            upperTick: upperTick,\n            amount0: amount0,\n            amount1: amount1,\n            liquidity: liquidity\n        });\n\n        emit LiquidityAdded(positionId, msg.sender, lowerTick, upperTick, amount0, amount1, liquidity);\n    }\n\n    /// @notice Allows the owner of a liquidity position to remove their liquidity.\n    /// The position is deleted and the deposited tokens are returned.\n    /// @param positionId The ID of the position to remove.\n    function removeLiquidity(uint256 positionId) external nonReentrant {\n        Position memory pos = positions[positionId];\n        require(pos.owner == msg.sender, \"Not position owner\");\n        require(pos.liquidity > 0, \"Position already removed\");\n\n        // Remove the position.\n        delete positions[positionId];\n\n        // Transfer tokens back to the liquidity provider.\n        token0.safeTransfer(msg.sender, pos.amount0);\n        token1.safeTransfer(msg.sender, pos.amount1);\n\n        emit LiquidityRemoved(positionId, msg.sender, pos.amount0, pos.amount1);\n    }\n\n    /// @notice Updates the current tick (price). Only the owner can update the tick.\n    /// @param newTick The new tick value.\n    function updateCurrentTick(uint256 newTick) external onlyOwner {\n        currentTick = newTick;\n        emit CurrentTickUpdated(newTick);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID OR SUB 0xD RJUMP 0x556F PUSH8 0xAEDC1EA4BF304AC0 CREATE 0xDB 0xC9 MOD 0xA7 0x27 PUSH15 0x479159E0692A32ED7F64736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "698:8692:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID OR SUB 0xD RJUMP 0x556F PUSH8 0xAEDC1EA4BF304AC0 CREATE 0xDB 0xC9 MOD 0xA7 0x27 PUSH15 0x479159E0692A32ED7F64736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "698:8692:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"C/concentrated liquidity .sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"C/concentrated liquidity .sol": {
				"ConcentratedLiquidityPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_initialTick",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTick",
									"type": "uint256"
								}
							],
							"name": "CurrentTickUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "positionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "lowerTick",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "upperTick",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "positionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "LiquidityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "lowerTick",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "upperTick",
									"type": "int24"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "positionId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentTick",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextPositionId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "lowerTick",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "upperTick",
									"type": "int24"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "positionId",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newTick",
									"type": "uint256"
								}
							],
							"name": "updateCurrentTick",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addLiquidity(int24,int24,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 to deposit.",
									"amount1": "The amount of token1 to deposit.",
									"lowerTick": "The lower bound of the tick range.",
									"upperTick": "The upper bound of the tick range."
								},
								"returns": {
									"positionId": "The unique ID of the created liquidity position."
								}
							},
							"constructor": {
								"params": {
									"_initialTick": "The initial price tick.",
									"_token0": "Address of the first token.",
									"_token1": "Address of the second token."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeLiquidity(uint256)": {
								"params": {
									"positionId": "The ID of the position to remove."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateCurrentTick(uint256)": {
								"params": {
									"newTick": "The new tick value."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"C/concentrated liquidity .sol\":601:5177  contract ConcentratedLiquidityPool is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xc0)\n    /* \"C/concentrated liquidity .sol\":1947:2323  constructor(address _token0, address _token1, uint256 _initialTick)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"C/concentrated liquidity .sol\":2031:2041  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"C/concentrated liquidity .sol\":2131:2132  0 */\n  0x00\n    /* \"C/concentrated liquidity .sol\":2112:2133  _token0 != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"C/concentrated liquidity .sol\":2112:2119  _token0 */\n  dup4\n    /* \"C/concentrated liquidity .sol\":2112:2133  _token0 != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"C/concentrated liquidity .sol\":2112:2158  _token0 != address(0) && _token1 != address(0) */\n  dup1\n  iszero\n  tag_15\n  jumpi\n  pop\n    /* \"C/concentrated liquidity .sol\":2156:2157  0 */\n  0x00\n    /* \"C/concentrated liquidity .sol\":2137:2158  _token1 != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"C/concentrated liquidity .sol\":2137:2144  _token1 */\n  dup3\n    /* \"C/concentrated liquidity .sol\":2137:2158  _token1 != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"C/concentrated liquidity .sol\":2112:2158  _token0 != address(0) && _token1 != address(0) */\ntag_15:\n    /* \"C/concentrated liquidity .sol\":2104:2184  require(_token0 != address(0) && _token1 != address(0), \"Invalid token address\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n    /* \"C/concentrated liquidity .sol\":2210:2217  _token0 */\n  dup3\n    /* \"C/concentrated liquidity .sol\":2194:2218  token0 = IERC20(_token0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"C/concentrated liquidity .sol\":2244:2251  _token1 */\n  dup2\n    /* \"C/concentrated liquidity .sol\":2228:2252  token1 = IERC20(_token1) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"C/concentrated liquidity .sol\":2276:2288  _initialTick */\n  dup1\n    /* \"C/concentrated liquidity .sol\":2262:2273  currentTick */\n  0x02\n    /* \"C/concentrated liquidity .sol\":2262:2288  currentTick = _initialTick */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"C/concentrated liquidity .sol\":2315:2316  1 */\n  0x01\n    /* \"C/concentrated liquidity .sol\":2298:2312  nextPositionId */\n  0x04\n    /* \"C/concentrated liquidity .sol\":2298:2316  nextPositionId = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"C/concentrated liquidity .sol\":1947:2323  constructor(address _token0, address _token1, uint256 _initialTick)... */\n  pop\n  pop\n  pop\n    /* \"C/concentrated liquidity .sol\":601:5177  contract ConcentratedLiquidityPool is Ownable, ReentrancyGuard {... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_22:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_24:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_25:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_41\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_24\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_26:\n    /* \"#utility.yul\":641:665   */\n  tag_43\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_25\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_44:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_27:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_46\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_26\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_28:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_29:\n    /* \"#utility.yul\":1001:1025   */\n  tag_49\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_28\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_50:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_30:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_52\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_29\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  0x00\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_55\n  tag_22\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1326:1445   */\ntag_54:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_56\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_27\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_57\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_27\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_58\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_30\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1992   */\ntag_31:\n    /* \"#utility.yul\":1961:1985   */\n  tag_60\n    /* \"#utility.yul\":1979:1984   */\n  dup2\n    /* \"#utility.yul\":1961:1985   */\n  tag_25\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1956:1959   */\n  dup3\n    /* \"#utility.yul\":1949:1986   */\n  mstore\n    /* \"#utility.yul\":1874:1992   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1998:2220   */\ntag_10:\n    /* \"#utility.yul\":2091:2095   */\n  0x00\n    /* \"#utility.yul\":2129:2131   */\n  0x20\n    /* \"#utility.yul\":2118:2127   */\n  dup3\n    /* \"#utility.yul\":2114:2132   */\n  add\n    /* \"#utility.yul\":2106:2132   */\n  swap1\n  pop\n    /* \"#utility.yul\":2142:2213   */\n  tag_62\n    /* \"#utility.yul\":2210:2211   */\n  0x00\n    /* \"#utility.yul\":2199:2208   */\n  dup4\n    /* \"#utility.yul\":2195:2212   */\n  add\n    /* \"#utility.yul\":2186:2192   */\n  dup5\n    /* \"#utility.yul\":2142:2213   */\n  tag_31\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1998:2220   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2226:2395   */\ntag_32:\n    /* \"#utility.yul\":2310:2321   */\n  0x00\n    /* \"#utility.yul\":2344:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2342   */\n  dup3\n    /* \"#utility.yul\":2332:2351   */\n  mstore\n    /* \"#utility.yul\":2384:2388   */\n  0x20\n    /* \"#utility.yul\":2379:2382   */\n  dup3\n    /* \"#utility.yul\":2375:2389   */\n  add\n    /* \"#utility.yul\":2360:2389   */\n  swap1\n  pop\n    /* \"#utility.yul\":2226:2395   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2401:2572   */\ntag_33:\n    /* \"#utility.yul\":2541:2564   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":2537:2538   */\n  0x00\n    /* \"#utility.yul\":2529:2535   */\n  dup3\n    /* \"#utility.yul\":2525:2539   */\n  add\n    /* \"#utility.yul\":2518:2565   */\n  mstore\n    /* \"#utility.yul\":2401:2572   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2578:2944   */\ntag_34:\n    /* \"#utility.yul\":2720:2723   */\n  0x00\n    /* \"#utility.yul\":2741:2808   */\n  tag_66\n    /* \"#utility.yul\":2805:2807   */\n  0x15\n    /* \"#utility.yul\":2800:2803   */\n  dup4\n    /* \"#utility.yul\":2741:2808   */\n  tag_32\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2734:2808   */\n  swap2\n  pop\n    /* \"#utility.yul\":2817:2910   */\n  tag_67\n    /* \"#utility.yul\":2906:2909   */\n  dup3\n    /* \"#utility.yul\":2817:2910   */\n  tag_33\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2935:2937   */\n  0x20\n    /* \"#utility.yul\":2930:2933   */\n  dup3\n    /* \"#utility.yul\":2926:2938   */\n  add\n    /* \"#utility.yul\":2919:2938   */\n  swap1\n  pop\n    /* \"#utility.yul\":2578:2944   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2950:3369   */\ntag_18:\n    /* \"#utility.yul\":3116:3120   */\n  0x00\n    /* \"#utility.yul\":3154:3156   */\n  0x20\n    /* \"#utility.yul\":3143:3152   */\n  dup3\n    /* \"#utility.yul\":3139:3157   */\n  add\n    /* \"#utility.yul\":3131:3157   */\n  swap1\n  pop\n    /* \"#utility.yul\":3203:3212   */\n  dup2\n    /* \"#utility.yul\":3197:3201   */\n  dup2\n    /* \"#utility.yul\":3193:3213   */\n  sub\n    /* \"#utility.yul\":3189:3190   */\n  0x00\n    /* \"#utility.yul\":3178:3187   */\n  dup4\n    /* \"#utility.yul\":3174:3191   */\n  add\n    /* \"#utility.yul\":3167:3214   */\n  mstore\n    /* \"#utility.yul\":3231:3362   */\n  tag_69\n    /* \"#utility.yul\":3357:3361   */\n  dup2\n    /* \"#utility.yul\":3231:3362   */\n  tag_34\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":3223:3362   */\n  swap1\n  pop\n    /* \"#utility.yul\":2950:3369   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"C/concentrated liquidity .sol\":601:5177  contract ConcentratedLiquidityPool is Ownable, ReentrancyGuard {... */\ntag_19:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xeb29b49011c9cf62c1f2455e9e4472fdc1b37c8f4e32969c812d39bb921154f4\")\n  0x00\n  assignImmutable(\"0x5002dac29dd1f5eca27c266c7f22886fef1ca01133bd005217e0a31b1b246599\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"C/concentrated liquidity .sol\":601:5177  contract ConcentratedLiquidityPool is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x99fbab88\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfd87f9aa\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x065e5360\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x291df278\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x899346c7\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"C/concentrated liquidity .sol\":843:869  uint256 public currentTick */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/concentrated liquidity .sol\":703:733  IERC20 public immutable token0 */\n    tag_4:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/concentrated liquidity .sol\":5032:5175  function updateCurrentTick(uint256 newTick) external onlyOwner {... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      stop\n        /* \"C/concentrated liquidity .sol\":1241:1270  uint256 public nextPositionId */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/concentrated liquidity .sol\":1190:1235  mapping(uint256 => Position) public positions */\n    tag_9:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_39\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/concentrated liquidity .sol\":4321:4897  function removeLiquidity(uint256 positionId) external nonReentrant {... */\n    tag_10:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"C/concentrated liquidity .sol\":739:769  IERC20 public immutable token1 */\n    tag_11:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"C/concentrated liquidity .sol\":3094:4100  function addLiquidity(... */\n    tag_13:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/concentrated liquidity .sol\":843:869  uint256 public currentTick */\n    tag_16:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"C/concentrated liquidity .sol\":703:733  IERC20 public immutable token0 */\n    tag_20:\n      immutable(\"0x5002dac29dd1f5eca27c266c7f22886fef1ca01133bd005217e0a31b1b246599\")\n      dup2\n      jump\t// out\n        /* \"C/concentrated liquidity .sol\":5032:5175  function updateCurrentTick(uint256 newTick) external onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_57:\n        /* \"C/concentrated liquidity .sol\":5119:5126  newTick */\n      dup1\n        /* \"C/concentrated liquidity .sol\":5105:5116  currentTick */\n      0x02\n        /* \"C/concentrated liquidity .sol\":5105:5126  currentTick = newTick */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/concentrated liquidity .sol\":5141:5168  CurrentTickUpdated(newTick) */\n      0xca2410361df736e1af5d81999e916cec0b435bf16bc69b5a209be194f88bec4d\n        /* \"C/concentrated liquidity .sol\":5160:5167  newTick */\n      dup2\n        /* \"C/concentrated liquidity .sol\":5141:5168  CurrentTickUpdated(newTick) */\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"C/concentrated liquidity .sol\":5032:5175  function updateCurrentTick(uint256 newTick) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"C/concentrated liquidity .sol\":1241:1270  uint256 public nextPositionId */\n    tag_30:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"C/concentrated liquidity .sol\":1190:1235  mapping(uint256 => Position) public positions */\n    tag_38:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x02\n      signextend\n      swap1\n      dup1\n      0x01\n      add\n      0x17\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x02\n      signextend\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"C/concentrated liquidity .sol\":4321:4897  function removeLiquidity(uint256 positionId) external nonReentrant {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_68\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_69\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_68:\n        /* \"C/concentrated liquidity .sol\":4398:4417  Position memory pos */\n      0x00\n        /* \"C/concentrated liquidity .sol\":4420:4429  positions */\n      0x03\n        /* \"C/concentrated liquidity .sol\":4420:4441  positions[positionId] */\n      0x00\n        /* \"C/concentrated liquidity .sol\":4430:4440  positionId */\n      dup4\n        /* \"C/concentrated liquidity .sol\":4420:4441  positions[positionId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/concentrated liquidity .sol\":4398:4441  Position memory pos = positions[positionId] */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x02\n      signextend\n      0x02\n      signextend\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x17\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x02\n      signextend\n      0x02\n      signextend\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"C/concentrated liquidity .sol\":4472:4482  msg.sender */\n      caller\n        /* \"C/concentrated liquidity .sol\":4459:4482  pos.owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/concentrated liquidity .sol\":4459:4462  pos */\n      dup2\n        /* \"C/concentrated liquidity .sol\":4459:4468  pos.owner */\n      0x20\n      add\n      mload\n        /* \"C/concentrated liquidity .sol\":4459:4482  pos.owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"C/concentrated liquidity .sol\":4451:4505  require(pos.owner == msg.sender, \"Not position owner\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"C/concentrated liquidity .sol\":4539:4540  0 */\n      0x00\n        /* \"C/concentrated liquidity .sol\":4523:4526  pos */\n      dup2\n        /* \"C/concentrated liquidity .sol\":4523:4536  pos.liquidity */\n      0xc0\n      add\n      mload\n        /* \"C/concentrated liquidity .sol\":4523:4540  pos.liquidity > 0 */\n      gt\n        /* \"C/concentrated liquidity .sol\":4515:4569  require(pos.liquidity > 0, \"Position already removed\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"C/concentrated liquidity .sol\":4619:4628  positions */\n      0x03\n        /* \"C/concentrated liquidity .sol\":4619:4640  positions[positionId] */\n      0x00\n        /* \"C/concentrated liquidity .sol\":4629:4639  positionId */\n      dup4\n        /* \"C/concentrated liquidity .sol\":4619:4640  positions[positionId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/concentrated liquidity .sol\":4612:4640  delete positions[positionId] */\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      swap1\n      0xffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      exp(0x0100, 0x17)\n      dup2\n      sload\n      swap1\n      0xffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"C/concentrated liquidity .sol\":4710:4754  token0.safeTransfer(msg.sender, pos.amount0) */\n      tag_77\n        /* \"C/concentrated liquidity .sol\":4730:4740  msg.sender */\n      caller\n        /* \"C/concentrated liquidity .sol\":4742:4745  pos */\n      dup3\n        /* \"C/concentrated liquidity .sol\":4742:4753  pos.amount0 */\n      0x80\n      add\n      mload\n        /* \"C/concentrated liquidity .sol\":4710:4716  token0 */\n      immutable(\"0x5002dac29dd1f5eca27c266c7f22886fef1ca01133bd005217e0a31b1b246599\")\n        /* \"C/concentrated liquidity .sol\":4710:4729  token0.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_78\n      swap1\n        /* \"C/concentrated liquidity .sol\":4710:4754  token0.safeTransfer(msg.sender, pos.amount0) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_77:\n        /* \"C/concentrated liquidity .sol\":4764:4808  token1.safeTransfer(msg.sender, pos.amount1) */\n      tag_79\n        /* \"C/concentrated liquidity .sol\":4784:4794  msg.sender */\n      caller\n        /* \"C/concentrated liquidity .sol\":4796:4799  pos */\n      dup3\n        /* \"C/concentrated liquidity .sol\":4796:4807  pos.amount1 */\n      0xa0\n      add\n      mload\n        /* \"C/concentrated liquidity .sol\":4764:4770  token1 */\n      immutable(\"0xeb29b49011c9cf62c1f2455e9e4472fdc1b37c8f4e32969c812d39bb921154f4\")\n        /* \"C/concentrated liquidity .sol\":4764:4783  token1.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_78\n      swap1\n        /* \"C/concentrated liquidity .sol\":4764:4808  token1.safeTransfer(msg.sender, pos.amount1) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_79:\n        /* \"C/concentrated liquidity .sol\":4853:4863  msg.sender */\n      caller\n        /* \"C/concentrated liquidity .sol\":4824:4890  LiquidityRemoved(positionId, msg.sender, pos.amount0, pos.amount1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/concentrated liquidity .sol\":4841:4851  positionId */\n      dup3\n        /* \"C/concentrated liquidity .sol\":4824:4890  LiquidityRemoved(positionId, msg.sender, pos.amount0, pos.amount1) */\n      0x196a4bf617b45641f176c4e6d288ccf7498f1699f68b1cc1e4daadf92779703b\n        /* \"C/concentrated liquidity .sol\":4865:4868  pos */\n      dup4\n        /* \"C/concentrated liquidity .sol\":4865:4876  pos.amount0 */\n      0x80\n      add\n      mload\n        /* \"C/concentrated liquidity .sol\":4878:4881  pos */\n      dup5\n        /* \"C/concentrated liquidity .sol\":4878:4889  pos.amount1 */\n      0xa0\n      add\n      mload\n        /* \"C/concentrated liquidity .sol\":4824:4890  LiquidityRemoved(positionId, msg.sender, pos.amount0, pos.amount1) */\n      mload(0x40)\n      tag_80\n      swap3\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"C/concentrated liquidity .sol\":4388:4897  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_82\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_83\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_82:\n        /* \"C/concentrated liquidity .sol\":4321:4897  function removeLiquidity(uint256 positionId) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"C/concentrated liquidity .sol\":739:769  IERC20 public immutable token1 */\n    tag_45:\n      immutable(\"0xeb29b49011c9cf62c1f2455e9e4472fdc1b37c8f4e32969c812d39bb921154f4\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_87\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"C/concentrated liquidity .sol\":3094:4100  function addLiquidity(... */\n    tag_54:\n        /* \"C/concentrated liquidity .sol\":3253:3271  uint256 positionId */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_91\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_69\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_91:\n        /* \"C/concentrated liquidity .sol\":3303:3312  upperTick */\n      dup4\n        /* \"C/concentrated liquidity .sol\":3291:3312  lowerTick < upperTick */\n      0x02\n      signextend\n        /* \"C/concentrated liquidity .sol\":3291:3300  lowerTick */\n      dup6\n        /* \"C/concentrated liquidity .sol\":3291:3312  lowerTick < upperTick */\n      0x02\n      signextend\n      slt\n        /* \"C/concentrated liquidity .sol\":3283:3335  require(lowerTick < upperTick, \"Invalid tick range\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"C/concentrated liquidity .sol\":3363:3364  0 */\n      0x00\n        /* \"C/concentrated liquidity .sol\":3353:3360  amount0 */\n      dup4\n        /* \"C/concentrated liquidity .sol\":3353:3364  amount0 > 0 */\n      gt\n        /* \"C/concentrated liquidity .sol\":3353:3379  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_96\n      jumpi\n      pop\n        /* \"C/concentrated liquidity .sol\":3378:3379  0 */\n      0x00\n        /* \"C/concentrated liquidity .sol\":3368:3375  amount1 */\n      dup3\n        /* \"C/concentrated liquidity .sol\":3368:3379  amount1 > 0 */\n      gt\n        /* \"C/concentrated liquidity .sol\":3353:3379  amount0 > 0 && amount1 > 0 */\n    tag_96:\n        /* \"C/concentrated liquidity .sol\":3345:3403  require(amount0 > 0 && amount1 > 0, \"Amounts must be > 0\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"C/concentrated liquidity .sol\":3477:3536  token0.safeTransferFrom(msg.sender, address(this), amount0) */\n      tag_100\n        /* \"C/concentrated liquidity .sol\":3501:3511  msg.sender */\n      caller\n        /* \"C/concentrated liquidity .sol\":3521:3525  this */\n      address\n        /* \"C/concentrated liquidity .sol\":3528:3535  amount0 */\n      dup6\n        /* \"C/concentrated liquidity .sol\":3477:3483  token0 */\n      immutable(\"0x5002dac29dd1f5eca27c266c7f22886fef1ca01133bd005217e0a31b1b246599\")\n        /* \"C/concentrated liquidity .sol\":3477:3500  token0.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_101\n      swap1\n        /* \"C/concentrated liquidity .sol\":3477:3536  token0.safeTransferFrom(msg.sender, address(this), amount0) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"C/concentrated liquidity .sol\":3546:3605  token1.safeTransferFrom(msg.sender, address(this), amount1) */\n      tag_102\n        /* \"C/concentrated liquidity .sol\":3570:3580  msg.sender */\n      caller\n        /* \"C/concentrated liquidity .sol\":3590:3594  this */\n      address\n        /* \"C/concentrated liquidity .sol\":3597:3604  amount1 */\n      dup5\n        /* \"C/concentrated liquidity .sol\":3546:3552  token1 */\n      immutable(\"0xeb29b49011c9cf62c1f2455e9e4472fdc1b37c8f4e32969c812d39bb921154f4\")\n        /* \"C/concentrated liquidity .sol\":3546:3569  token1.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_101\n      swap1\n        /* \"C/concentrated liquidity .sol\":3546:3605  token1.safeTransferFrom(msg.sender, address(this), amount1) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"C/concentrated liquidity .sol\":3616:3633  uint256 liquidity */\n      0x00\n        /* \"C/concentrated liquidity .sol\":3636:3673  _calculateLiquidity(amount0, amount1) */\n      tag_103\n        /* \"C/concentrated liquidity .sol\":3656:3663  amount0 */\n      dup5\n        /* \"C/concentrated liquidity .sol\":3665:3672  amount1 */\n      dup5\n        /* \"C/concentrated liquidity .sol\":3636:3655  _calculateLiquidity */\n      tag_104\n        /* \"C/concentrated liquidity .sol\":3636:3673  _calculateLiquidity(amount0, amount1) */\n      jump\t// in\n    tag_103:\n        /* \"C/concentrated liquidity .sol\":3616:3673  uint256 liquidity = _calculateLiquidity(amount0, amount1) */\n      swap1\n      pop\n        /* \"C/concentrated liquidity .sol\":3697:3711  nextPositionId */\n      0x04\n      0x00\n        /* \"C/concentrated liquidity .sol\":3697:3713  nextPositionId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"C/concentrated liquidity .sol\":3684:3713  positionId = nextPositionId++ */\n      swap2\n      pop\n        /* \"C/concentrated liquidity .sol\":3747:3988  Position({... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"C/concentrated liquidity .sol\":3774:3784  positionId */\n      dup4\n        /* \"C/concentrated liquidity .sol\":3747:3988  Position({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"C/concentrated liquidity .sol\":3805:3815  msg.sender */\n      caller\n        /* \"C/concentrated liquidity .sol\":3747:3988  Position({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"C/concentrated liquidity .sol\":3840:3849  lowerTick */\n      dup8\n        /* \"C/concentrated liquidity .sol\":3747:3988  Position({... */\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n        /* \"C/concentrated liquidity .sol\":3874:3883  upperTick */\n      dup7\n        /* \"C/concentrated liquidity .sol\":3747:3988  Position({... */\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n        /* \"C/concentrated liquidity .sol\":3906:3913  amount0 */\n      dup6\n        /* \"C/concentrated liquidity .sol\":3747:3988  Position({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"C/concentrated liquidity .sol\":3936:3943  amount1 */\n      dup5\n        /* \"C/concentrated liquidity .sol\":3747:3988  Position({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"C/concentrated liquidity .sol\":3968:3977  liquidity */\n      dup3\n        /* \"C/concentrated liquidity .sol\":3747:3988  Position({... */\n      dup2\n      mstore\n      pop\n        /* \"C/concentrated liquidity .sol\":3723:3732  positions */\n      0x03\n        /* \"C/concentrated liquidity .sol\":3723:3744  positions[positionId] */\n      0x00\n        /* \"C/concentrated liquidity .sol\":3733:3743  positionId */\n      dup5\n        /* \"C/concentrated liquidity .sol\":3723:3744  positions[positionId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/concentrated liquidity .sol\":3723:3988  positions[positionId] = Position({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      signextend\n      0xffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x17)\n      dup2\n      sload\n      dup2\n      0xffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      signextend\n      0xffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"C/concentrated liquidity .sol\":4031:4041  msg.sender */\n      caller\n        /* \"C/concentrated liquidity .sol\":4004:4093  LiquidityAdded(positionId, msg.sender, lowerTick, upperTick, amount0, amount1, liquidity) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/concentrated liquidity .sol\":4019:4029  positionId */\n      dup3\n        /* \"C/concentrated liquidity .sol\":4004:4093  LiquidityAdded(positionId, msg.sender, lowerTick, upperTick, amount0, amount1, liquidity) */\n      0x19c7fd3f52ff46f3dab96ff8ac8be59679992761324c4e0907c78cb7a4b8865c\n        /* \"C/concentrated liquidity .sol\":4043:4052  lowerTick */\n      dup9\n        /* \"C/concentrated liquidity .sol\":4054:4063  upperTick */\n      dup9\n        /* \"C/concentrated liquidity .sol\":4065:4072  amount0 */\n      dup9\n        /* \"C/concentrated liquidity .sol\":4074:4081  amount1 */\n      dup9\n        /* \"C/concentrated liquidity .sol\":4083:4092  liquidity */\n      dup8\n        /* \"C/concentrated liquidity .sol\":4004:4093  LiquidityAdded(positionId, msg.sender, lowerTick, upperTick, amount0, amount1, liquidity) */\n      mload(0x40)\n      tag_107\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"C/concentrated liquidity .sol\":3273:4100  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_109\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_83\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_109:\n        /* \"C/concentrated liquidity .sol\":3094:4100  function addLiquidity(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_33\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_124\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_130\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"C/concentrated liquidity .sol\":2472:2628  function _calculateLiquidity(uint256 amount0, uint256 amount1) internal pure returns (uint256) {... */\n    tag_104:\n        /* \"C/concentrated liquidity .sol\":2558:2565  uint256 */\n      0x00\n        /* \"C/concentrated liquidity .sol\":2594:2601  amount1 */\n      dup2\n        /* \"C/concentrated liquidity .sol\":2584:2591  amount0 */\n      dup4\n        /* \"C/concentrated liquidity .sol\":2584:2601  amount0 < amount1 */\n      lt\n        /* \"C/concentrated liquidity .sol\":2584:2621  amount0 < amount1 ? amount0 : amount1 */\n      tag_133\n      jumpi\n        /* \"C/concentrated liquidity .sol\":2614:2621  amount1 */\n      dup2\n        /* \"C/concentrated liquidity .sol\":2584:2621  amount0 < amount1 ? amount0 : amount1 */\n      jump(tag_134)\n    tag_133:\n        /* \"C/concentrated liquidity .sol\":2604:2611  amount0 */\n      dup3\n        /* \"C/concentrated liquidity .sol\":2584:2621  amount0 < amount1 ? amount0 : amount1 */\n    tag_134:\n        /* \"C/concentrated liquidity .sol\":2577:2621  return amount0 < amount1 ? amount0 : amount1 */\n      swap1\n      pop\n        /* \"C/concentrated liquidity .sol\":2472:2628  function _calculateLiquidity(uint256 amount0, uint256 amount1) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_139)\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_142:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_143:\n        /* \"#utility.yul\":177:201   */\n      tag_178\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_142\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_18:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_180\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_143\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_144:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:634   */\n    tag_145:\n        /* \"#utility.yul\":602:605   */\n      0x00\n        /* \"#utility.yul\":623:628   */\n      dup2\n        /* \"#utility.yul\":616:628   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":640:782   */\n    tag_146:\n        /* \"#utility.yul\":690:699   */\n      0x00\n        /* \"#utility.yul\":723:776   */\n      tag_184\n        /* \"#utility.yul\":741:775   */\n      tag_185\n        /* \"#utility.yul\":750:774   */\n      tag_186\n        /* \"#utility.yul\":768:773   */\n      dup5\n        /* \"#utility.yul\":750:774   */\n      tag_144\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":741:775   */\n      tag_145\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":723:776   */\n      tag_144\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":710:776   */\n      swap1\n      pop\n        /* \"#utility.yul\":640:782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":788:914   */\n    tag_147:\n        /* \"#utility.yul\":838:847   */\n      0x00\n        /* \"#utility.yul\":871:908   */\n      tag_188\n        /* \"#utility.yul\":902:907   */\n      dup3\n        /* \"#utility.yul\":871:908   */\n      tag_146\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":858:908   */\n      swap1\n      pop\n        /* \"#utility.yul\":788:914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1060   */\n    tag_148:\n        /* \"#utility.yul\":984:993   */\n      0x00\n        /* \"#utility.yul\":1017:1054   */\n      tag_190\n        /* \"#utility.yul\":1048:1053   */\n      dup3\n        /* \"#utility.yul\":1017:1054   */\n      tag_147\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1004:1054   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:1060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1066:1225   */\n    tag_149:\n        /* \"#utility.yul\":1167:1218   */\n      tag_192\n        /* \"#utility.yul\":1212:1217   */\n      dup2\n        /* \"#utility.yul\":1167:1218   */\n      tag_148\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1162:1165   */\n      dup3\n        /* \"#utility.yul\":1155:1219   */\n      mstore\n        /* \"#utility.yul\":1066:1225   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1231:1481   */\n    tag_22:\n        /* \"#utility.yul\":1338:1342   */\n      0x00\n        /* \"#utility.yul\":1376:1378   */\n      0x20\n        /* \"#utility.yul\":1365:1374   */\n      dup3\n        /* \"#utility.yul\":1361:1379   */\n      add\n        /* \"#utility.yul\":1353:1379   */\n      swap1\n      pop\n        /* \"#utility.yul\":1389:1474   */\n      tag_194\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1460:1469   */\n      dup4\n        /* \"#utility.yul\":1456:1473   */\n      add\n        /* \"#utility.yul\":1447:1453   */\n      dup5\n        /* \"#utility.yul\":1389:1474   */\n      tag_149\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1231:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1568:1685   */\n    tag_151:\n        /* \"#utility.yul\":1677:1678   */\n      0x00\n        /* \"#utility.yul\":1674:1675   */\n      0x00\n        /* \"#utility.yul\":1667:1679   */\n      revert\n        /* \"#utility.yul\":1814:1936   */\n    tag_153:\n        /* \"#utility.yul\":1887:1911   */\n      tag_199\n        /* \"#utility.yul\":1905:1910   */\n      dup2\n        /* \"#utility.yul\":1887:1911   */\n      tag_142\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1880:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1912   */\n      eq\n        /* \"#utility.yul\":1867:1930   */\n      tag_200\n      jumpi\n        /* \"#utility.yul\":1926:1927   */\n      0x00\n        /* \"#utility.yul\":1923:1924   */\n      0x00\n        /* \"#utility.yul\":1916:1928   */\n      revert\n        /* \"#utility.yul\":1867:1930   */\n    tag_200:\n        /* \"#utility.yul\":1814:1936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1942:2081   */\n    tag_154:\n        /* \"#utility.yul\":1988:1993   */\n      0x00\n        /* \"#utility.yul\":2026:2032   */\n      dup2\n        /* \"#utility.yul\":2013:2033   */\n      calldataload\n        /* \"#utility.yul\":2004:2033   */\n      swap1\n      pop\n        /* \"#utility.yul\":2042:2075   */\n      tag_202\n        /* \"#utility.yul\":2069:2074   */\n      dup2\n        /* \"#utility.yul\":2042:2075   */\n      tag_153\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1942:2081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2087:2416   */\n    tag_25:\n        /* \"#utility.yul\":2146:2152   */\n      0x00\n        /* \"#utility.yul\":2195:2197   */\n      0x20\n        /* \"#utility.yul\":2183:2192   */\n      dup3\n        /* \"#utility.yul\":2174:2181   */\n      dup5\n        /* \"#utility.yul\":2170:2193   */\n      sub\n        /* \"#utility.yul\":2166:2198   */\n      slt\n        /* \"#utility.yul\":2163:2282   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":2201:2280   */\n      tag_205\n      tag_151\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2163:2282   */\n    tag_204:\n        /* \"#utility.yul\":2321:2322   */\n      0x00\n        /* \"#utility.yul\":2346:2399   */\n      tag_206\n        /* \"#utility.yul\":2391:2398   */\n      dup5\n        /* \"#utility.yul\":2382:2388   */\n      dup3\n        /* \"#utility.yul\":2371:2380   */\n      dup6\n        /* \"#utility.yul\":2367:2389   */\n      add\n        /* \"#utility.yul\":2346:2399   */\n      tag_154\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2336:2399   */\n      swap2\n      pop\n        /* \"#utility.yul\":2292:2409   */\n      pop\n        /* \"#utility.yul\":2087:2416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2422:2518   */\n    tag_155:\n        /* \"#utility.yul\":2459:2466   */\n      0x00\n        /* \"#utility.yul\":2488:2512   */\n      tag_208\n        /* \"#utility.yul\":2506:2511   */\n      dup3\n        /* \"#utility.yul\":2488:2512   */\n      tag_144\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2477:2512   */\n      swap1\n      pop\n        /* \"#utility.yul\":2422:2518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2642   */\n    tag_156:\n        /* \"#utility.yul\":2611:2635   */\n      tag_210\n        /* \"#utility.yul\":2629:2634   */\n      dup2\n        /* \"#utility.yul\":2611:2635   */\n      tag_155\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2606:2609   */\n      dup3\n        /* \"#utility.yul\":2599:2636   */\n      mstore\n        /* \"#utility.yul\":2524:2642   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2648:2870   */\n    tag_35:\n        /* \"#utility.yul\":2741:2745   */\n      0x00\n        /* \"#utility.yul\":2779:2781   */\n      0x20\n        /* \"#utility.yul\":2768:2777   */\n      dup3\n        /* \"#utility.yul\":2764:2782   */\n      add\n        /* \"#utility.yul\":2756:2782   */\n      swap1\n      pop\n        /* \"#utility.yul\":2792:2863   */\n      tag_212\n        /* \"#utility.yul\":2860:2861   */\n      0x00\n        /* \"#utility.yul\":2849:2858   */\n      dup4\n        /* \"#utility.yul\":2845:2862   */\n      add\n        /* \"#utility.yul\":2836:2842   */\n      dup5\n        /* \"#utility.yul\":2792:2863   */\n      tag_156\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2648:2870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:2966   */\n    tag_157:\n        /* \"#utility.yul\":2911:2918   */\n      0x00\n        /* \"#utility.yul\":2954:2959   */\n      dup2\n        /* \"#utility.yul\":2951:2952   */\n      0x02\n        /* \"#utility.yul\":2940:2960   */\n      signextend\n        /* \"#utility.yul\":2929:2960   */\n      swap1\n      pop\n        /* \"#utility.yul\":2876:2966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2972:3084   */\n    tag_158:\n        /* \"#utility.yul\":3055:3077   */\n      tag_215\n        /* \"#utility.yul\":3071:3076   */\n      dup2\n        /* \"#utility.yul\":3055:3077   */\n      tag_157\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3050:3053   */\n      dup3\n        /* \"#utility.yul\":3043:3078   */\n      mstore\n        /* \"#utility.yul\":2972:3084   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3090:3960   */\n    tag_40:\n        /* \"#utility.yul\":3343:3347   */\n      0x00\n        /* \"#utility.yul\":3381:3384   */\n      0xe0\n        /* \"#utility.yul\":3370:3379   */\n      dup3\n        /* \"#utility.yul\":3366:3385   */\n      add\n        /* \"#utility.yul\":3358:3385   */\n      swap1\n      pop\n        /* \"#utility.yul\":3395:3466   */\n      tag_217\n        /* \"#utility.yul\":3463:3464   */\n      0x00\n        /* \"#utility.yul\":3452:3461   */\n      dup4\n        /* \"#utility.yul\":3448:3465   */\n      add\n        /* \"#utility.yul\":3439:3445   */\n      dup11\n        /* \"#utility.yul\":3395:3466   */\n      tag_143\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3476:3548   */\n      tag_218\n        /* \"#utility.yul\":3544:3546   */\n      0x20\n        /* \"#utility.yul\":3533:3542   */\n      dup4\n        /* \"#utility.yul\":3529:3547   */\n      add\n        /* \"#utility.yul\":3520:3526   */\n      dup10\n        /* \"#utility.yul\":3476:3548   */\n      tag_156\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":3558:3626   */\n      tag_219\n        /* \"#utility.yul\":3622:3624   */\n      0x40\n        /* \"#utility.yul\":3611:3620   */\n      dup4\n        /* \"#utility.yul\":3607:3625   */\n      add\n        /* \"#utility.yul\":3598:3604   */\n      dup9\n        /* \"#utility.yul\":3558:3626   */\n      tag_158\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3636:3704   */\n      tag_220\n        /* \"#utility.yul\":3700:3702   */\n      0x60\n        /* \"#utility.yul\":3689:3698   */\n      dup4\n        /* \"#utility.yul\":3685:3703   */\n      add\n        /* \"#utility.yul\":3676:3682   */\n      dup8\n        /* \"#utility.yul\":3636:3704   */\n      tag_158\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3714:3787   */\n      tag_221\n        /* \"#utility.yul\":3782:3785   */\n      0x80\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3786   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup7\n        /* \"#utility.yul\":3714:3787   */\n      tag_143\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3797:3870   */\n      tag_222\n        /* \"#utility.yul\":3865:3868   */\n      0xa0\n        /* \"#utility.yul\":3854:3863   */\n      dup4\n        /* \"#utility.yul\":3850:3869   */\n      add\n        /* \"#utility.yul\":3841:3847   */\n      dup6\n        /* \"#utility.yul\":3797:3870   */\n      tag_143\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3880:3953   */\n      tag_223\n        /* \"#utility.yul\":3948:3951   */\n      0xc0\n        /* \"#utility.yul\":3937:3946   */\n      dup4\n        /* \"#utility.yul\":3933:3952   */\n      add\n        /* \"#utility.yul\":3924:3930   */\n      dup5\n        /* \"#utility.yul\":3880:3953   */\n      tag_143\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3090:3960   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3966:4088   */\n    tag_159:\n        /* \"#utility.yul\":4039:4063   */\n      tag_225\n        /* \"#utility.yul\":4057:4062   */\n      dup2\n        /* \"#utility.yul\":4039:4063   */\n      tag_155\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4032:4037   */\n      dup2\n        /* \"#utility.yul\":4029:4064   */\n      eq\n        /* \"#utility.yul\":4019:4082   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":4078:4079   */\n      0x00\n        /* \"#utility.yul\":4075:4076   */\n      0x00\n        /* \"#utility.yul\":4068:4080   */\n      revert\n        /* \"#utility.yul\":4019:4082   */\n    tag_226:\n        /* \"#utility.yul\":3966:4088   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4094:4233   */\n    tag_160:\n        /* \"#utility.yul\":4140:4145   */\n      0x00\n        /* \"#utility.yul\":4178:4184   */\n      dup2\n        /* \"#utility.yul\":4165:4185   */\n      calldataload\n        /* \"#utility.yul\":4156:4185   */\n      swap1\n      pop\n        /* \"#utility.yul\":4194:4227   */\n      tag_228\n        /* \"#utility.yul\":4221:4226   */\n      dup2\n        /* \"#utility.yul\":4194:4227   */\n      tag_159\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4094:4233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4239:4568   */\n    tag_49:\n        /* \"#utility.yul\":4298:4304   */\n      0x00\n        /* \"#utility.yul\":4347:4349   */\n      0x20\n        /* \"#utility.yul\":4335:4344   */\n      dup3\n        /* \"#utility.yul\":4326:4333   */\n      dup5\n        /* \"#utility.yul\":4322:4345   */\n      sub\n        /* \"#utility.yul\":4318:4350   */\n      slt\n        /* \"#utility.yul\":4315:4434   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":4353:4432   */\n      tag_231\n      tag_151\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4315:4434   */\n    tag_230:\n        /* \"#utility.yul\":4473:4474   */\n      0x00\n        /* \"#utility.yul\":4498:4551   */\n      tag_232\n        /* \"#utility.yul\":4543:4550   */\n      dup5\n        /* \"#utility.yul\":4534:4540   */\n      dup3\n        /* \"#utility.yul\":4523:4532   */\n      dup6\n        /* \"#utility.yul\":4519:4541   */\n      add\n        /* \"#utility.yul\":4498:4551   */\n      tag_160\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4488:4551   */\n      swap2\n      pop\n        /* \"#utility.yul\":4444:4561   */\n      pop\n        /* \"#utility.yul\":4239:4568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4574:4692   */\n    tag_161:\n        /* \"#utility.yul\":4645:4667   */\n      tag_234\n        /* \"#utility.yul\":4661:4666   */\n      dup2\n        /* \"#utility.yul\":4645:4667   */\n      tag_157\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4638:4643   */\n      dup2\n        /* \"#utility.yul\":4635:4668   */\n      eq\n        /* \"#utility.yul\":4625:4686   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":4682:4683   */\n      0x00\n        /* \"#utility.yul\":4679:4680   */\n      0x00\n        /* \"#utility.yul\":4672:4684   */\n      revert\n        /* \"#utility.yul\":4625:4686   */\n    tag_235:\n        /* \"#utility.yul\":4574:4692   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4698:4833   */\n    tag_162:\n        /* \"#utility.yul\":4742:4747   */\n      0x00\n        /* \"#utility.yul\":4780:4786   */\n      dup2\n        /* \"#utility.yul\":4767:4787   */\n      calldataload\n        /* \"#utility.yul\":4758:4787   */\n      swap1\n      pop\n        /* \"#utility.yul\":4796:4827   */\n      tag_237\n        /* \"#utility.yul\":4821:4826   */\n      dup2\n        /* \"#utility.yul\":4796:4827   */\n      tag_161\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4698:4833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4839:5596   */\n    tag_53:\n        /* \"#utility.yul\":4921:4927   */\n      0x00\n        /* \"#utility.yul\":4929:4935   */\n      0x00\n        /* \"#utility.yul\":4937:4943   */\n      0x00\n        /* \"#utility.yul\":4945:4951   */\n      0x00\n        /* \"#utility.yul\":4994:4997   */\n      0x80\n        /* \"#utility.yul\":4982:4991   */\n      dup6\n        /* \"#utility.yul\":4973:4980   */\n      dup8\n        /* \"#utility.yul\":4969:4992   */\n      sub\n        /* \"#utility.yul\":4965:4998   */\n      slt\n        /* \"#utility.yul\":4962:5082   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":5001:5080   */\n      tag_240\n      tag_151\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4962:5082   */\n    tag_239:\n        /* \"#utility.yul\":5121:5122   */\n      0x00\n        /* \"#utility.yul\":5146:5197   */\n      tag_241\n        /* \"#utility.yul\":5189:5196   */\n      dup8\n        /* \"#utility.yul\":5180:5186   */\n      dup3\n        /* \"#utility.yul\":5169:5178   */\n      dup9\n        /* \"#utility.yul\":5165:5187   */\n      add\n        /* \"#utility.yul\":5146:5197   */\n      tag_162\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5136:5197   */\n      swap5\n      pop\n        /* \"#utility.yul\":5092:5207   */\n      pop\n        /* \"#utility.yul\":5246:5248   */\n      0x20\n        /* \"#utility.yul\":5272:5323   */\n      tag_242\n        /* \"#utility.yul\":5315:5322   */\n      dup8\n        /* \"#utility.yul\":5306:5312   */\n      dup3\n        /* \"#utility.yul\":5295:5304   */\n      dup9\n        /* \"#utility.yul\":5291:5313   */\n      add\n        /* \"#utility.yul\":5272:5323   */\n      tag_162\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5262:5323   */\n      swap4\n      pop\n        /* \"#utility.yul\":5217:5333   */\n      pop\n        /* \"#utility.yul\":5372:5374   */\n      0x40\n        /* \"#utility.yul\":5398:5451   */\n      tag_243\n        /* \"#utility.yul\":5443:5450   */\n      dup8\n        /* \"#utility.yul\":5434:5440   */\n      dup3\n        /* \"#utility.yul\":5423:5432   */\n      dup9\n        /* \"#utility.yul\":5419:5441   */\n      add\n        /* \"#utility.yul\":5398:5451   */\n      tag_154\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5388:5451   */\n      swap3\n      pop\n        /* \"#utility.yul\":5343:5461   */\n      pop\n        /* \"#utility.yul\":5500:5502   */\n      0x60\n        /* \"#utility.yul\":5526:5579   */\n      tag_244\n        /* \"#utility.yul\":5571:5578   */\n      dup8\n        /* \"#utility.yul\":5562:5568   */\n      dup3\n        /* \"#utility.yul\":5551:5560   */\n      dup9\n        /* \"#utility.yul\":5547:5569   */\n      add\n        /* \"#utility.yul\":5526:5579   */\n      tag_154\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5516:5579   */\n      swap2\n      pop\n        /* \"#utility.yul\":5471:5589   */\n      pop\n        /* \"#utility.yul\":4839:5596   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5602:5771   */\n    tag_163:\n        /* \"#utility.yul\":5686:5697   */\n      0x00\n        /* \"#utility.yul\":5720:5726   */\n      dup3\n        /* \"#utility.yul\":5715:5718   */\n      dup3\n        /* \"#utility.yul\":5708:5727   */\n      mstore\n        /* \"#utility.yul\":5760:5764   */\n      0x20\n        /* \"#utility.yul\":5755:5758   */\n      dup3\n        /* \"#utility.yul\":5751:5765   */\n      add\n        /* \"#utility.yul\":5736:5765   */\n      swap1\n      pop\n        /* \"#utility.yul\":5602:5771   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5777:5945   */\n    tag_164:\n        /* \"#utility.yul\":5917:5937   */\n      0x4e6f7420706f736974696f6e206f776e65720000000000000000000000000000\n        /* \"#utility.yul\":5913:5914   */\n      0x00\n        /* \"#utility.yul\":5905:5911   */\n      dup3\n        /* \"#utility.yul\":5901:5915   */\n      add\n        /* \"#utility.yul\":5894:5938   */\n      mstore\n        /* \"#utility.yul\":5777:5945   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5951:6317   */\n    tag_165:\n        /* \"#utility.yul\":6093:6096   */\n      0x00\n        /* \"#utility.yul\":6114:6181   */\n      tag_248\n        /* \"#utility.yul\":6178:6180   */\n      0x12\n        /* \"#utility.yul\":6173:6176   */\n      dup4\n        /* \"#utility.yul\":6114:6181   */\n      tag_163\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6107:6181   */\n      swap2\n      pop\n        /* \"#utility.yul\":6190:6283   */\n      tag_249\n        /* \"#utility.yul\":6279:6282   */\n      dup3\n        /* \"#utility.yul\":6190:6283   */\n      tag_164\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6308:6310   */\n      0x20\n        /* \"#utility.yul\":6303:6306   */\n      dup3\n        /* \"#utility.yul\":6299:6311   */\n      add\n        /* \"#utility.yul\":6292:6311   */\n      swap1\n      pop\n        /* \"#utility.yul\":5951:6317   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6323:6742   */\n    tag_73:\n        /* \"#utility.yul\":6489:6493   */\n      0x00\n        /* \"#utility.yul\":6527:6529   */\n      0x20\n        /* \"#utility.yul\":6516:6525   */\n      dup3\n        /* \"#utility.yul\":6512:6530   */\n      add\n        /* \"#utility.yul\":6504:6530   */\n      swap1\n      pop\n        /* \"#utility.yul\":6576:6585   */\n      dup2\n        /* \"#utility.yul\":6570:6574   */\n      dup2\n        /* \"#utility.yul\":6566:6586   */\n      sub\n        /* \"#utility.yul\":6562:6563   */\n      0x00\n        /* \"#utility.yul\":6551:6560   */\n      dup4\n        /* \"#utility.yul\":6547:6564   */\n      add\n        /* \"#utility.yul\":6540:6587   */\n      mstore\n        /* \"#utility.yul\":6604:6735   */\n      tag_251\n        /* \"#utility.yul\":6730:6734   */\n      dup2\n        /* \"#utility.yul\":6604:6735   */\n      tag_165\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":6596:6735   */\n      swap1\n      pop\n        /* \"#utility.yul\":6323:6742   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6748:6922   */\n    tag_166:\n        /* \"#utility.yul\":6888:6914   */\n      0x506f736974696f6e20616c72656164792072656d6f7665640000000000000000\n        /* \"#utility.yul\":6884:6885   */\n      0x00\n        /* \"#utility.yul\":6876:6882   */\n      dup3\n        /* \"#utility.yul\":6872:6886   */\n      add\n        /* \"#utility.yul\":6865:6915   */\n      mstore\n        /* \"#utility.yul\":6748:6922   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6928:7294   */\n    tag_167:\n        /* \"#utility.yul\":7070:7073   */\n      0x00\n        /* \"#utility.yul\":7091:7158   */\n      tag_254\n        /* \"#utility.yul\":7155:7157   */\n      0x18\n        /* \"#utility.yul\":7150:7153   */\n      dup4\n        /* \"#utility.yul\":7091:7158   */\n      tag_163\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":7084:7158   */\n      swap2\n      pop\n        /* \"#utility.yul\":7167:7260   */\n      tag_255\n        /* \"#utility.yul\":7256:7259   */\n      dup3\n        /* \"#utility.yul\":7167:7260   */\n      tag_166\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":7285:7287   */\n      0x20\n        /* \"#utility.yul\":7280:7283   */\n      dup3\n        /* \"#utility.yul\":7276:7288   */\n      add\n        /* \"#utility.yul\":7269:7288   */\n      swap1\n      pop\n        /* \"#utility.yul\":6928:7294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7300:7719   */\n    tag_76:\n        /* \"#utility.yul\":7466:7470   */\n      0x00\n        /* \"#utility.yul\":7504:7506   */\n      0x20\n        /* \"#utility.yul\":7493:7502   */\n      dup3\n        /* \"#utility.yul\":7489:7507   */\n      add\n        /* \"#utility.yul\":7481:7507   */\n      swap1\n      pop\n        /* \"#utility.yul\":7553:7562   */\n      dup2\n        /* \"#utility.yul\":7547:7551   */\n      dup2\n        /* \"#utility.yul\":7543:7563   */\n      sub\n        /* \"#utility.yul\":7539:7540   */\n      0x00\n        /* \"#utility.yul\":7528:7537   */\n      dup4\n        /* \"#utility.yul\":7524:7541   */\n      add\n        /* \"#utility.yul\":7517:7564   */\n      mstore\n        /* \"#utility.yul\":7581:7712   */\n      tag_257\n        /* \"#utility.yul\":7707:7711   */\n      dup2\n        /* \"#utility.yul\":7581:7712   */\n      tag_167\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7573:7712   */\n      swap1\n      pop\n        /* \"#utility.yul\":7300:7719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7725:8057   */\n    tag_81:\n        /* \"#utility.yul\":7846:7850   */\n      0x00\n        /* \"#utility.yul\":7884:7886   */\n      0x40\n        /* \"#utility.yul\":7873:7882   */\n      dup3\n        /* \"#utility.yul\":7869:7887   */\n      add\n        /* \"#utility.yul\":7861:7887   */\n      swap1\n      pop\n        /* \"#utility.yul\":7897:7968   */\n      tag_259\n        /* \"#utility.yul\":7965:7966   */\n      0x00\n        /* \"#utility.yul\":7954:7963   */\n      dup4\n        /* \"#utility.yul\":7950:7967   */\n      add\n        /* \"#utility.yul\":7941:7947   */\n      dup6\n        /* \"#utility.yul\":7897:7968   */\n      tag_143\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":7978:8050   */\n      tag_260\n        /* \"#utility.yul\":8046:8048   */\n      0x20\n        /* \"#utility.yul\":8035:8044   */\n      dup4\n        /* \"#utility.yul\":8031:8049   */\n      add\n        /* \"#utility.yul\":8022:8028   */\n      dup5\n        /* \"#utility.yul\":7978:8050   */\n      tag_143\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7725:8057   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8063:8231   */\n    tag_168:\n        /* \"#utility.yul\":8203:8223   */\n      0x496e76616c6964207469636b2072616e67650000000000000000000000000000\n        /* \"#utility.yul\":8199:8200   */\n      0x00\n        /* \"#utility.yul\":8191:8197   */\n      dup3\n        /* \"#utility.yul\":8187:8201   */\n      add\n        /* \"#utility.yul\":8180:8224   */\n      mstore\n        /* \"#utility.yul\":8063:8231   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8237:8603   */\n    tag_169:\n        /* \"#utility.yul\":8379:8382   */\n      0x00\n        /* \"#utility.yul\":8400:8467   */\n      tag_263\n        /* \"#utility.yul\":8464:8466   */\n      0x12\n        /* \"#utility.yul\":8459:8462   */\n      dup4\n        /* \"#utility.yul\":8400:8467   */\n      tag_163\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8393:8467   */\n      swap2\n      pop\n        /* \"#utility.yul\":8476:8569   */\n      tag_264\n        /* \"#utility.yul\":8565:8568   */\n      dup3\n        /* \"#utility.yul\":8476:8569   */\n      tag_168\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8594:8596   */\n      0x20\n        /* \"#utility.yul\":8589:8592   */\n      dup3\n        /* \"#utility.yul\":8585:8597   */\n      add\n        /* \"#utility.yul\":8578:8597   */\n      swap1\n      pop\n        /* \"#utility.yul\":8237:8603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8609:9028   */\n    tag_95:\n        /* \"#utility.yul\":8775:8779   */\n      0x00\n        /* \"#utility.yul\":8813:8815   */\n      0x20\n        /* \"#utility.yul\":8802:8811   */\n      dup3\n        /* \"#utility.yul\":8798:8816   */\n      add\n        /* \"#utility.yul\":8790:8816   */\n      swap1\n      pop\n        /* \"#utility.yul\":8862:8871   */\n      dup2\n        /* \"#utility.yul\":8856:8860   */\n      dup2\n        /* \"#utility.yul\":8852:8872   */\n      sub\n        /* \"#utility.yul\":8848:8849   */\n      0x00\n        /* \"#utility.yul\":8837:8846   */\n      dup4\n        /* \"#utility.yul\":8833:8850   */\n      add\n        /* \"#utility.yul\":8826:8873   */\n      mstore\n        /* \"#utility.yul\":8890:9021   */\n      tag_266\n        /* \"#utility.yul\":9016:9020   */\n      dup2\n        /* \"#utility.yul\":8890:9021   */\n      tag_169\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":8882:9021   */\n      swap1\n      pop\n        /* \"#utility.yul\":8609:9028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9034:9203   */\n    tag_170:\n        /* \"#utility.yul\":9174:9195   */\n      0x416d6f756e7473206d757374206265203e203000000000000000000000000000\n        /* \"#utility.yul\":9170:9171   */\n      0x00\n        /* \"#utility.yul\":9162:9168   */\n      dup3\n        /* \"#utility.yul\":9158:9172   */\n      add\n        /* \"#utility.yul\":9151:9196   */\n      mstore\n        /* \"#utility.yul\":9034:9203   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9209:9575   */\n    tag_171:\n        /* \"#utility.yul\":9351:9354   */\n      0x00\n        /* \"#utility.yul\":9372:9439   */\n      tag_269\n        /* \"#utility.yul\":9436:9438   */\n      0x13\n        /* \"#utility.yul\":9431:9434   */\n      dup4\n        /* \"#utility.yul\":9372:9439   */\n      tag_163\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9365:9439   */\n      swap2\n      pop\n        /* \"#utility.yul\":9448:9541   */\n      tag_270\n        /* \"#utility.yul\":9537:9540   */\n      dup3\n        /* \"#utility.yul\":9448:9541   */\n      tag_170\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9566:9568   */\n      0x20\n        /* \"#utility.yul\":9561:9564   */\n      dup3\n        /* \"#utility.yul\":9557:9569   */\n      add\n        /* \"#utility.yul\":9550:9569   */\n      swap1\n      pop\n        /* \"#utility.yul\":9209:9575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9581:10000   */\n    tag_99:\n        /* \"#utility.yul\":9747:9751   */\n      0x00\n        /* \"#utility.yul\":9785:9787   */\n      0x20\n        /* \"#utility.yul\":9774:9783   */\n      dup3\n        /* \"#utility.yul\":9770:9788   */\n      add\n        /* \"#utility.yul\":9762:9788   */\n      swap1\n      pop\n        /* \"#utility.yul\":9834:9843   */\n      dup2\n        /* \"#utility.yul\":9828:9832   */\n      dup2\n        /* \"#utility.yul\":9824:9844   */\n      sub\n        /* \"#utility.yul\":9820:9821   */\n      0x00\n        /* \"#utility.yul\":9809:9818   */\n      dup4\n        /* \"#utility.yul\":9805:9822   */\n      add\n        /* \"#utility.yul\":9798:9845   */\n      mstore\n        /* \"#utility.yul\":9862:9993   */\n      tag_272\n        /* \"#utility.yul\":9988:9992   */\n      dup2\n        /* \"#utility.yul\":9862:9993   */\n      tag_171\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":9854:9993   */\n      swap1\n      pop\n        /* \"#utility.yul\":9581:10000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10006:10186   */\n    tag_172:\n        /* \"#utility.yul\":10054:10131   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10051:10052   */\n      0x00\n        /* \"#utility.yul\":10044:10132   */\n      mstore\n        /* \"#utility.yul\":10151:10155   */\n      0x11\n        /* \"#utility.yul\":10148:10149   */\n      0x04\n        /* \"#utility.yul\":10141:10156   */\n      mstore\n        /* \"#utility.yul\":10175:10179   */\n      0x24\n        /* \"#utility.yul\":10172:10173   */\n      0x00\n        /* \"#utility.yul\":10165:10180   */\n      revert\n        /* \"#utility.yul\":10192:10425   */\n    tag_106:\n        /* \"#utility.yul\":10231:10234   */\n      0x00\n        /* \"#utility.yul\":10254:10278   */\n      tag_275\n        /* \"#utility.yul\":10272:10277   */\n      dup3\n        /* \"#utility.yul\":10254:10278   */\n      tag_142\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10245:10278   */\n      swap2\n      pop\n        /* \"#utility.yul\":10300:10366   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10293:10298   */\n      dup3\n        /* \"#utility.yul\":10290:10367   */\n      sub\n        /* \"#utility.yul\":10287:10390   */\n      tag_276\n      jumpi\n        /* \"#utility.yul\":10370:10388   */\n      tag_277\n      tag_172\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":10287:10390   */\n    tag_276:\n        /* \"#utility.yul\":10417:10418   */\n      0x01\n        /* \"#utility.yul\":10410:10415   */\n      dup3\n        /* \"#utility.yul\":10406:10419   */\n      add\n        /* \"#utility.yul\":10399:10419   */\n      swap1\n      pop\n        /* \"#utility.yul\":10192:10425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10431:11079   */\n    tag_108:\n        /* \"#utility.yul\":10628:10632   */\n      0x00\n        /* \"#utility.yul\":10666:10669   */\n      0xa0\n        /* \"#utility.yul\":10655:10664   */\n      dup3\n        /* \"#utility.yul\":10651:10670   */\n      add\n        /* \"#utility.yul\":10643:10670   */\n      swap1\n      pop\n        /* \"#utility.yul\":10680:10747   */\n      tag_279\n        /* \"#utility.yul\":10744:10745   */\n      0x00\n        /* \"#utility.yul\":10733:10742   */\n      dup4\n        /* \"#utility.yul\":10729:10746   */\n      add\n        /* \"#utility.yul\":10720:10726   */\n      dup9\n        /* \"#utility.yul\":10680:10747   */\n      tag_158\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":10757:10825   */\n      tag_280\n        /* \"#utility.yul\":10821:10823   */\n      0x20\n        /* \"#utility.yul\":10810:10819   */\n      dup4\n        /* \"#utility.yul\":10806:10824   */\n      add\n        /* \"#utility.yul\":10797:10803   */\n      dup8\n        /* \"#utility.yul\":10757:10825   */\n      tag_158\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":10835:10907   */\n      tag_281\n        /* \"#utility.yul\":10903:10905   */\n      0x40\n        /* \"#utility.yul\":10892:10901   */\n      dup4\n        /* \"#utility.yul\":10888:10906   */\n      add\n        /* \"#utility.yul\":10879:10885   */\n      dup7\n        /* \"#utility.yul\":10835:10907   */\n      tag_143\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10917:10989   */\n      tag_282\n        /* \"#utility.yul\":10985:10987   */\n      0x60\n        /* \"#utility.yul\":10974:10983   */\n      dup4\n        /* \"#utility.yul\":10970:10988   */\n      add\n        /* \"#utility.yul\":10961:10967   */\n      dup6\n        /* \"#utility.yul\":10917:10989   */\n      tag_143\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":10999:11072   */\n      tag_283\n        /* \"#utility.yul\":11067:11070   */\n      0x80\n        /* \"#utility.yul\":11056:11065   */\n      dup4\n        /* \"#utility.yul\":11052:11071   */\n      add\n        /* \"#utility.yul\":11043:11049   */\n      dup5\n        /* \"#utility.yul\":10999:11072   */\n      tag_143\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":10431:11079   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11085:11266   */\n    tag_173:\n        /* \"#utility.yul\":11225:11258   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11221:11222   */\n      0x00\n        /* \"#utility.yul\":11213:11219   */\n      dup3\n        /* \"#utility.yul\":11209:11223   */\n      add\n        /* \"#utility.yul\":11202:11259   */\n      mstore\n        /* \"#utility.yul\":11085:11266   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11272:11638   */\n    tag_174:\n        /* \"#utility.yul\":11414:11417   */\n      0x00\n        /* \"#utility.yul\":11435:11502   */\n      tag_286\n        /* \"#utility.yul\":11499:11501   */\n      0x1f\n        /* \"#utility.yul\":11494:11497   */\n      dup4\n        /* \"#utility.yul\":11435:11502   */\n      tag_163\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":11428:11502   */\n      swap2\n      pop\n        /* \"#utility.yul\":11511:11604   */\n      tag_287\n        /* \"#utility.yul\":11600:11603   */\n      dup3\n        /* \"#utility.yul\":11511:11604   */\n      tag_173\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":11629:11631   */\n      0x20\n        /* \"#utility.yul\":11624:11627   */\n      dup3\n        /* \"#utility.yul\":11620:11632   */\n      add\n        /* \"#utility.yul\":11613:11632   */\n      swap1\n      pop\n        /* \"#utility.yul\":11272:11638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11644:12063   */\n    tag_121:\n        /* \"#utility.yul\":11810:11814   */\n      0x00\n        /* \"#utility.yul\":11848:11850   */\n      0x20\n        /* \"#utility.yul\":11837:11846   */\n      dup3\n        /* \"#utility.yul\":11833:11851   */\n      add\n        /* \"#utility.yul\":11825:11851   */\n      swap1\n      pop\n        /* \"#utility.yul\":11897:11906   */\n      dup2\n        /* \"#utility.yul\":11891:11895   */\n      dup2\n        /* \"#utility.yul\":11887:11907   */\n      sub\n        /* \"#utility.yul\":11883:11884   */\n      0x00\n        /* \"#utility.yul\":11872:11881   */\n      dup4\n        /* \"#utility.yul\":11868:11885   */\n      add\n        /* \"#utility.yul\":11861:11908   */\n      mstore\n        /* \"#utility.yul\":11925:12056   */\n      tag_289\n        /* \"#utility.yul\":12051:12055   */\n      dup2\n        /* \"#utility.yul\":11925:12056   */\n      tag_174\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":11917:12056   */\n      swap1\n      pop\n        /* \"#utility.yul\":11644:12063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12069:12401   */\n    tag_125:\n        /* \"#utility.yul\":12190:12194   */\n      0x00\n        /* \"#utility.yul\":12228:12230   */\n      0x40\n        /* \"#utility.yul\":12217:12226   */\n      dup3\n        /* \"#utility.yul\":12213:12231   */\n      add\n        /* \"#utility.yul\":12205:12231   */\n      swap1\n      pop\n        /* \"#utility.yul\":12241:12312   */\n      tag_291\n        /* \"#utility.yul\":12309:12310   */\n      0x00\n        /* \"#utility.yul\":12298:12307   */\n      dup4\n        /* \"#utility.yul\":12294:12311   */\n      add\n        /* \"#utility.yul\":12285:12291   */\n      dup6\n        /* \"#utility.yul\":12241:12312   */\n      tag_156\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":12322:12394   */\n      tag_292\n        /* \"#utility.yul\":12390:12392   */\n      0x20\n        /* \"#utility.yul\":12379:12388   */\n      dup4\n        /* \"#utility.yul\":12375:12393   */\n      add\n        /* \"#utility.yul\":12366:12372   */\n      dup5\n        /* \"#utility.yul\":12322:12394   */\n      tag_143\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":12069:12401   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12407:12849   */\n    tag_131:\n        /* \"#utility.yul\":12556:12560   */\n      0x00\n        /* \"#utility.yul\":12594:12596   */\n      0x60\n        /* \"#utility.yul\":12583:12592   */\n      dup3\n        /* \"#utility.yul\":12579:12597   */\n      add\n        /* \"#utility.yul\":12571:12597   */\n      swap1\n      pop\n        /* \"#utility.yul\":12607:12678   */\n      tag_294\n        /* \"#utility.yul\":12675:12676   */\n      0x00\n        /* \"#utility.yul\":12664:12673   */\n      dup4\n        /* \"#utility.yul\":12660:12677   */\n      add\n        /* \"#utility.yul\":12651:12657   */\n      dup7\n        /* \"#utility.yul\":12607:12678   */\n      tag_156\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":12688:12760   */\n      tag_295\n        /* \"#utility.yul\":12756:12758   */\n      0x20\n        /* \"#utility.yul\":12745:12754   */\n      dup4\n        /* \"#utility.yul\":12741:12759   */\n      add\n        /* \"#utility.yul\":12732:12738   */\n      dup6\n        /* \"#utility.yul\":12688:12760   */\n      tag_156\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":12770:12842   */\n      tag_296\n        /* \"#utility.yul\":12838:12840   */\n      0x40\n        /* \"#utility.yul\":12827:12836   */\n      dup4\n        /* \"#utility.yul\":12823:12841   */\n      add\n        /* \"#utility.yul\":12814:12820   */\n      dup5\n        /* \"#utility.yul\":12770:12842   */\n      tag_143\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":12407:12849   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220233403ce7f6fc1abff3174073dd40fad6449221ddba9d611bc6a5f50a6673da964736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_958": {
									"entryPoint": null,
									"id": 958,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 479,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3372:10",
										"nodeType": "YulBlock",
										"src": "0:3372:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "890:32:10",
													"nodeType": "YulBlock",
													"src": "890:32:10",
													"statements": [
														{
															"nativeSrc": "900:16:10",
															"nodeType": "YulAssignment",
															"src": "900:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:10",
																"nodeType": "YulIdentifier",
																"src": "911:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:10",
														"nodeType": "YulTypedName",
														"src": "872:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:10",
														"nodeType": "YulTypedName",
														"src": "882:7:10",
														"type": ""
													}
												],
												"src": "845:77:10"
											},
											{
												"body": {
													"nativeSrc": "971:79:10",
													"nodeType": "YulBlock",
													"src": "971:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:10",
																"nodeType": "YulBlock",
																"src": "1028:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:10"
																			},
																			"nativeSrc": "1030:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:10"
																		},
																		"nativeSrc": "1030:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:10"
																				},
																				"nativeSrc": "1001:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:10"
																		},
																		"nativeSrc": "991:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:10"
																},
																"nativeSrc": "984:43:10",
																"nodeType": "YulFunctionCall",
																"src": "984:43:10"
															},
															"nativeSrc": "981:63:10",
															"nodeType": "YulIf",
															"src": "981:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:10",
														"nodeType": "YulTypedName",
														"src": "964:5:10",
														"type": ""
													}
												],
												"src": "928:122:10"
											},
											{
												"body": {
													"nativeSrc": "1119:80:10",
													"nodeType": "YulBlock",
													"src": "1119:80:10",
													"statements": [
														{
															"nativeSrc": "1129:22:10",
															"nodeType": "YulAssignment",
															"src": "1129:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:10"
																},
																"nativeSrc": "1138:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:10"
																},
																"nativeSrc": "1160:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:10"
															},
															"nativeSrc": "1160:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:10",
														"nodeType": "YulTypedName",
														"src": "1097:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:10",
														"nodeType": "YulTypedName",
														"src": "1105:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:10",
														"nodeType": "YulTypedName",
														"src": "1113:5:10",
														"type": ""
													}
												],
												"src": "1056:143:10"
											},
											{
												"body": {
													"nativeSrc": "1316:552:10",
													"nodeType": "YulBlock",
													"src": "1316:552:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:10",
																"nodeType": "YulBlock",
																"src": "1362:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:10"
																			},
																			"nativeSrc": "1364:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:10"
																		},
																		"nativeSrc": "1364:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:10"
																		},
																		"nativeSrc": "1333:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:10"
																},
																"nativeSrc": "1329:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:10"
															},
															"nativeSrc": "1326:119:10",
															"nodeType": "YulIf",
															"src": "1326:119:10"
														},
														{
															"nativeSrc": "1455:128:10",
															"nodeType": "YulBlock",
															"src": "1455:128:10",
															"statements": [
																{
																	"nativeSrc": "1470:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:10"
																				},
																				"nativeSrc": "1541:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1509:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:10"
																		},
																		"nativeSrc": "1509:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:10",
															"nodeType": "YulBlock",
															"src": "1593:129:10",
															"statements": [
																{
																	"nativeSrc": "1608:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:10"
																				},
																				"nativeSrc": "1680:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1648:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:10"
																		},
																		"nativeSrc": "1648:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:10",
															"nodeType": "YulBlock",
															"src": "1732:129:10",
															"statements": [
																{
																	"nativeSrc": "1747:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:10"
																				},
																				"nativeSrc": "1819:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1787:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:10"
																		},
																		"nativeSrc": "1787:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "1205:663:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:10",
														"nodeType": "YulTypedName",
														"src": "1270:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:10",
														"nodeType": "YulTypedName",
														"src": "1281:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:10",
														"nodeType": "YulTypedName",
														"src": "1293:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:10",
														"nodeType": "YulTypedName",
														"src": "1301:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:10",
														"nodeType": "YulTypedName",
														"src": "1309:6:10",
														"type": ""
													}
												],
												"src": "1205:663:10"
											},
											{
												"body": {
													"nativeSrc": "1939:53:10",
													"nodeType": "YulBlock",
													"src": "1939:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1956:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1979:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1979:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1961:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1961:17:10"
																		},
																		"nativeSrc": "1961:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1949:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:10"
																},
																"nativeSrc": "1949:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1949:37:10"
															},
															"nativeSrc": "1949:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1949:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1874:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1927:5:10",
														"nodeType": "YulTypedName",
														"src": "1927:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1934:3:10",
														"nodeType": "YulTypedName",
														"src": "1934:3:10",
														"type": ""
													}
												],
												"src": "1874:118:10"
											},
											{
												"body": {
													"nativeSrc": "2096:124:10",
													"nodeType": "YulBlock",
													"src": "2096:124:10",
													"statements": [
														{
															"nativeSrc": "2106:26:10",
															"nodeType": "YulAssignment",
															"src": "2106:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2118:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2118:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2129:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2129:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2114:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:10"
																},
																"nativeSrc": "2114:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2114:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2106:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2106:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2186:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2186:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2199:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2199:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2210:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2210:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2195:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:10"
																		},
																		"nativeSrc": "2195:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2142:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2142:43:10"
																},
																"nativeSrc": "2142:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2142:71:10"
															},
															"nativeSrc": "2142:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2142:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1998:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2068:9:10",
														"nodeType": "YulTypedName",
														"src": "2068:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2080:6:10",
														"nodeType": "YulTypedName",
														"src": "2080:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2091:4:10",
														"nodeType": "YulTypedName",
														"src": "2091:4:10",
														"type": ""
													}
												],
												"src": "1998:222:10"
											},
											{
												"body": {
													"nativeSrc": "2322:73:10",
													"nodeType": "YulBlock",
													"src": "2322:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2339:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2339:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2344:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2344:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2332:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2332:6:10"
																},
																"nativeSrc": "2332:19:10",
																"nodeType": "YulFunctionCall",
																"src": "2332:19:10"
															},
															"nativeSrc": "2332:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "2332:19:10"
														},
														{
															"nativeSrc": "2360:29:10",
															"nodeType": "YulAssignment",
															"src": "2360:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2379:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2379:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2384:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2384:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2375:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2375:3:10"
																},
																"nativeSrc": "2375:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2375:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2360:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "2360:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2226:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2294:3:10",
														"nodeType": "YulTypedName",
														"src": "2294:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2299:6:10",
														"nodeType": "YulTypedName",
														"src": "2299:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2310:11:10",
														"nodeType": "YulTypedName",
														"src": "2310:11:10",
														"type": ""
													}
												],
												"src": "2226:169:10"
											},
											{
												"body": {
													"nativeSrc": "2507:65:10",
													"nodeType": "YulBlock",
													"src": "2507:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2529:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2529:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2537:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2537:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2525:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2525:3:10"
																		},
																		"nativeSrc": "2525:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2525:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "2541:23:10",
																		"nodeType": "YulLiteral",
																		"src": "2541:23:10",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2518:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:10"
																},
																"nativeSrc": "2518:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2518:47:10"
															},
															"nativeSrc": "2518:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2518:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nativeSrc": "2401:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2499:6:10",
														"nodeType": "YulTypedName",
														"src": "2499:6:10",
														"type": ""
													}
												],
												"src": "2401:171:10"
											},
											{
												"body": {
													"nativeSrc": "2724:220:10",
													"nodeType": "YulBlock",
													"src": "2724:220:10",
													"statements": [
														{
															"nativeSrc": "2734:74:10",
															"nodeType": "YulAssignment",
															"src": "2734:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2800:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2800:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2805:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2805:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2741:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2741:58:10"
																},
																"nativeSrc": "2741:67:10",
																"nodeType": "YulFunctionCall",
																"src": "2741:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2734:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2734:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2906:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2906:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nativeSrc": "2817:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "2817:88:10"
																},
																"nativeSrc": "2817:93:10",
																"nodeType": "YulFunctionCall",
																"src": "2817:93:10"
															},
															"nativeSrc": "2817:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "2817:93:10"
														},
														{
															"nativeSrc": "2919:19:10",
															"nodeType": "YulAssignment",
															"src": "2919:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2930:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2930:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2935:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2935:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2926:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:10"
																},
																"nativeSrc": "2926:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2926:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2919:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2919:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2578:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2712:3:10",
														"nodeType": "YulTypedName",
														"src": "2712:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2720:3:10",
														"nodeType": "YulTypedName",
														"src": "2720:3:10",
														"type": ""
													}
												],
												"src": "2578:366:10"
											},
											{
												"body": {
													"nativeSrc": "3121:248:10",
													"nodeType": "YulBlock",
													"src": "3121:248:10",
													"statements": [
														{
															"nativeSrc": "3131:26:10",
															"nodeType": "YulAssignment",
															"src": "3131:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3143:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3143:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3154:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3154:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3139:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3139:3:10"
																},
																"nativeSrc": "3139:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3139:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3131:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3131:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3178:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3178:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3189:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3189:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3174:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3174:3:10"
																		},
																		"nativeSrc": "3174:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3174:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3197:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3197:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3203:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3203:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3193:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3193:3:10"
																		},
																		"nativeSrc": "3193:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3193:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3167:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3167:6:10"
																},
																"nativeSrc": "3167:47:10",
																"nodeType": "YulFunctionCall",
																"src": "3167:47:10"
															},
															"nativeSrc": "3167:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "3167:47:10"
														},
														{
															"nativeSrc": "3223:139:10",
															"nodeType": "YulAssignment",
															"src": "3223:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3357:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3357:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3231:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "3231:124:10"
																},
																"nativeSrc": "3231:131:10",
																"nodeType": "YulFunctionCall",
																"src": "3231:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3223:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3223:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2950:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3101:9:10",
														"nodeType": "YulTypedName",
														"src": "3101:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3116:4:10",
														"nodeType": "YulTypedName",
														"src": "3116:4:10",
														"type": ""
													}
												],
												"src": "2950:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b506040516117e43803806117e483398181016040528101906100319190610331565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100999190610390565b60405180910390fd5b6100b1816101df60201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561012157505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b610160576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015790610403565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050806002819055506001600481905550505050610421565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102cd826102a4565b9050919050565b6102dd816102c3565b81146102e7575f5ffd5b50565b5f815190506102f8816102d4565b92915050565b5f819050919050565b610310816102fe565b811461031a575f5ffd5b50565b5f8151905061032b81610307565b92915050565b5f5f5f60608486031215610348576103476102a0565b5b5f610355868287016102ea565b9350506020610366868287016102ea565b92505060406103778682870161031d565b9150509250925092565b61038a816102c3565b82525050565b5f6020820190506103a35f830184610381565b92915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f6103ed6015836103a9565b91506103f8826103b9565b602082019050919050565b5f6020820190508181035f83015261041a816103e1565b9050919050565b60805160a05161138661045e5f395f818161059f0152818161064a01526107e301525f818161020d01528181610550015261079601526113865ff3fe608060405234801561000f575f5ffd5b50600436106100a7575f3560e01c80638da5cb5b1161006f5780638da5cb5b1461012b57806399fbab88146101495780639c8f9f231461017f578063d21220a71461019b578063f2fde38b146101b9578063fd87f9aa146101d5576100a7565b8063065e5360146100ab5780630dfe1681146100c9578063291df278146100e7578063715018a614610103578063899346c71461010d575b5f5ffd5b6100b3610205565b6040516100c09190610d47565b60405180910390f35b6100d161020b565b6040516100de9190610dda565b60405180910390f35b61010160048036038101906100fc9190610e21565b61022f565b005b61010b610278565b005b61011561028b565b6040516101229190610d47565b60405180910390f35b610133610291565b6040516101409190610e6c565b60405180910390f35b610163600480360381019061015e9190610e21565b6102b8565b6040516101769796959493929190610ea0565b60405180910390f35b61019960048036038101906101949190610e21565b61032f565b005b6101a3610648565b6040516101b09190610dda565b60405180910390f35b6101d360048036038101906101ce9190610f37565b61066c565b005b6101ef60048036038101906101ea9190610f8c565b6106f0565b6040516101fc9190610d47565b60405180910390f35b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6102376109d4565b806002819055507fca2410361df736e1af5d81999e916cec0b435bf16bc69b5a209be194f88bec4d8160405161026d9190610d47565b60405180910390a150565b6102806109d4565b6102895f610a5b565b565b60045481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6003602052805f5260405f205f91509050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460020b908060010160179054906101000a900460020b908060020154908060030154908060040154905087565b610337610b1c565b5f60035f8381526020019081526020015f206040518060e00160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460020b60020b60020b81526020016001820160179054906101000a900460020b60020b60020b8152602001600282015481526020016003820154815260200160048201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161461047e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104759061104a565b60405180910390fd5b5f8160c00151116104c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bb906110b2565b60405180910390fd5b60035f8381526020019081526020015f205f5f82015f9055600182015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160146101000a81549062ffffff02191690556001820160176101000a81549062ffffff0219169055600282015f9055600382015f9055600482015f905550506105943382608001517f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610b6b9092919063ffffffff16565b6105e3338260a001517f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610b6b9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff16827f196a4bf617b45641f176c4e6d288ccf7498f1699f68b1cc1e4daadf92779703b83608001518460a001516040516106349291906110d0565b60405180910390a350610645610bea565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b6106746109d4565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106e4575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106db9190610e6c565b60405180910390fd5b6106ed81610a5b565b50565b5f6106f9610b1c565b8360020b8560020b12610741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073890611141565b60405180910390fd5b5f8311801561074f57505f82115b61078e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610785906111a9565b60405180910390fd5b6107db3330857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610bf3909392919063ffffffff16565b6108283330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610bf3909392919063ffffffff16565b5f6108338484610c75565b905060045f815480929190610847906111f4565b9190505591506040518060e001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018760020b81526020018660020b81526020018581526020018481526020018281525060035f8481526020019081526020015f205f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548162ffffff021916908360020b62ffffff16021790555060608201518160010160176101000a81548162ffffff021916908360020b62ffffff1602179055506080820151816002015560a0820151816003015560c082015181600401559050503373ffffffffffffffffffffffffffffffffffffffff16827f19c7fd3f52ff46f3dab96ff8ac8be59679992761324c4e0907c78cb7a4b8865c88888888876040516109bb95949392919061123b565b60405180910390a3506109cc610bea565b949350505050565b6109dc610c8d565b73ffffffffffffffffffffffffffffffffffffffff166109fa610291565b73ffffffffffffffffffffffffffffffffffffffff1614610a5957610a1d610c8d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a509190610e6c565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403610b61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b58906112d6565b60405180910390fd5b6002600181905550565b610be5838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610b9e9291906112f4565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c94565b505050565b60018081905550565b610c6f848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610c289392919061131b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c94565b50505050565b5f818310610c835781610c85565b825b905092915050565b5f33905090565b5f5f60205f8451602086015f885af180610cb3576040513d5f823e3d81fd5b3d92505f519150505f8214610ccc576001811415610ce7565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610d2957836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610d209190610e6c565b60405180910390fd5b50505050565b5f819050919050565b610d4181610d2f565b82525050565b5f602082019050610d5a5f830184610d38565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610da2610d9d610d9884610d60565b610d7f565b610d60565b9050919050565b5f610db382610d88565b9050919050565b5f610dc482610da9565b9050919050565b610dd481610dba565b82525050565b5f602082019050610ded5f830184610dcb565b92915050565b5f5ffd5b610e0081610d2f565b8114610e0a575f5ffd5b50565b5f81359050610e1b81610df7565b92915050565b5f60208284031215610e3657610e35610df3565b5b5f610e4384828501610e0d565b91505092915050565b5f610e5682610d60565b9050919050565b610e6681610e4c565b82525050565b5f602082019050610e7f5f830184610e5d565b92915050565b5f8160020b9050919050565b610e9a81610e85565b82525050565b5f60e082019050610eb35f83018a610d38565b610ec06020830189610e5d565b610ecd6040830188610e91565b610eda6060830187610e91565b610ee76080830186610d38565b610ef460a0830185610d38565b610f0160c0830184610d38565b98975050505050505050565b610f1681610e4c565b8114610f20575f5ffd5b50565b5f81359050610f3181610f0d565b92915050565b5f60208284031215610f4c57610f4b610df3565b5b5f610f5984828501610f23565b91505092915050565b610f6b81610e85565b8114610f75575f5ffd5b50565b5f81359050610f8681610f62565b92915050565b5f5f5f5f60808587031215610fa457610fa3610df3565b5b5f610fb187828801610f78565b9450506020610fc287828801610f78565b9350506040610fd387828801610e0d565b9250506060610fe487828801610e0d565b91505092959194509250565b5f82825260208201905092915050565b7f4e6f7420706f736974696f6e206f776e657200000000000000000000000000005f82015250565b5f611034601283610ff0565b915061103f82611000565b602082019050919050565b5f6020820190508181035f83015261106181611028565b9050919050565b7f506f736974696f6e20616c72656164792072656d6f76656400000000000000005f82015250565b5f61109c601883610ff0565b91506110a782611068565b602082019050919050565b5f6020820190508181035f8301526110c981611090565b9050919050565b5f6040820190506110e35f830185610d38565b6110f06020830184610d38565b9392505050565b7f496e76616c6964207469636b2072616e676500000000000000000000000000005f82015250565b5f61112b601283610ff0565b9150611136826110f7565b602082019050919050565b5f6020820190508181035f8301526111588161111f565b9050919050565b7f416d6f756e7473206d757374206265203e2030000000000000000000000000005f82015250565b5f611193601383610ff0565b915061119e8261115f565b602082019050919050565b5f6020820190508181035f8301526111c081611187565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111fe82610d2f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112305761122f6111c7565b5b600182019050919050565b5f60a08201905061124e5f830188610e91565b61125b6020830187610e91565b6112686040830186610d38565b6112756060830185610d38565b6112826080830184610d38565b9695505050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6112c0601f83610ff0565b91506112cb8261128c565b602082019050919050565b5f6020820190508181035f8301526112ed816112b4565b9050919050565b5f6040820190506113075f830185610e5d565b6113146020830184610d38565b9392505050565b5f60608201905061132e5f830186610e5d565b61133b6020830185610e5d565b6113486040830184610d38565b94935050505056fea2646970667358221220233403ce7f6fc1abff3174073dd40fad6449221ddba9d611bc6a5f50a6673da964736f6c634300081d0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x17E4 CODESIZE SUB DUP1 PUSH2 0x17E4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x331 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x1DF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x121 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x160 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157 SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x421 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CD DUP3 PUSH2 0x2A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DD DUP2 PUSH2 0x2C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F8 DUP2 PUSH2 0x2D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x310 DUP2 PUSH2 0x2FE JUMP JUMPDEST DUP2 EQ PUSH2 0x31A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x32B DUP2 PUSH2 0x307 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x348 JUMPI PUSH2 0x347 PUSH2 0x2A0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x355 DUP7 DUP3 DUP8 ADD PUSH2 0x2EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x366 DUP7 DUP3 DUP8 ADD PUSH2 0x2EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x377 DUP7 DUP3 DUP8 ADD PUSH2 0x31D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x38A DUP2 PUSH2 0x2C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A3 PUSH0 DUP4 ADD DUP5 PUSH2 0x381 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3ED PUSH1 0x15 DUP4 PUSH2 0x3A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F8 DUP3 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x41A DUP2 PUSH2 0x3E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1386 PUSH2 0x45E PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x59F ADD MSTORE DUP2 DUP2 PUSH2 0x64A ADD MSTORE PUSH2 0x7E3 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x20D ADD MSTORE DUP2 DUP2 PUSH2 0x550 ADD MSTORE PUSH2 0x796 ADD MSTORE PUSH2 0x1386 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x99FBAB88 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xFD87F9AA EQ PUSH2 0x1D5 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x65E5360 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x291DF278 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x899346C7 EQ PUSH2 0x10D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10B PUSH2 0x278 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x115 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x66C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0xF8C JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x9D4 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0xCA2410361DF736E1AF5D81999E916CEC0B435BF16BC69B5A209BE194F88BEC4D DUP2 PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x280 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x289 PUSH0 PUSH2 0xA5B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH2 0x337 PUSH2 0xB1C JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0xC0 ADD MLOAD GT PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BB SWAP1 PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH3 0xFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH3 0xFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP PUSH2 0x594 CALLER DUP3 PUSH1 0x80 ADD MLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB6B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5E3 CALLER DUP3 PUSH1 0xA0 ADD MLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB6B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x196A4BF617B45641F176C4E6D288CCF7498F1699F68B1CC1E4DAADF92779703B DUP4 PUSH1 0x80 ADD MLOAD DUP5 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x634 SWAP3 SWAP2 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x645 PUSH2 0xBEA JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x674 PUSH2 0x9D4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DB SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6ED DUP2 PUSH2 0xA5B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x6F9 PUSH2 0xB1C JUMP JUMPDEST DUP4 PUSH1 0x2 SIGNEXTEND DUP6 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x741 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x738 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x74F JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x78E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x785 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DB CALLER ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBF3 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x828 CALLER ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBF3 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH2 0x833 DUP5 DUP5 PUSH2 0xC75 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x847 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x19C7FD3F52FF46F3DAB96FF8AC8BE59679992761324C4E0907C78CB7A4B8865C DUP9 DUP9 DUP9 DUP9 DUP8 PUSH1 0x40 MLOAD PUSH2 0x9BB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x9CC PUSH2 0xBEA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x9DC PUSH2 0xC8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9FA PUSH2 0x291 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA59 JUMPI PUSH2 0xA1D PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xB61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB58 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xBE5 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB9E SWAP3 SWAP2 SWAP1 PUSH2 0x12F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC94 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xC6F DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC28 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x131B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC94 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0xC83 JUMPI DUP2 PUSH2 0xC85 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xCB3 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xCCC JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xCE7 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xD29 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD20 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD5A PUSH0 DUP4 ADD DUP5 PUSH2 0xD38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDA2 PUSH2 0xD9D PUSH2 0xD98 DUP5 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0xD7F JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDB3 DUP3 PUSH2 0xD88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC4 DUP3 PUSH2 0xDA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD4 DUP2 PUSH2 0xDBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDED PUSH0 DUP4 ADD DUP5 PUSH2 0xDCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xE00 DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP2 EQ PUSH2 0xE0A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE1B DUP2 PUSH2 0xDF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE35 PUSH2 0xDF3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE43 DUP5 DUP3 DUP6 ADD PUSH2 0xE0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE56 DUP3 PUSH2 0xD60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE66 DUP2 PUSH2 0xE4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE7F PUSH0 DUP4 ADD DUP5 PUSH2 0xE5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE9A DUP2 PUSH2 0xE85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0xEB3 PUSH0 DUP4 ADD DUP11 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0xEC0 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0xECD PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xEDA PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xEE7 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0xEF4 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0xF01 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xD38 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF16 DUP2 PUSH2 0xE4C JUMP JUMPDEST DUP2 EQ PUSH2 0xF20 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF31 DUP2 PUSH2 0xF0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF4C JUMPI PUSH2 0xF4B PUSH2 0xDF3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF59 DUP5 DUP3 DUP6 ADD PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF6B DUP2 PUSH2 0xE85 JUMP JUMPDEST DUP2 EQ PUSH2 0xF75 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF86 DUP2 PUSH2 0xF62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFA4 JUMPI PUSH2 0xFA3 PUSH2 0xDF3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFB1 DUP8 DUP3 DUP9 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xFC2 DUP8 DUP3 DUP9 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xFD3 DUP8 DUP3 DUP9 ADD PUSH2 0xE0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xFE4 DUP8 DUP3 DUP9 ADD PUSH2 0xE0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420706F736974696F6E206F776E65720000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1034 PUSH1 0x12 DUP4 PUSH2 0xFF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x103F DUP3 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1061 DUP2 PUSH2 0x1028 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506F736974696F6E20616C72656164792072656D6F7665640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x109C PUSH1 0x18 DUP4 PUSH2 0xFF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A7 DUP3 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10C9 DUP2 PUSH2 0x1090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10E3 PUSH0 DUP4 ADD DUP6 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0x10F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD38 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207469636B2072616E67650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x112B PUSH1 0x12 DUP4 PUSH2 0xFF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1136 DUP3 PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1158 DUP2 PUSH2 0x111F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E7473206D757374206265203E203000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1193 PUSH1 0x13 DUP4 PUSH2 0xFF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x119E DUP3 PUSH2 0x115F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11C0 DUP2 PUSH2 0x1187 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11FE DUP3 PUSH2 0xD2F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1230 JUMPI PUSH2 0x122F PUSH2 0x11C7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x124E PUSH0 DUP4 ADD DUP9 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x125B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x1268 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0x1275 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0x1282 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xD38 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12C0 PUSH1 0x1F DUP4 PUSH2 0xFF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x12CB DUP3 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12ED DUP2 PUSH2 0x12B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1307 PUSH0 DUP4 ADD DUP6 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x1314 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD38 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x132E PUSH0 DUP4 ADD DUP7 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x133B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x1348 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD38 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 CALLVALUE SUB 0xCE PUSH32 0x6FC1ABFF3174073DD40FAD6449221DDBA9D611BC6A5F50A6673DA964736F6C63 NUMBER STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "601:4576:9:-:0;;;1947:376;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2031:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;2131:1:9::1;2112:21;;:7;:21;;;;:46;;;;;2156:1;2137:21;;:7;:21;;;;2112:46;2104:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2210:7;2194:24;;;;;;;;::::0;::::1;2244:7;2228:24;;;;;;;;::::0;::::1;2276:12;2262:11;:26;;;;2315:1;2298:14;:18;;;;1947:376:::0;;;601:4576;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:118::-;1961:24;1979:5;1961:24;:::i;:::-;1956:3;1949:37;1874:118;;:::o;1998:222::-;2091:4;2129:2;2118:9;2114:18;2106:26;;2142:71;2210:1;2199:9;2195:17;2186:6;2142:71;:::i;:::-;1998:222;;;;:::o;2226:169::-;2310:11;2344:6;2339:3;2332:19;2384:4;2379:3;2375:14;2360:29;;2226:169;;;;:::o;2401:171::-;2541:23;2537:1;2529:6;2525:14;2518:47;2401:171;:::o;2578:366::-;2720:3;2741:67;2805:2;2800:3;2741:67;:::i;:::-;2734:74;;2817:93;2906:3;2817:93;:::i;:::-;2935:2;2930:3;2926:12;2919:19;;2578:366;;;:::o;2950:419::-;3116:4;3154:2;3143:9;3139:18;3131:26;;3203:9;3197:4;3193:20;3189:1;3178:9;3174:17;3167:47;3231:131;3357:4;3231:131;:::i;:::-;3223:139;;2950:419;;;:::o;601:4576:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateLiquidity_976": {
									"entryPoint": 3189,
									"id": 976,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_callOptionalReturn_747": {
									"entryPoint": 3220,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2516,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_801": {
									"entryPoint": 3213,
									"id": 801,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 3050,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 2844,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2651,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addLiquidity_1073": {
									"entryPoint": 1776,
									"id": 1073,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@currentTick_854": {
									"entryPoint": 517,
									"id": 854,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nextPositionId_876": {
									"entryPoint": 651,
									"id": 876,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 657,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@positions_874": {
									"entryPoint": 696,
									"id": 874,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeLiquidity_1139": {
									"entryPoint": 815,
									"id": 1139,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 632,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_452": {
									"entryPoint": 3059,
									"id": 452,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 2923,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@token0_849": {
									"entryPoint": 523,
									"id": 849,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_852": {
									"entryPoint": 1608,
									"id": 852,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1644,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateCurrentTick_1156": {
									"entryPoint": 559,
									"id": 1156,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24": {
									"entryPoint": 3960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int24t_int24t_uint256t_uint256": {
									"entryPoint": 3980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack": {
									"entryPoint": 3531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int24_to_t_int24_fromStack": {
									"entryPoint": 3729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_5fb447cb8a73099b715c4ab92ff6f271e9605295d15c8841bc0b730a60ec7abf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_afa3981e1a0c56edb4debd947302e8fcdc7b068aa2aa8d78a386d11182ad9c1d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c362a44df75753905b6b47e5d73e6167c82251760df47c64d9e543e834ba0c90_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4891,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4852,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": 3546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int24_t_int24_t_uint256_t_uint256_t_uint256__to_t_int24_t_int24_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4667,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5fb447cb8a73099b715c4ab92ff6f271e9605295d15c8841bc0b730a60ec7abf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_afa3981e1a0c56edb4debd947302e8fcdc7b068aa2aa8d78a386d11182ad9c1d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c362a44df75753905b6b47e5d73e6167c82251760df47c64d9e543e834ba0c90__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_int24_t_int24_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_int24_t_int24_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3744,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4304,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 3717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$380_to_t_address": {
									"entryPoint": 3514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4551,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3571,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_5fb447cb8a73099b715c4ab92ff6f271e9605295d15c8841bc0b730a60ec7abf": {
									"entryPoint": 4343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0": {
									"entryPoint": 4447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_afa3981e1a0c56edb4debd947302e8fcdc7b068aa2aa8d78a386d11182ad9c1d": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c362a44df75753905b6b47e5d73e6167c82251760df47c64d9e543e834ba0c90": {
									"entryPoint": 4200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 3938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12852:10",
										"nodeType": "YulBlock",
										"src": "0:12852:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:10",
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nativeSrc": "62:16:10",
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:10",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nativeSrc": "155:53:10",
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nativeSrc": "177:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nativeSrc": "165:37:10",
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nativeSrc": "165:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:10",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:10",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nativeSrc": "312:124:10",
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nativeSrc": "322:26:10",
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:10",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nativeSrc": "330:18:10",
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:10",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nativeSrc": "411:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nativeSrc": "358:71:10",
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nativeSrc": "358:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:10",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:10",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:10",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nativeSrc": "487:81:10",
													"nodeType": "YulBlock",
													"src": "487:81:10",
													"statements": [
														{
															"nativeSrc": "497:65:10",
															"nodeType": "YulAssignment",
															"src": "497:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "512:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "519:42:10",
																		"nodeType": "YulLiteral",
																		"src": "519:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "508:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:10"
																},
																"nativeSrc": "508:54:10",
																"nodeType": "YulFunctionCall",
																"src": "508:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "497:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "442:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "469:5:10",
														"nodeType": "YulTypedName",
														"src": "469:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "479:7:10",
														"nodeType": "YulTypedName",
														"src": "479:7:10",
														"type": ""
													}
												],
												"src": "442:126:10"
											},
											{
												"body": {
													"nativeSrc": "606:28:10",
													"nodeType": "YulBlock",
													"src": "606:28:10",
													"statements": [
														{
															"nativeSrc": "616:12:10",
															"nodeType": "YulAssignment",
															"src": "616:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "623:5:10",
																"nodeType": "YulIdentifier",
																"src": "623:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "616:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "574:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "592:5:10",
														"nodeType": "YulTypedName",
														"src": "592:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "602:3:10",
														"nodeType": "YulTypedName",
														"src": "602:3:10",
														"type": ""
													}
												],
												"src": "574:60:10"
											},
											{
												"body": {
													"nativeSrc": "700:82:10",
													"nodeType": "YulBlock",
													"src": "700:82:10",
													"statements": [
														{
															"nativeSrc": "710:66:10",
															"nodeType": "YulAssignment",
															"src": "710:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "768:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "768:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "750:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "750:17:10"
																				},
																				"nativeSrc": "750:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "750:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "741:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "741:8:10"
																		},
																		"nativeSrc": "741:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "741:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "723:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "723:17:10"
																},
																"nativeSrc": "723:53:10",
																"nodeType": "YulFunctionCall",
																"src": "723:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "710:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "710:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "640:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "680:5:10",
														"nodeType": "YulTypedName",
														"src": "680:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "690:9:10",
														"nodeType": "YulTypedName",
														"src": "690:9:10",
														"type": ""
													}
												],
												"src": "640:142:10"
											},
											{
												"body": {
													"nativeSrc": "848:66:10",
													"nodeType": "YulBlock",
													"src": "848:66:10",
													"statements": [
														{
															"nativeSrc": "858:50:10",
															"nodeType": "YulAssignment",
															"src": "858:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "902:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "902:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "871:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "871:30:10"
																},
																"nativeSrc": "871:37:10",
																"nodeType": "YulFunctionCall",
																"src": "871:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "858:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "858:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "788:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "828:5:10",
														"nodeType": "YulTypedName",
														"src": "828:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "838:9:10",
														"nodeType": "YulTypedName",
														"src": "838:9:10",
														"type": ""
													}
												],
												"src": "788:126:10"
											},
											{
												"body": {
													"nativeSrc": "994:66:10",
													"nodeType": "YulBlock",
													"src": "994:66:10",
													"statements": [
														{
															"nativeSrc": "1004:50:10",
															"nodeType": "YulAssignment",
															"src": "1004:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1048:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1048:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1017:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "1017:30:10"
																},
																"nativeSrc": "1017:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1017:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1004:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1004:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$380_to_t_address",
												"nativeSrc": "920:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "974:5:10",
														"nodeType": "YulTypedName",
														"src": "974:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "984:9:10",
														"nodeType": "YulTypedName",
														"src": "984:9:10",
														"type": ""
													}
												],
												"src": "920:140:10"
											},
											{
												"body": {
													"nativeSrc": "1145:80:10",
													"nodeType": "YulBlock",
													"src": "1145:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1162:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1162:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1212:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1212:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$380_to_t_address",
																			"nativeSrc": "1167:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "1167:44:10"
																		},
																		"nativeSrc": "1167:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1167:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1155:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1155:6:10"
																},
																"nativeSrc": "1155:64:10",
																"nodeType": "YulFunctionCall",
																"src": "1155:64:10"
															},
															"nativeSrc": "1155:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "1155:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
												"nativeSrc": "1066:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1133:5:10",
														"nodeType": "YulTypedName",
														"src": "1133:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1140:3:10",
														"nodeType": "YulTypedName",
														"src": "1140:3:10",
														"type": ""
													}
												],
												"src": "1066:159:10"
											},
											{
												"body": {
													"nativeSrc": "1343:138:10",
													"nodeType": "YulBlock",
													"src": "1343:138:10",
													"statements": [
														{
															"nativeSrc": "1353:26:10",
															"nodeType": "YulAssignment",
															"src": "1353:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1365:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1365:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1376:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1376:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1361:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1361:3:10"
																},
																"nativeSrc": "1361:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1361:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1353:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1353:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1447:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1447:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1460:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1460:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1471:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1471:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1456:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:10"
																		},
																		"nativeSrc": "1456:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1456:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
																	"nativeSrc": "1389:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "1389:57:10"
																},
																"nativeSrc": "1389:85:10",
																"nodeType": "YulFunctionCall",
																"src": "1389:85:10"
															},
															"nativeSrc": "1389:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "1389:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nativeSrc": "1231:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1315:9:10",
														"nodeType": "YulTypedName",
														"src": "1315:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1327:6:10",
														"nodeType": "YulTypedName",
														"src": "1327:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1338:4:10",
														"nodeType": "YulTypedName",
														"src": "1338:4:10",
														"type": ""
													}
												],
												"src": "1231:250:10"
											},
											{
												"body": {
													"nativeSrc": "1527:35:10",
													"nodeType": "YulBlock",
													"src": "1527:35:10",
													"statements": [
														{
															"nativeSrc": "1537:19:10",
															"nodeType": "YulAssignment",
															"src": "1537:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1553:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1553:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1547:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1547:5:10"
																},
																"nativeSrc": "1547:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1547:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1537:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1487:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1520:6:10",
														"nodeType": "YulTypedName",
														"src": "1520:6:10",
														"type": ""
													}
												],
												"src": "1487:75:10"
											},
											{
												"body": {
													"nativeSrc": "1657:28:10",
													"nodeType": "YulBlock",
													"src": "1657:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1674:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1674:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1677:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1677:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1667:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:10"
																},
																"nativeSrc": "1667:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1667:12:10"
															},
															"nativeSrc": "1667:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1667:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1568:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1568:117:10"
											},
											{
												"body": {
													"nativeSrc": "1780:28:10",
													"nodeType": "YulBlock",
													"src": "1780:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1797:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1797:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1800:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1790:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:10"
																},
																"nativeSrc": "1790:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1790:12:10"
															},
															"nativeSrc": "1790:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1790:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1691:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1691:117:10"
											},
											{
												"body": {
													"nativeSrc": "1857:79:10",
													"nodeType": "YulBlock",
													"src": "1857:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1914:16:10",
																"nodeType": "YulBlock",
																"src": "1914:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1923:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1923:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1926:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1926:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1916:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1916:6:10"
																			},
																			"nativeSrc": "1916:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1916:12:10"
																		},
																		"nativeSrc": "1916:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1916:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1880:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1880:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1905:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1905:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1887:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1887:17:10"
																				},
																				"nativeSrc": "1887:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1887:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1877:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1877:2:10"
																		},
																		"nativeSrc": "1877:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1877:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1870:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1870:6:10"
																},
																"nativeSrc": "1870:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1870:43:10"
															},
															"nativeSrc": "1867:63:10",
															"nodeType": "YulIf",
															"src": "1867:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1814:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1850:5:10",
														"nodeType": "YulTypedName",
														"src": "1850:5:10",
														"type": ""
													}
												],
												"src": "1814:122:10"
											},
											{
												"body": {
													"nativeSrc": "1994:87:10",
													"nodeType": "YulBlock",
													"src": "1994:87:10",
													"statements": [
														{
															"nativeSrc": "2004:29:10",
															"nodeType": "YulAssignment",
															"src": "2004:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2026:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2026:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2013:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2013:12:10"
																},
																"nativeSrc": "2013:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2013:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2004:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2004:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2069:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2069:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2042:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2042:26:10"
																},
																"nativeSrc": "2042:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2042:33:10"
															},
															"nativeSrc": "2042:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2042:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1942:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1972:6:10",
														"nodeType": "YulTypedName",
														"src": "1972:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1980:3:10",
														"nodeType": "YulTypedName",
														"src": "1980:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1988:5:10",
														"nodeType": "YulTypedName",
														"src": "1988:5:10",
														"type": ""
													}
												],
												"src": "1942:139:10"
											},
											{
												"body": {
													"nativeSrc": "2153:263:10",
													"nodeType": "YulBlock",
													"src": "2153:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2199:83:10",
																"nodeType": "YulBlock",
																"src": "2199:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2201:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2201:77:10"
																			},
																			"nativeSrc": "2201:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2201:79:10"
																		},
																		"nativeSrc": "2201:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2174:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2174:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2183:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2183:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2170:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2170:3:10"
																		},
																		"nativeSrc": "2170:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2170:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2195:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2195:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2166:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2166:3:10"
																},
																"nativeSrc": "2166:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2166:32:10"
															},
															"nativeSrc": "2163:119:10",
															"nodeType": "YulIf",
															"src": "2163:119:10"
														},
														{
															"nativeSrc": "2292:117:10",
															"nodeType": "YulBlock",
															"src": "2292:117:10",
															"statements": [
																{
																	"nativeSrc": "2307:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2307:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2321:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2321:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2311:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2311:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2336:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2336:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2371:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2371:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2382:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2382:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2367:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2367:3:10"
																				},
																				"nativeSrc": "2367:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2367:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2391:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2391:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2346:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2346:20:10"
																		},
																		"nativeSrc": "2346:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2346:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2336:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2336:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2087:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2123:9:10",
														"nodeType": "YulTypedName",
														"src": "2123:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2134:7:10",
														"nodeType": "YulTypedName",
														"src": "2134:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2146:6:10",
														"nodeType": "YulTypedName",
														"src": "2146:6:10",
														"type": ""
													}
												],
												"src": "2087:329:10"
											},
											{
												"body": {
													"nativeSrc": "2467:51:10",
													"nodeType": "YulBlock",
													"src": "2467:51:10",
													"statements": [
														{
															"nativeSrc": "2477:35:10",
															"nodeType": "YulAssignment",
															"src": "2477:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2506:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2506:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2488:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2488:17:10"
																},
																"nativeSrc": "2488:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2488:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2477:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2477:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2422:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2449:5:10",
														"nodeType": "YulTypedName",
														"src": "2449:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2459:7:10",
														"nodeType": "YulTypedName",
														"src": "2459:7:10",
														"type": ""
													}
												],
												"src": "2422:96:10"
											},
											{
												"body": {
													"nativeSrc": "2589:53:10",
													"nodeType": "YulBlock",
													"src": "2589:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2606:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2606:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2629:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2629:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2611:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2611:17:10"
																		},
																		"nativeSrc": "2611:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2611:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2599:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:10"
																},
																"nativeSrc": "2599:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2599:37:10"
															},
															"nativeSrc": "2599:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2599:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2524:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2577:5:10",
														"nodeType": "YulTypedName",
														"src": "2577:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2584:3:10",
														"nodeType": "YulTypedName",
														"src": "2584:3:10",
														"type": ""
													}
												],
												"src": "2524:118:10"
											},
											{
												"body": {
													"nativeSrc": "2746:124:10",
													"nodeType": "YulBlock",
													"src": "2746:124:10",
													"statements": [
														{
															"nativeSrc": "2756:26:10",
															"nodeType": "YulAssignment",
															"src": "2756:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2768:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2779:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2764:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2764:3:10"
																},
																"nativeSrc": "2764:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2764:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2756:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2756:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2836:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2836:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2849:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2849:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2860:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2860:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2845:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2845:3:10"
																		},
																		"nativeSrc": "2845:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2845:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2792:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2792:43:10"
																},
																"nativeSrc": "2792:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2792:71:10"
															},
															"nativeSrc": "2792:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2792:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2648:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2718:9:10",
														"nodeType": "YulTypedName",
														"src": "2718:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2730:6:10",
														"nodeType": "YulTypedName",
														"src": "2730:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2741:4:10",
														"nodeType": "YulTypedName",
														"src": "2741:4:10",
														"type": ""
													}
												],
												"src": "2648:222:10"
											},
											{
												"body": {
													"nativeSrc": "2919:47:10",
													"nodeType": "YulBlock",
													"src": "2919:47:10",
													"statements": [
														{
															"nativeSrc": "2929:31:10",
															"nodeType": "YulAssignment",
															"src": "2929:31:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2951:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2951:1:10",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2954:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2954:5:10"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "2940:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "2940:10:10"
																},
																"nativeSrc": "2940:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2940:20:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2929:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2929:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "2876:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2901:5:10",
														"nodeType": "YulTypedName",
														"src": "2901:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2911:7:10",
														"nodeType": "YulTypedName",
														"src": "2911:7:10",
														"type": ""
													}
												],
												"src": "2876:90:10"
											},
											{
												"body": {
													"nativeSrc": "3033:51:10",
													"nodeType": "YulBlock",
													"src": "3033:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3050:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3050:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3071:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3071:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int24",
																			"nativeSrc": "3055:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "3055:15:10"
																		},
																		"nativeSrc": "3055:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3055:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3043:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:10"
																},
																"nativeSrc": "3043:35:10",
																"nodeType": "YulFunctionCall",
																"src": "3043:35:10"
															},
															"nativeSrc": "3043:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "3043:35:10"
														}
													]
												},
												"name": "abi_encode_t_int24_to_t_int24_fromStack",
												"nativeSrc": "2972:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3021:5:10",
														"nodeType": "YulTypedName",
														"src": "3021:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3028:3:10",
														"nodeType": "YulTypedName",
														"src": "3028:3:10",
														"type": ""
													}
												],
												"src": "2972:112:10"
											},
											{
												"body": {
													"nativeSrc": "3348:612:10",
													"nodeType": "YulBlock",
													"src": "3348:612:10",
													"statements": [
														{
															"nativeSrc": "3358:27:10",
															"nodeType": "YulAssignment",
															"src": "3358:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3370:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3370:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3381:3:10",
																		"nodeType": "YulLiteral",
																		"src": "3381:3:10",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3366:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3366:3:10"
																},
																"nativeSrc": "3366:19:10",
																"nodeType": "YulFunctionCall",
																"src": "3366:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3358:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3358:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3439:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3439:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3452:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3452:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3463:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3463:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3448:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3448:3:10"
																		},
																		"nativeSrc": "3448:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3448:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3395:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3395:43:10"
																},
																"nativeSrc": "3395:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3395:71:10"
															},
															"nativeSrc": "3395:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3395:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3520:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3520:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3533:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3533:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3544:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3544:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3529:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:10"
																		},
																		"nativeSrc": "3529:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3529:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3476:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3476:43:10"
																},
																"nativeSrc": "3476:72:10",
																"nodeType": "YulFunctionCall",
																"src": "3476:72:10"
															},
															"nativeSrc": "3476:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "3476:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3598:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3598:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3611:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3611:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3622:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3622:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3607:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3607:3:10"
																		},
																		"nativeSrc": "3607:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3607:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_fromStack",
																	"nativeSrc": "3558:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "3558:39:10"
																},
																"nativeSrc": "3558:68:10",
																"nodeType": "YulFunctionCall",
																"src": "3558:68:10"
															},
															"nativeSrc": "3558:68:10",
															"nodeType": "YulExpressionStatement",
															"src": "3558:68:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "3676:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3676:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3689:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3689:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3700:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3700:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3685:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3685:3:10"
																		},
																		"nativeSrc": "3685:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3685:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_fromStack",
																	"nativeSrc": "3636:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "3636:39:10"
																},
																"nativeSrc": "3636:68:10",
																"nodeType": "YulFunctionCall",
																"src": "3636:68:10"
															},
															"nativeSrc": "3636:68:10",
															"nodeType": "YulExpressionStatement",
															"src": "3636:68:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "3758:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:3:10",
																				"nodeType": "YulLiteral",
																				"src": "3782:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:10"
																		},
																		"nativeSrc": "3767:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:10"
																},
																"nativeSrc": "3714:73:10",
																"nodeType": "YulFunctionCall",
																"src": "3714:73:10"
															},
															"nativeSrc": "3714:73:10",
															"nodeType": "YulExpressionStatement",
															"src": "3714:73:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "3841:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3841:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3854:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3854:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3865:3:10",
																				"nodeType": "YulLiteral",
																				"src": "3865:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3850:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3850:3:10"
																		},
																		"nativeSrc": "3850:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3850:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3797:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3797:43:10"
																},
																"nativeSrc": "3797:73:10",
																"nodeType": "YulFunctionCall",
																"src": "3797:73:10"
															},
															"nativeSrc": "3797:73:10",
															"nodeType": "YulExpressionStatement",
															"src": "3797:73:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "3924:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3924:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3937:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3937:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3948:3:10",
																				"nodeType": "YulLiteral",
																				"src": "3948:3:10",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3933:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3933:3:10"
																		},
																		"nativeSrc": "3933:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3933:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3880:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3880:43:10"
																},
																"nativeSrc": "3880:73:10",
																"nodeType": "YulFunctionCall",
																"src": "3880:73:10"
															},
															"nativeSrc": "3880:73:10",
															"nodeType": "YulExpressionStatement",
															"src": "3880:73:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_int24_t_int24_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_int24_t_int24_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3090:870:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3272:9:10",
														"nodeType": "YulTypedName",
														"src": "3272:9:10",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3284:6:10",
														"nodeType": "YulTypedName",
														"src": "3284:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3292:6:10",
														"nodeType": "YulTypedName",
														"src": "3292:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3300:6:10",
														"nodeType": "YulTypedName",
														"src": "3300:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3308:6:10",
														"nodeType": "YulTypedName",
														"src": "3308:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3316:6:10",
														"nodeType": "YulTypedName",
														"src": "3316:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3324:6:10",
														"nodeType": "YulTypedName",
														"src": "3324:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3332:6:10",
														"nodeType": "YulTypedName",
														"src": "3332:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3343:4:10",
														"nodeType": "YulTypedName",
														"src": "3343:4:10",
														"type": ""
													}
												],
												"src": "3090:870:10"
											},
											{
												"body": {
													"nativeSrc": "4009:79:10",
													"nodeType": "YulBlock",
													"src": "4009:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4066:16:10",
																"nodeType": "YulBlock",
																"src": "4066:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4075:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4075:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4078:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4078:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4068:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4068:6:10"
																			},
																			"nativeSrc": "4068:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4068:12:10"
																		},
																		"nativeSrc": "4068:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4068:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4032:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4032:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4057:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4057:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4039:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "4039:17:10"
																				},
																				"nativeSrc": "4039:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4039:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4029:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4029:2:10"
																		},
																		"nativeSrc": "4029:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4029:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4022:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4022:6:10"
																},
																"nativeSrc": "4022:43:10",
																"nodeType": "YulFunctionCall",
																"src": "4022:43:10"
															},
															"nativeSrc": "4019:63:10",
															"nodeType": "YulIf",
															"src": "4019:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3966:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4002:5:10",
														"nodeType": "YulTypedName",
														"src": "4002:5:10",
														"type": ""
													}
												],
												"src": "3966:122:10"
											},
											{
												"body": {
													"nativeSrc": "4146:87:10",
													"nodeType": "YulBlock",
													"src": "4146:87:10",
													"statements": [
														{
															"nativeSrc": "4156:29:10",
															"nodeType": "YulAssignment",
															"src": "4156:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4178:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4178:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4165:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4165:12:10"
																},
																"nativeSrc": "4165:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4165:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4156:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4156:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4221:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4221:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4194:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "4194:26:10"
																},
																"nativeSrc": "4194:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4194:33:10"
															},
															"nativeSrc": "4194:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4194:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4094:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4124:6:10",
														"nodeType": "YulTypedName",
														"src": "4124:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4132:3:10",
														"nodeType": "YulTypedName",
														"src": "4132:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4140:5:10",
														"nodeType": "YulTypedName",
														"src": "4140:5:10",
														"type": ""
													}
												],
												"src": "4094:139:10"
											},
											{
												"body": {
													"nativeSrc": "4305:263:10",
													"nodeType": "YulBlock",
													"src": "4305:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4351:83:10",
																"nodeType": "YulBlock",
																"src": "4351:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4353:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4353:77:10"
																			},
																			"nativeSrc": "4353:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4353:79:10"
																		},
																		"nativeSrc": "4353:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4353:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4326:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4326:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4335:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4335:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4322:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4322:3:10"
																		},
																		"nativeSrc": "4322:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4322:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4347:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4347:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4318:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4318:3:10"
																},
																"nativeSrc": "4318:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4318:32:10"
															},
															"nativeSrc": "4315:119:10",
															"nodeType": "YulIf",
															"src": "4315:119:10"
														},
														{
															"nativeSrc": "4444:117:10",
															"nodeType": "YulBlock",
															"src": "4444:117:10",
															"statements": [
																{
																	"nativeSrc": "4459:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4459:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4473:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4463:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4463:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4488:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4488:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4523:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4523:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4534:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4534:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4519:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4519:3:10"
																				},
																				"nativeSrc": "4519:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4519:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4543:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4543:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4498:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4498:20:10"
																		},
																		"nativeSrc": "4498:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4498:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4488:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4488:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4239:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4275:9:10",
														"nodeType": "YulTypedName",
														"src": "4275:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4286:7:10",
														"nodeType": "YulTypedName",
														"src": "4286:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4298:6:10",
														"nodeType": "YulTypedName",
														"src": "4298:6:10",
														"type": ""
													}
												],
												"src": "4239:329:10"
											},
											{
												"body": {
													"nativeSrc": "4615:77:10",
													"nodeType": "YulBlock",
													"src": "4615:77:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4670:16:10",
																"nodeType": "YulBlock",
																"src": "4670:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4679:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4679:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4682:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4682:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4672:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4672:6:10"
																			},
																			"nativeSrc": "4672:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4672:12:10"
																		},
																		"nativeSrc": "4672:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4672:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4638:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4638:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4661:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4661:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "4645:15:10",
																					"nodeType": "YulIdentifier",
																					"src": "4645:15:10"
																				},
																				"nativeSrc": "4645:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4645:22:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4635:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4635:2:10"
																		},
																		"nativeSrc": "4635:33:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4635:33:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4628:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4628:6:10"
																},
																"nativeSrc": "4628:41:10",
																"nodeType": "YulFunctionCall",
																"src": "4628:41:10"
															},
															"nativeSrc": "4625:61:10",
															"nodeType": "YulIf",
															"src": "4625:61:10"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "4574:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4608:5:10",
														"nodeType": "YulTypedName",
														"src": "4608:5:10",
														"type": ""
													}
												],
												"src": "4574:118:10"
											},
											{
												"body": {
													"nativeSrc": "4748:85:10",
													"nodeType": "YulBlock",
													"src": "4748:85:10",
													"statements": [
														{
															"nativeSrc": "4758:29:10",
															"nodeType": "YulAssignment",
															"src": "4758:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4780:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4780:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4767:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4767:12:10"
																},
																"nativeSrc": "4767:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4767:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4758:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4758:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4821:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4821:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "4796:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "4796:24:10"
																},
																"nativeSrc": "4796:31:10",
																"nodeType": "YulFunctionCall",
																"src": "4796:31:10"
															},
															"nativeSrc": "4796:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "4796:31:10"
														}
													]
												},
												"name": "abi_decode_t_int24",
												"nativeSrc": "4698:135:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4726:6:10",
														"nodeType": "YulTypedName",
														"src": "4726:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4734:3:10",
														"nodeType": "YulTypedName",
														"src": "4734:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4742:5:10",
														"nodeType": "YulTypedName",
														"src": "4742:5:10",
														"type": ""
													}
												],
												"src": "4698:135:10"
											},
											{
												"body": {
													"nativeSrc": "4952:644:10",
													"nodeType": "YulBlock",
													"src": "4952:644:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4999:83:10",
																"nodeType": "YulBlock",
																"src": "4999:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5001:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5001:77:10"
																			},
																			"nativeSrc": "5001:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5001:79:10"
																		},
																		"nativeSrc": "5001:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5001:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4973:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4973:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4982:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4982:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4969:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4969:3:10"
																		},
																		"nativeSrc": "4969:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4969:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4994:3:10",
																		"nodeType": "YulLiteral",
																		"src": "4994:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4965:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4965:3:10"
																},
																"nativeSrc": "4965:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4965:33:10"
															},
															"nativeSrc": "4962:120:10",
															"nodeType": "YulIf",
															"src": "4962:120:10"
														},
														{
															"nativeSrc": "5092:115:10",
															"nodeType": "YulBlock",
															"src": "5092:115:10",
															"statements": [
																{
																	"nativeSrc": "5107:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5107:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5121:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5121:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5111:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5111:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5136:61:10",
																	"nodeType": "YulAssignment",
																	"src": "5136:61:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5169:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5169:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5180:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5180:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5165:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5165:3:10"
																				},
																				"nativeSrc": "5165:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5165:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5189:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5189:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24",
																			"nativeSrc": "5146:18:10",
																			"nodeType": "YulIdentifier",
																			"src": "5146:18:10"
																		},
																		"nativeSrc": "5146:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5146:51:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5136:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5136:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5217:116:10",
															"nodeType": "YulBlock",
															"src": "5217:116:10",
															"statements": [
																{
																	"nativeSrc": "5232:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5232:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5246:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5246:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5236:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5236:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5262:61:10",
																	"nodeType": "YulAssignment",
																	"src": "5262:61:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5295:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5295:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5306:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5306:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5291:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5291:3:10"
																				},
																				"nativeSrc": "5291:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5291:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5315:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5315:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24",
																			"nativeSrc": "5272:18:10",
																			"nodeType": "YulIdentifier",
																			"src": "5272:18:10"
																		},
																		"nativeSrc": "5272:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5272:51:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5262:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5262:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5343:118:10",
															"nodeType": "YulBlock",
															"src": "5343:118:10",
															"statements": [
																{
																	"nativeSrc": "5358:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5358:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5372:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5372:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5362:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5362:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5388:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5388:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5423:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5423:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5434:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5434:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5419:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5419:3:10"
																				},
																				"nativeSrc": "5419:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5419:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5443:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5443:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5398:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5398:20:10"
																		},
																		"nativeSrc": "5398:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5398:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5388:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5388:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5471:118:10",
															"nodeType": "YulBlock",
															"src": "5471:118:10",
															"statements": [
																{
																	"nativeSrc": "5486:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5486:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5500:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5500:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5490:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5490:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5516:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5516:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5551:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5551:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5562:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5562:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5547:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5547:3:10"
																				},
																				"nativeSrc": "5547:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5547:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5571:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5571:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5526:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5526:20:10"
																		},
																		"nativeSrc": "5526:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "5516:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5516:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int24t_int24t_uint256t_uint256",
												"nativeSrc": "4839:757:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4898:9:10",
														"nodeType": "YulTypedName",
														"src": "4898:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4909:7:10",
														"nodeType": "YulTypedName",
														"src": "4909:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4921:6:10",
														"nodeType": "YulTypedName",
														"src": "4921:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4929:6:10",
														"nodeType": "YulTypedName",
														"src": "4929:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4937:6:10",
														"nodeType": "YulTypedName",
														"src": "4937:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4945:6:10",
														"nodeType": "YulTypedName",
														"src": "4945:6:10",
														"type": ""
													}
												],
												"src": "4839:757:10"
											},
											{
												"body": {
													"nativeSrc": "5698:73:10",
													"nodeType": "YulBlock",
													"src": "5698:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5715:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5715:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5720:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5720:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5708:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5708:6:10"
																},
																"nativeSrc": "5708:19:10",
																"nodeType": "YulFunctionCall",
																"src": "5708:19:10"
															},
															"nativeSrc": "5708:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "5708:19:10"
														},
														{
															"nativeSrc": "5736:29:10",
															"nodeType": "YulAssignment",
															"src": "5736:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5755:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5755:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5760:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5760:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5751:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5751:3:10"
																},
																"nativeSrc": "5751:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5751:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5736:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "5736:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5602:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5670:3:10",
														"nodeType": "YulTypedName",
														"src": "5670:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5675:6:10",
														"nodeType": "YulTypedName",
														"src": "5675:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5686:11:10",
														"nodeType": "YulTypedName",
														"src": "5686:11:10",
														"type": ""
													}
												],
												"src": "5602:169:10"
											},
											{
												"body": {
													"nativeSrc": "5883:62:10",
													"nodeType": "YulBlock",
													"src": "5883:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5905:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5905:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5913:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5913:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5901:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5901:3:10"
																		},
																		"nativeSrc": "5901:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5901:14:10"
																	},
																	{
																		"hexValue": "4e6f7420706f736974696f6e206f776e6572",
																		"kind": "string",
																		"nativeSrc": "5917:20:10",
																		"nodeType": "YulLiteral",
																		"src": "5917:20:10",
																		"type": "",
																		"value": "Not position owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5894:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5894:6:10"
																},
																"nativeSrc": "5894:44:10",
																"nodeType": "YulFunctionCall",
																"src": "5894:44:10"
															},
															"nativeSrc": "5894:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "5894:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_afa3981e1a0c56edb4debd947302e8fcdc7b068aa2aa8d78a386d11182ad9c1d",
												"nativeSrc": "5777:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5875:6:10",
														"nodeType": "YulTypedName",
														"src": "5875:6:10",
														"type": ""
													}
												],
												"src": "5777:168:10"
											},
											{
												"body": {
													"nativeSrc": "6097:220:10",
													"nodeType": "YulBlock",
													"src": "6097:220:10",
													"statements": [
														{
															"nativeSrc": "6107:74:10",
															"nodeType": "YulAssignment",
															"src": "6107:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6173:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6173:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6178:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6178:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6114:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "6114:58:10"
																},
																"nativeSrc": "6114:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6114:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6107:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6107:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6279:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6279:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_afa3981e1a0c56edb4debd947302e8fcdc7b068aa2aa8d78a386d11182ad9c1d",
																	"nativeSrc": "6190:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "6190:88:10"
																},
																"nativeSrc": "6190:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6190:93:10"
															},
															"nativeSrc": "6190:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "6190:93:10"
														},
														{
															"nativeSrc": "6292:19:10",
															"nodeType": "YulAssignment",
															"src": "6292:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6303:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6303:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6308:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6299:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6299:3:10"
																},
																"nativeSrc": "6299:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6299:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6292:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6292:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_afa3981e1a0c56edb4debd947302e8fcdc7b068aa2aa8d78a386d11182ad9c1d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5951:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6085:3:10",
														"nodeType": "YulTypedName",
														"src": "6085:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6093:3:10",
														"nodeType": "YulTypedName",
														"src": "6093:3:10",
														"type": ""
													}
												],
												"src": "5951:366:10"
											},
											{
												"body": {
													"nativeSrc": "6494:248:10",
													"nodeType": "YulBlock",
													"src": "6494:248:10",
													"statements": [
														{
															"nativeSrc": "6504:26:10",
															"nodeType": "YulAssignment",
															"src": "6504:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6516:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6516:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6527:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6527:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6512:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6512:3:10"
																},
																"nativeSrc": "6512:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6512:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6504:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6504:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6551:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6551:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6562:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6562:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6547:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6547:3:10"
																		},
																		"nativeSrc": "6547:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6547:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6570:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6570:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6576:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6576:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6566:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6566:3:10"
																		},
																		"nativeSrc": "6566:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6566:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6540:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6540:6:10"
																},
																"nativeSrc": "6540:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6540:47:10"
															},
															"nativeSrc": "6540:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6540:47:10"
														},
														{
															"nativeSrc": "6596:139:10",
															"nodeType": "YulAssignment",
															"src": "6596:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6730:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6730:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_afa3981e1a0c56edb4debd947302e8fcdc7b068aa2aa8d78a386d11182ad9c1d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6604:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6604:124:10"
																},
																"nativeSrc": "6604:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6604:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6596:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6596:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_afa3981e1a0c56edb4debd947302e8fcdc7b068aa2aa8d78a386d11182ad9c1d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6323:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6474:9:10",
														"nodeType": "YulTypedName",
														"src": "6474:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6489:4:10",
														"nodeType": "YulTypedName",
														"src": "6489:4:10",
														"type": ""
													}
												],
												"src": "6323:419:10"
											},
											{
												"body": {
													"nativeSrc": "6854:68:10",
													"nodeType": "YulBlock",
													"src": "6854:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6876:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6876:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6884:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6884:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6872:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6872:3:10"
																		},
																		"nativeSrc": "6872:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6872:14:10"
																	},
																	{
																		"hexValue": "506f736974696f6e20616c72656164792072656d6f766564",
																		"kind": "string",
																		"nativeSrc": "6888:26:10",
																		"nodeType": "YulLiteral",
																		"src": "6888:26:10",
																		"type": "",
																		"value": "Position already removed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6865:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6865:6:10"
																},
																"nativeSrc": "6865:50:10",
																"nodeType": "YulFunctionCall",
																"src": "6865:50:10"
															},
															"nativeSrc": "6865:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "6865:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_c362a44df75753905b6b47e5d73e6167c82251760df47c64d9e543e834ba0c90",
												"nativeSrc": "6748:174:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6846:6:10",
														"nodeType": "YulTypedName",
														"src": "6846:6:10",
														"type": ""
													}
												],
												"src": "6748:174:10"
											},
											{
												"body": {
													"nativeSrc": "7074:220:10",
													"nodeType": "YulBlock",
													"src": "7074:220:10",
													"statements": [
														{
															"nativeSrc": "7084:74:10",
															"nodeType": "YulAssignment",
															"src": "7084:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7150:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7150:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7155:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7155:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7091:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7091:58:10"
																},
																"nativeSrc": "7091:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7091:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7084:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7084:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7256:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7256:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c362a44df75753905b6b47e5d73e6167c82251760df47c64d9e543e834ba0c90",
																	"nativeSrc": "7167:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7167:88:10"
																},
																"nativeSrc": "7167:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7167:93:10"
															},
															"nativeSrc": "7167:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7167:93:10"
														},
														{
															"nativeSrc": "7269:19:10",
															"nodeType": "YulAssignment",
															"src": "7269:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7280:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7280:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7285:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7285:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7276:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7276:3:10"
																},
																"nativeSrc": "7276:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7276:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7269:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7269:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c362a44df75753905b6b47e5d73e6167c82251760df47c64d9e543e834ba0c90_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6928:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7062:3:10",
														"nodeType": "YulTypedName",
														"src": "7062:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7070:3:10",
														"nodeType": "YulTypedName",
														"src": "7070:3:10",
														"type": ""
													}
												],
												"src": "6928:366:10"
											},
											{
												"body": {
													"nativeSrc": "7471:248:10",
													"nodeType": "YulBlock",
													"src": "7471:248:10",
													"statements": [
														{
															"nativeSrc": "7481:26:10",
															"nodeType": "YulAssignment",
															"src": "7481:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7493:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7493:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7504:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7504:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7489:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7489:3:10"
																},
																"nativeSrc": "7489:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7489:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7481:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7481:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7528:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7528:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7539:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7539:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7524:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7524:3:10"
																		},
																		"nativeSrc": "7524:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7524:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7547:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7547:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7553:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7553:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7543:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7543:3:10"
																		},
																		"nativeSrc": "7543:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7543:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7517:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7517:6:10"
																},
																"nativeSrc": "7517:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7517:47:10"
															},
															"nativeSrc": "7517:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7517:47:10"
														},
														{
															"nativeSrc": "7573:139:10",
															"nodeType": "YulAssignment",
															"src": "7573:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7707:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7707:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c362a44df75753905b6b47e5d73e6167c82251760df47c64d9e543e834ba0c90_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7581:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7581:124:10"
																},
																"nativeSrc": "7581:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7581:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7573:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7573:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c362a44df75753905b6b47e5d73e6167c82251760df47c64d9e543e834ba0c90__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7300:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7451:9:10",
														"nodeType": "YulTypedName",
														"src": "7451:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7466:4:10",
														"nodeType": "YulTypedName",
														"src": "7466:4:10",
														"type": ""
													}
												],
												"src": "7300:419:10"
											},
											{
												"body": {
													"nativeSrc": "7851:206:10",
													"nodeType": "YulBlock",
													"src": "7851:206:10",
													"statements": [
														{
															"nativeSrc": "7861:26:10",
															"nodeType": "YulAssignment",
															"src": "7861:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7873:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7873:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7884:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7884:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7869:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7869:3:10"
																},
																"nativeSrc": "7869:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7869:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7861:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7861:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7941:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7941:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7954:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7954:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7965:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7965:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7950:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7950:3:10"
																		},
																		"nativeSrc": "7950:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7950:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7897:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7897:43:10"
																},
																"nativeSrc": "7897:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7897:71:10"
															},
															"nativeSrc": "7897:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "7897:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8022:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8022:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8035:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8035:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8046:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8046:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8031:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8031:3:10"
																		},
																		"nativeSrc": "8031:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8031:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7978:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7978:43:10"
																},
																"nativeSrc": "7978:72:10",
																"nodeType": "YulFunctionCall",
																"src": "7978:72:10"
															},
															"nativeSrc": "7978:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "7978:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7725:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7815:9:10",
														"nodeType": "YulTypedName",
														"src": "7815:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7827:6:10",
														"nodeType": "YulTypedName",
														"src": "7827:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7835:6:10",
														"nodeType": "YulTypedName",
														"src": "7835:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7846:4:10",
														"nodeType": "YulTypedName",
														"src": "7846:4:10",
														"type": ""
													}
												],
												"src": "7725:332:10"
											},
											{
												"body": {
													"nativeSrc": "8169:62:10",
													"nodeType": "YulBlock",
													"src": "8169:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8191:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8191:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8199:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8199:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8187:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8187:3:10"
																		},
																		"nativeSrc": "8187:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8187:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964207469636b2072616e6765",
																		"kind": "string",
																		"nativeSrc": "8203:20:10",
																		"nodeType": "YulLiteral",
																		"src": "8203:20:10",
																		"type": "",
																		"value": "Invalid tick range"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8180:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8180:6:10"
																},
																"nativeSrc": "8180:44:10",
																"nodeType": "YulFunctionCall",
																"src": "8180:44:10"
															},
															"nativeSrc": "8180:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "8180:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_5fb447cb8a73099b715c4ab92ff6f271e9605295d15c8841bc0b730a60ec7abf",
												"nativeSrc": "8063:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8161:6:10",
														"nodeType": "YulTypedName",
														"src": "8161:6:10",
														"type": ""
													}
												],
												"src": "8063:168:10"
											},
											{
												"body": {
													"nativeSrc": "8383:220:10",
													"nodeType": "YulBlock",
													"src": "8383:220:10",
													"statements": [
														{
															"nativeSrc": "8393:74:10",
															"nodeType": "YulAssignment",
															"src": "8393:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8459:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8459:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8464:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8464:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8400:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8400:58:10"
																},
																"nativeSrc": "8400:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8400:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8393:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8393:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8565:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8565:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5fb447cb8a73099b715c4ab92ff6f271e9605295d15c8841bc0b730a60ec7abf",
																	"nativeSrc": "8476:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8476:88:10"
																},
																"nativeSrc": "8476:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8476:93:10"
															},
															"nativeSrc": "8476:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8476:93:10"
														},
														{
															"nativeSrc": "8578:19:10",
															"nodeType": "YulAssignment",
															"src": "8578:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8589:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8589:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8594:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8594:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8585:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8585:3:10"
																},
																"nativeSrc": "8585:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8585:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8578:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8578:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5fb447cb8a73099b715c4ab92ff6f271e9605295d15c8841bc0b730a60ec7abf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8237:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8371:3:10",
														"nodeType": "YulTypedName",
														"src": "8371:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8379:3:10",
														"nodeType": "YulTypedName",
														"src": "8379:3:10",
														"type": ""
													}
												],
												"src": "8237:366:10"
											},
											{
												"body": {
													"nativeSrc": "8780:248:10",
													"nodeType": "YulBlock",
													"src": "8780:248:10",
													"statements": [
														{
															"nativeSrc": "8790:26:10",
															"nodeType": "YulAssignment",
															"src": "8790:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8802:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8802:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8813:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8813:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8798:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8798:3:10"
																},
																"nativeSrc": "8798:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8798:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8790:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8790:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8837:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8837:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8848:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8848:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8833:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8833:3:10"
																		},
																		"nativeSrc": "8833:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8833:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8856:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8856:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8862:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8862:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8852:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8852:3:10"
																		},
																		"nativeSrc": "8852:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8852:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8826:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8826:6:10"
																},
																"nativeSrc": "8826:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8826:47:10"
															},
															"nativeSrc": "8826:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8826:47:10"
														},
														{
															"nativeSrc": "8882:139:10",
															"nodeType": "YulAssignment",
															"src": "8882:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9016:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9016:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5fb447cb8a73099b715c4ab92ff6f271e9605295d15c8841bc0b730a60ec7abf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8890:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8890:124:10"
																},
																"nativeSrc": "8890:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8890:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8882:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8882:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5fb447cb8a73099b715c4ab92ff6f271e9605295d15c8841bc0b730a60ec7abf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8609:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8760:9:10",
														"nodeType": "YulTypedName",
														"src": "8760:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8775:4:10",
														"nodeType": "YulTypedName",
														"src": "8775:4:10",
														"type": ""
													}
												],
												"src": "8609:419:10"
											},
											{
												"body": {
													"nativeSrc": "9140:63:10",
													"nodeType": "YulBlock",
													"src": "9140:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9162:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9162:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9170:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9170:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:10"
																		},
																		"nativeSrc": "9158:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:14:10"
																	},
																	{
																		"hexValue": "416d6f756e7473206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "9174:21:10",
																		"nodeType": "YulLiteral",
																		"src": "9174:21:10",
																		"type": "",
																		"value": "Amounts must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9151:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9151:6:10"
																},
																"nativeSrc": "9151:45:10",
																"nodeType": "YulFunctionCall",
																"src": "9151:45:10"
															},
															"nativeSrc": "9151:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "9151:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0",
												"nativeSrc": "9034:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9132:6:10",
														"nodeType": "YulTypedName",
														"src": "9132:6:10",
														"type": ""
													}
												],
												"src": "9034:169:10"
											},
											{
												"body": {
													"nativeSrc": "9355:220:10",
													"nodeType": "YulBlock",
													"src": "9355:220:10",
													"statements": [
														{
															"nativeSrc": "9365:74:10",
															"nodeType": "YulAssignment",
															"src": "9365:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9431:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9431:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9436:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9436:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9372:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9372:58:10"
																},
																"nativeSrc": "9372:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9372:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9365:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9365:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9537:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9537:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0",
																	"nativeSrc": "9448:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9448:88:10"
																},
																"nativeSrc": "9448:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9448:93:10"
															},
															"nativeSrc": "9448:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9448:93:10"
														},
														{
															"nativeSrc": "9550:19:10",
															"nodeType": "YulAssignment",
															"src": "9550:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9561:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9561:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9566:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9566:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9557:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9557:3:10"
																},
																"nativeSrc": "9557:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9557:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9550:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9550:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9209:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9343:3:10",
														"nodeType": "YulTypedName",
														"src": "9343:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9351:3:10",
														"nodeType": "YulTypedName",
														"src": "9351:3:10",
														"type": ""
													}
												],
												"src": "9209:366:10"
											},
											{
												"body": {
													"nativeSrc": "9752:248:10",
													"nodeType": "YulBlock",
													"src": "9752:248:10",
													"statements": [
														{
															"nativeSrc": "9762:26:10",
															"nodeType": "YulAssignment",
															"src": "9762:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9774:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9774:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9785:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9785:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9770:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9770:3:10"
																},
																"nativeSrc": "9770:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9770:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9762:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9762:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9809:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9809:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9820:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9820:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9805:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9805:3:10"
																		},
																		"nativeSrc": "9805:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9805:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9828:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9828:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9834:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9834:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9824:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9824:3:10"
																		},
																		"nativeSrc": "9824:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9824:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9798:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9798:6:10"
																},
																"nativeSrc": "9798:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9798:47:10"
															},
															"nativeSrc": "9798:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9798:47:10"
														},
														{
															"nativeSrc": "9854:139:10",
															"nodeType": "YulAssignment",
															"src": "9854:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9988:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9988:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9862:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9862:124:10"
																},
																"nativeSrc": "9862:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9862:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9854:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9854:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9581:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9732:9:10",
														"nodeType": "YulTypedName",
														"src": "9732:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9747:4:10",
														"nodeType": "YulTypedName",
														"src": "9747:4:10",
														"type": ""
													}
												],
												"src": "9581:419:10"
											},
											{
												"body": {
													"nativeSrc": "10034:152:10",
													"nodeType": "YulBlock",
													"src": "10034:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10051:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10051:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10054:77:10",
																		"nodeType": "YulLiteral",
																		"src": "10054:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10044:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10044:6:10"
																},
																"nativeSrc": "10044:88:10",
																"nodeType": "YulFunctionCall",
																"src": "10044:88:10"
															},
															"nativeSrc": "10044:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "10044:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10148:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10148:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10151:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10151:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10141:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10141:6:10"
																},
																"nativeSrc": "10141:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10141:15:10"
															},
															"nativeSrc": "10141:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10141:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10172:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10172:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10175:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10175:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10165:6:10"
																},
																"nativeSrc": "10165:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10165:15:10"
															},
															"nativeSrc": "10165:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10165:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10006:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "10006:180:10"
											},
											{
												"body": {
													"nativeSrc": "10235:190:10",
													"nodeType": "YulBlock",
													"src": "10235:190:10",
													"statements": [
														{
															"nativeSrc": "10245:33:10",
															"nodeType": "YulAssignment",
															"src": "10245:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10272:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10272:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10254:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10254:17:10"
																},
																"nativeSrc": "10254:24:10",
																"nodeType": "YulFunctionCall",
																"src": "10254:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10245:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10245:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10368:22:10",
																"nodeType": "YulBlock",
																"src": "10368:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10370:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10370:16:10"
																			},
																			"nativeSrc": "10370:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10370:18:10"
																		},
																		"nativeSrc": "10370:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10370:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10293:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10293:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10300:66:10",
																		"nodeType": "YulLiteral",
																		"src": "10300:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10290:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10290:2:10"
																},
																"nativeSrc": "10290:77:10",
																"nodeType": "YulFunctionCall",
																"src": "10290:77:10"
															},
															"nativeSrc": "10287:103:10",
															"nodeType": "YulIf",
															"src": "10287:103:10"
														},
														{
															"nativeSrc": "10399:20:10",
															"nodeType": "YulAssignment",
															"src": "10399:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10410:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10410:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10417:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10417:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10406:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10406:3:10"
																},
																"nativeSrc": "10406:13:10",
																"nodeType": "YulFunctionCall",
																"src": "10406:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10399:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10399:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "10192:233:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10221:5:10",
														"nodeType": "YulTypedName",
														"src": "10221:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10231:3:10",
														"nodeType": "YulTypedName",
														"src": "10231:3:10",
														"type": ""
													}
												],
												"src": "10192:233:10"
											},
											{
												"body": {
													"nativeSrc": "10633:446:10",
													"nodeType": "YulBlock",
													"src": "10633:446:10",
													"statements": [
														{
															"nativeSrc": "10643:27:10",
															"nodeType": "YulAssignment",
															"src": "10643:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10655:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10655:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10666:3:10",
																		"nodeType": "YulLiteral",
																		"src": "10666:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10651:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10651:3:10"
																},
																"nativeSrc": "10651:19:10",
																"nodeType": "YulFunctionCall",
																"src": "10651:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10643:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10643:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10720:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10720:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10733:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10733:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10744:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10744:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10729:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10729:3:10"
																		},
																		"nativeSrc": "10729:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10729:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_fromStack",
																	"nativeSrc": "10680:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "10680:39:10"
																},
																"nativeSrc": "10680:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10680:67:10"
															},
															"nativeSrc": "10680:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "10680:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10797:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10797:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10810:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10810:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10821:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10821:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10806:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10806:3:10"
																		},
																		"nativeSrc": "10806:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10806:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_fromStack",
																	"nativeSrc": "10757:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "10757:39:10"
																},
																"nativeSrc": "10757:68:10",
																"nodeType": "YulFunctionCall",
																"src": "10757:68:10"
															},
															"nativeSrc": "10757:68:10",
															"nodeType": "YulExpressionStatement",
															"src": "10757:68:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10879:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10879:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10892:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10892:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10903:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10903:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10888:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10888:3:10"
																		},
																		"nativeSrc": "10888:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10888:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10835:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10835:43:10"
																},
																"nativeSrc": "10835:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10835:72:10"
															},
															"nativeSrc": "10835:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10835:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10961:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10961:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10974:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10974:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10985:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10985:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10970:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10970:3:10"
																		},
																		"nativeSrc": "10970:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10970:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10917:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10917:43:10"
																},
																"nativeSrc": "10917:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10917:72:10"
															},
															"nativeSrc": "10917:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10917:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "11043:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11043:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11056:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11056:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11067:3:10",
																				"nodeType": "YulLiteral",
																				"src": "11067:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11052:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11052:3:10"
																		},
																		"nativeSrc": "11052:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11052:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10999:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10999:43:10"
																},
																"nativeSrc": "10999:73:10",
																"nodeType": "YulFunctionCall",
																"src": "10999:73:10"
															},
															"nativeSrc": "10999:73:10",
															"nodeType": "YulExpressionStatement",
															"src": "10999:73:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_int24_t_int24_t_uint256_t_uint256_t_uint256__to_t_int24_t_int24_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10431:648:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10573:9:10",
														"nodeType": "YulTypedName",
														"src": "10573:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10585:6:10",
														"nodeType": "YulTypedName",
														"src": "10585:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10593:6:10",
														"nodeType": "YulTypedName",
														"src": "10593:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10601:6:10",
														"nodeType": "YulTypedName",
														"src": "10601:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10609:6:10",
														"nodeType": "YulTypedName",
														"src": "10609:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10617:6:10",
														"nodeType": "YulTypedName",
														"src": "10617:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10628:4:10",
														"nodeType": "YulTypedName",
														"src": "10628:4:10",
														"type": ""
													}
												],
												"src": "10431:648:10"
											},
											{
												"body": {
													"nativeSrc": "11191:75:10",
													"nodeType": "YulBlock",
													"src": "11191:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11213:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11213:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11221:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11221:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11209:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11209:3:10"
																		},
																		"nativeSrc": "11209:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11209:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "11225:33:10",
																		"nodeType": "YulLiteral",
																		"src": "11225:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11202:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11202:6:10"
																},
																"nativeSrc": "11202:57:10",
																"nodeType": "YulFunctionCall",
																"src": "11202:57:10"
															},
															"nativeSrc": "11202:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "11202:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "11085:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11183:6:10",
														"nodeType": "YulTypedName",
														"src": "11183:6:10",
														"type": ""
													}
												],
												"src": "11085:181:10"
											},
											{
												"body": {
													"nativeSrc": "11418:220:10",
													"nodeType": "YulBlock",
													"src": "11418:220:10",
													"statements": [
														{
															"nativeSrc": "11428:74:10",
															"nodeType": "YulAssignment",
															"src": "11428:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11494:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11494:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11499:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11499:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11435:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11435:58:10"
																},
																"nativeSrc": "11435:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11435:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11428:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11428:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11600:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11600:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "11511:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11511:88:10"
																},
																"nativeSrc": "11511:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11511:93:10"
															},
															"nativeSrc": "11511:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11511:93:10"
														},
														{
															"nativeSrc": "11613:19:10",
															"nodeType": "YulAssignment",
															"src": "11613:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11624:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11624:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11629:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11629:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11620:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11620:3:10"
																},
																"nativeSrc": "11620:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11620:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11613:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11613:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11272:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11406:3:10",
														"nodeType": "YulTypedName",
														"src": "11406:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11414:3:10",
														"nodeType": "YulTypedName",
														"src": "11414:3:10",
														"type": ""
													}
												],
												"src": "11272:366:10"
											},
											{
												"body": {
													"nativeSrc": "11815:248:10",
													"nodeType": "YulBlock",
													"src": "11815:248:10",
													"statements": [
														{
															"nativeSrc": "11825:26:10",
															"nodeType": "YulAssignment",
															"src": "11825:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11837:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11837:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11848:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11848:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11833:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11833:3:10"
																},
																"nativeSrc": "11833:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11833:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11825:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11825:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11872:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11872:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11883:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11883:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11868:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11868:3:10"
																		},
																		"nativeSrc": "11868:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11868:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11891:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11891:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11897:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11897:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11887:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11887:3:10"
																		},
																		"nativeSrc": "11887:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11887:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11861:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11861:6:10"
																},
																"nativeSrc": "11861:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11861:47:10"
															},
															"nativeSrc": "11861:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11861:47:10"
														},
														{
															"nativeSrc": "11917:139:10",
															"nodeType": "YulAssignment",
															"src": "11917:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12051:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12051:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11925:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11925:124:10"
																},
																"nativeSrc": "11925:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11925:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11917:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11917:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11644:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11795:9:10",
														"nodeType": "YulTypedName",
														"src": "11795:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11810:4:10",
														"nodeType": "YulTypedName",
														"src": "11810:4:10",
														"type": ""
													}
												],
												"src": "11644:419:10"
											},
											{
												"body": {
													"nativeSrc": "12195:206:10",
													"nodeType": "YulBlock",
													"src": "12195:206:10",
													"statements": [
														{
															"nativeSrc": "12205:26:10",
															"nodeType": "YulAssignment",
															"src": "12205:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12217:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12217:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12228:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12228:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12213:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12213:3:10"
																},
																"nativeSrc": "12213:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12213:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12205:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12205:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12285:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12285:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12298:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12298:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12309:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12309:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12294:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12294:3:10"
																		},
																		"nativeSrc": "12294:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12294:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12241:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12241:43:10"
																},
																"nativeSrc": "12241:71:10",
																"nodeType": "YulFunctionCall",
																"src": "12241:71:10"
															},
															"nativeSrc": "12241:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "12241:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12366:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12366:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12379:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12379:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12390:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12390:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12375:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12375:3:10"
																		},
																		"nativeSrc": "12375:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12375:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12322:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12322:43:10"
																},
																"nativeSrc": "12322:72:10",
																"nodeType": "YulFunctionCall",
																"src": "12322:72:10"
															},
															"nativeSrc": "12322:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "12322:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12069:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12159:9:10",
														"nodeType": "YulTypedName",
														"src": "12159:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12171:6:10",
														"nodeType": "YulTypedName",
														"src": "12171:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12179:6:10",
														"nodeType": "YulTypedName",
														"src": "12179:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12190:4:10",
														"nodeType": "YulTypedName",
														"src": "12190:4:10",
														"type": ""
													}
												],
												"src": "12069:332:10"
											},
											{
												"body": {
													"nativeSrc": "12561:288:10",
													"nodeType": "YulBlock",
													"src": "12561:288:10",
													"statements": [
														{
															"nativeSrc": "12571:26:10",
															"nodeType": "YulAssignment",
															"src": "12571:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12583:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12583:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12594:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12594:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12579:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12579:3:10"
																},
																"nativeSrc": "12579:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12579:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12571:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12571:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12651:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12651:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12664:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12664:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12675:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12675:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12660:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12660:3:10"
																		},
																		"nativeSrc": "12660:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12660:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12607:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12607:43:10"
																},
																"nativeSrc": "12607:71:10",
																"nodeType": "YulFunctionCall",
																"src": "12607:71:10"
															},
															"nativeSrc": "12607:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "12607:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12732:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12732:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12745:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12745:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12756:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12756:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12741:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12741:3:10"
																		},
																		"nativeSrc": "12741:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12741:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12688:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12688:43:10"
																},
																"nativeSrc": "12688:72:10",
																"nodeType": "YulFunctionCall",
																"src": "12688:72:10"
															},
															"nativeSrc": "12688:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "12688:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12814:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12814:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12827:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12827:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12838:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12838:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12823:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12823:3:10"
																		},
																		"nativeSrc": "12823:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12823:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12770:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12770:43:10"
																},
																"nativeSrc": "12770:72:10",
																"nodeType": "YulFunctionCall",
																"src": "12770:72:10"
															},
															"nativeSrc": "12770:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "12770:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12407:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12517:9:10",
														"nodeType": "YulTypedName",
														"src": "12517:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12529:6:10",
														"nodeType": "YulTypedName",
														"src": "12529:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12537:6:10",
														"nodeType": "YulTypedName",
														"src": "12537:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12545:6:10",
														"nodeType": "YulTypedName",
														"src": "12545:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12556:4:10",
														"nodeType": "YulTypedName",
														"src": "12556:4:10",
														"type": ""
													}
												],
												"src": "12407:442:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$380_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$380_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function abi_encode_t_int24_to_t_int24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int24(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_int24_t_int24_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_int24_t_int24_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_int24_to_t_int24_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_int24_to_t_int24_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function abi_decode_tuple_t_int24t_int24t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_afa3981e1a0c56edb4debd947302e8fcdc7b068aa2aa8d78a386d11182ad9c1d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not position owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_afa3981e1a0c56edb4debd947302e8fcdc7b068aa2aa8d78a386d11182ad9c1d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_afa3981e1a0c56edb4debd947302e8fcdc7b068aa2aa8d78a386d11182ad9c1d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_afa3981e1a0c56edb4debd947302e8fcdc7b068aa2aa8d78a386d11182ad9c1d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_afa3981e1a0c56edb4debd947302e8fcdc7b068aa2aa8d78a386d11182ad9c1d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c362a44df75753905b6b47e5d73e6167c82251760df47c64d9e543e834ba0c90(memPtr) {\n\n        mstore(add(memPtr, 0), \"Position already removed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c362a44df75753905b6b47e5d73e6167c82251760df47c64d9e543e834ba0c90_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_c362a44df75753905b6b47e5d73e6167c82251760df47c64d9e543e834ba0c90(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c362a44df75753905b6b47e5d73e6167c82251760df47c64d9e543e834ba0c90__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c362a44df75753905b6b47e5d73e6167c82251760df47c64d9e543e834ba0c90_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_5fb447cb8a73099b715c4ab92ff6f271e9605295d15c8841bc0b730a60ec7abf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid tick range\")\n\n    }\n\n    function abi_encode_t_stringliteral_5fb447cb8a73099b715c4ab92ff6f271e9605295d15c8841bc0b730a60ec7abf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_5fb447cb8a73099b715c4ab92ff6f271e9605295d15c8841bc0b730a60ec7abf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5fb447cb8a73099b715c4ab92ff6f271e9605295d15c8841bc0b730a60ec7abf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5fb447cb8a73099b715c4ab92ff6f271e9605295d15c8841bc0b730a60ec7abf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amounts must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_int24_t_int24_t_uint256_t_uint256_t_uint256__to_t_int24_t_int24_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_int24_to_t_int24_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int24_to_t_int24_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"849": [
									{
										"length": 32,
										"start": 525
									},
									{
										"length": 32,
										"start": 1360
									},
									{
										"length": 32,
										"start": 1942
									}
								],
								"852": [
									{
										"length": 32,
										"start": 1439
									},
									{
										"length": 32,
										"start": 1610
									},
									{
										"length": 32,
										"start": 2019
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100a7575f3560e01c80638da5cb5b1161006f5780638da5cb5b1461012b57806399fbab88146101495780639c8f9f231461017f578063d21220a71461019b578063f2fde38b146101b9578063fd87f9aa146101d5576100a7565b8063065e5360146100ab5780630dfe1681146100c9578063291df278146100e7578063715018a614610103578063899346c71461010d575b5f5ffd5b6100b3610205565b6040516100c09190610d47565b60405180910390f35b6100d161020b565b6040516100de9190610dda565b60405180910390f35b61010160048036038101906100fc9190610e21565b61022f565b005b61010b610278565b005b61011561028b565b6040516101229190610d47565b60405180910390f35b610133610291565b6040516101409190610e6c565b60405180910390f35b610163600480360381019061015e9190610e21565b6102b8565b6040516101769796959493929190610ea0565b60405180910390f35b61019960048036038101906101949190610e21565b61032f565b005b6101a3610648565b6040516101b09190610dda565b60405180910390f35b6101d360048036038101906101ce9190610f37565b61066c565b005b6101ef60048036038101906101ea9190610f8c565b6106f0565b6040516101fc9190610d47565b60405180910390f35b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6102376109d4565b806002819055507fca2410361df736e1af5d81999e916cec0b435bf16bc69b5a209be194f88bec4d8160405161026d9190610d47565b60405180910390a150565b6102806109d4565b6102895f610a5b565b565b60045481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6003602052805f5260405f205f91509050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460020b908060010160179054906101000a900460020b908060020154908060030154908060040154905087565b610337610b1c565b5f60035f8381526020019081526020015f206040518060e00160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460020b60020b60020b81526020016001820160179054906101000a900460020b60020b60020b8152602001600282015481526020016003820154815260200160048201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161461047e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104759061104a565b60405180910390fd5b5f8160c00151116104c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bb906110b2565b60405180910390fd5b60035f8381526020019081526020015f205f5f82015f9055600182015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160146101000a81549062ffffff02191690556001820160176101000a81549062ffffff0219169055600282015f9055600382015f9055600482015f905550506105943382608001517f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610b6b9092919063ffffffff16565b6105e3338260a001517f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610b6b9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff16827f196a4bf617b45641f176c4e6d288ccf7498f1699f68b1cc1e4daadf92779703b83608001518460a001516040516106349291906110d0565b60405180910390a350610645610bea565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b6106746109d4565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106e4575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106db9190610e6c565b60405180910390fd5b6106ed81610a5b565b50565b5f6106f9610b1c565b8360020b8560020b12610741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073890611141565b60405180910390fd5b5f8311801561074f57505f82115b61078e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610785906111a9565b60405180910390fd5b6107db3330857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610bf3909392919063ffffffff16565b6108283330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610bf3909392919063ffffffff16565b5f6108338484610c75565b905060045f815480929190610847906111f4565b9190505591506040518060e001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018760020b81526020018660020b81526020018581526020018481526020018281525060035f8481526020019081526020015f205f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548162ffffff021916908360020b62ffffff16021790555060608201518160010160176101000a81548162ffffff021916908360020b62ffffff1602179055506080820151816002015560a0820151816003015560c082015181600401559050503373ffffffffffffffffffffffffffffffffffffffff16827f19c7fd3f52ff46f3dab96ff8ac8be59679992761324c4e0907c78cb7a4b8865c88888888876040516109bb95949392919061123b565b60405180910390a3506109cc610bea565b949350505050565b6109dc610c8d565b73ffffffffffffffffffffffffffffffffffffffff166109fa610291565b73ffffffffffffffffffffffffffffffffffffffff1614610a5957610a1d610c8d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a509190610e6c565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403610b61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b58906112d6565b60405180910390fd5b6002600181905550565b610be5838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610b9e9291906112f4565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c94565b505050565b60018081905550565b610c6f848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610c289392919061131b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c94565b50505050565b5f818310610c835781610c85565b825b905092915050565b5f33905090565b5f5f60205f8451602086015f885af180610cb3576040513d5f823e3d81fd5b3d92505f519150505f8214610ccc576001811415610ce7565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610d2957836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610d209190610e6c565b60405180910390fd5b50505050565b5f819050919050565b610d4181610d2f565b82525050565b5f602082019050610d5a5f830184610d38565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610da2610d9d610d9884610d60565b610d7f565b610d60565b9050919050565b5f610db382610d88565b9050919050565b5f610dc482610da9565b9050919050565b610dd481610dba565b82525050565b5f602082019050610ded5f830184610dcb565b92915050565b5f5ffd5b610e0081610d2f565b8114610e0a575f5ffd5b50565b5f81359050610e1b81610df7565b92915050565b5f60208284031215610e3657610e35610df3565b5b5f610e4384828501610e0d565b91505092915050565b5f610e5682610d60565b9050919050565b610e6681610e4c565b82525050565b5f602082019050610e7f5f830184610e5d565b92915050565b5f8160020b9050919050565b610e9a81610e85565b82525050565b5f60e082019050610eb35f83018a610d38565b610ec06020830189610e5d565b610ecd6040830188610e91565b610eda6060830187610e91565b610ee76080830186610d38565b610ef460a0830185610d38565b610f0160c0830184610d38565b98975050505050505050565b610f1681610e4c565b8114610f20575f5ffd5b50565b5f81359050610f3181610f0d565b92915050565b5f60208284031215610f4c57610f4b610df3565b5b5f610f5984828501610f23565b91505092915050565b610f6b81610e85565b8114610f75575f5ffd5b50565b5f81359050610f8681610f62565b92915050565b5f5f5f5f60808587031215610fa457610fa3610df3565b5b5f610fb187828801610f78565b9450506020610fc287828801610f78565b9350506040610fd387828801610e0d565b9250506060610fe487828801610e0d565b91505092959194509250565b5f82825260208201905092915050565b7f4e6f7420706f736974696f6e206f776e657200000000000000000000000000005f82015250565b5f611034601283610ff0565b915061103f82611000565b602082019050919050565b5f6020820190508181035f83015261106181611028565b9050919050565b7f506f736974696f6e20616c72656164792072656d6f76656400000000000000005f82015250565b5f61109c601883610ff0565b91506110a782611068565b602082019050919050565b5f6020820190508181035f8301526110c981611090565b9050919050565b5f6040820190506110e35f830185610d38565b6110f06020830184610d38565b9392505050565b7f496e76616c6964207469636b2072616e676500000000000000000000000000005f82015250565b5f61112b601283610ff0565b9150611136826110f7565b602082019050919050565b5f6020820190508181035f8301526111588161111f565b9050919050565b7f416d6f756e7473206d757374206265203e2030000000000000000000000000005f82015250565b5f611193601383610ff0565b915061119e8261115f565b602082019050919050565b5f6020820190508181035f8301526111c081611187565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111fe82610d2f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112305761122f6111c7565b5b600182019050919050565b5f60a08201905061124e5f830188610e91565b61125b6020830187610e91565b6112686040830186610d38565b6112756060830185610d38565b6112826080830184610d38565b9695505050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6112c0601f83610ff0565b91506112cb8261128c565b602082019050919050565b5f6020820190508181035f8301526112ed816112b4565b9050919050565b5f6040820190506113075f830185610e5d565b6113146020830184610d38565b9392505050565b5f60608201905061132e5f830186610e5d565b61133b6020830185610e5d565b6113486040830184610d38565b94935050505056fea2646970667358221220233403ce7f6fc1abff3174073dd40fad6449221ddba9d611bc6a5f50a6673da964736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x99FBAB88 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xFD87F9AA EQ PUSH2 0x1D5 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x65E5360 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x291DF278 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x899346C7 EQ PUSH2 0x10D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10B PUSH2 0x278 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x115 PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xE21 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x66C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0xF8C JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x9D4 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0xCA2410361DF736E1AF5D81999E916CEC0B435BF16BC69B5A209BE194F88BEC4D DUP2 PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x280 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x289 PUSH0 PUSH2 0xA5B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH2 0x337 PUSH2 0xB1C JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x47E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x475 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0xC0 ADD MLOAD GT PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BB SWAP1 PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH3 0xFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH3 0xFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP PUSH2 0x594 CALLER DUP3 PUSH1 0x80 ADD MLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB6B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x5E3 CALLER DUP3 PUSH1 0xA0 ADD MLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB6B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x196A4BF617B45641F176C4E6D288CCF7498F1699F68B1CC1E4DAADF92779703B DUP4 PUSH1 0x80 ADD MLOAD DUP5 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x634 SWAP3 SWAP2 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x645 PUSH2 0xBEA JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x674 PUSH2 0x9D4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DB SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6ED DUP2 PUSH2 0xA5B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x6F9 PUSH2 0xB1C JUMP JUMPDEST DUP4 PUSH1 0x2 SIGNEXTEND DUP6 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x741 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x738 SWAP1 PUSH2 0x1141 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x74F JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x78E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x785 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DB CALLER ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBF3 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x828 CALLER ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBF3 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH2 0x833 DUP5 DUP5 PUSH2 0xC75 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x847 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x19C7FD3F52FF46F3DAB96FF8AC8BE59679992761324C4E0907C78CB7A4B8865C DUP9 DUP9 DUP9 DUP9 DUP8 PUSH1 0x40 MLOAD PUSH2 0x9BB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x9CC PUSH2 0xBEA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x9DC PUSH2 0xC8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9FA PUSH2 0x291 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA59 JUMPI PUSH2 0xA1D PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xB61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB58 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xBE5 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB9E SWAP3 SWAP2 SWAP1 PUSH2 0x12F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC94 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xC6F DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC28 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x131B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC94 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0xC83 JUMPI DUP2 PUSH2 0xC85 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xCB3 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xCCC JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xCE7 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xD29 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD20 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD5A PUSH0 DUP4 ADD DUP5 PUSH2 0xD38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDA2 PUSH2 0xD9D PUSH2 0xD98 DUP5 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0xD7F JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDB3 DUP3 PUSH2 0xD88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC4 DUP3 PUSH2 0xDA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD4 DUP2 PUSH2 0xDBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDED PUSH0 DUP4 ADD DUP5 PUSH2 0xDCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xE00 DUP2 PUSH2 0xD2F JUMP JUMPDEST DUP2 EQ PUSH2 0xE0A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE1B DUP2 PUSH2 0xDF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE35 PUSH2 0xDF3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE43 DUP5 DUP3 DUP6 ADD PUSH2 0xE0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE56 DUP3 PUSH2 0xD60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE66 DUP2 PUSH2 0xE4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE7F PUSH0 DUP4 ADD DUP5 PUSH2 0xE5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE9A DUP2 PUSH2 0xE85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0xEB3 PUSH0 DUP4 ADD DUP11 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0xEC0 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0xECD PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xEDA PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xEE7 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0xEF4 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0xF01 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xD38 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF16 DUP2 PUSH2 0xE4C JUMP JUMPDEST DUP2 EQ PUSH2 0xF20 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF31 DUP2 PUSH2 0xF0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF4C JUMPI PUSH2 0xF4B PUSH2 0xDF3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF59 DUP5 DUP3 DUP6 ADD PUSH2 0xF23 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF6B DUP2 PUSH2 0xE85 JUMP JUMPDEST DUP2 EQ PUSH2 0xF75 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF86 DUP2 PUSH2 0xF62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFA4 JUMPI PUSH2 0xFA3 PUSH2 0xDF3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFB1 DUP8 DUP3 DUP9 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xFC2 DUP8 DUP3 DUP9 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xFD3 DUP8 DUP3 DUP9 ADD PUSH2 0xE0D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xFE4 DUP8 DUP3 DUP9 ADD PUSH2 0xE0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420706F736974696F6E206F776E65720000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1034 PUSH1 0x12 DUP4 PUSH2 0xFF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x103F DUP3 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1061 DUP2 PUSH2 0x1028 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506F736974696F6E20616C72656164792072656D6F7665640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x109C PUSH1 0x18 DUP4 PUSH2 0xFF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A7 DUP3 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10C9 DUP2 PUSH2 0x1090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10E3 PUSH0 DUP4 ADD DUP6 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0x10F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD38 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207469636B2072616E67650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x112B PUSH1 0x12 DUP4 PUSH2 0xFF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1136 DUP3 PUSH2 0x10F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1158 DUP2 PUSH2 0x111F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E7473206D757374206265203E203000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1193 PUSH1 0x13 DUP4 PUSH2 0xFF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x119E DUP3 PUSH2 0x115F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11C0 DUP2 PUSH2 0x1187 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11FE DUP3 PUSH2 0xD2F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1230 JUMPI PUSH2 0x122F PUSH2 0x11C7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x124E PUSH0 DUP4 ADD DUP9 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x125B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x1268 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0x1275 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0x1282 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xD38 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12C0 PUSH1 0x1F DUP4 PUSH2 0xFF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x12CB DUP3 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12ED DUP2 PUSH2 0x12B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1307 PUSH0 DUP4 ADD DUP6 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x1314 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD38 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x132E PUSH0 DUP4 ADD DUP7 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x133B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x1348 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD38 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 CALLVALUE SUB 0xCE PUSH32 0x6FC1ABFF3174073DD40FAD6449221DDBA9D611BC6A5F50A6673DA964736F6C63 NUMBER STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "601:4576:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;843:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;703:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5032:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1241:29:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1190:45:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;4321:576;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;739:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3094:1006:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;843:26;;;;:::o;703:30::-;;;:::o;5032:143::-;1531:13:0;:11;:13::i;:::-;5119:7:9::1;5105:11;:21;;;;5141:27;5160:7;5141:27;;;;;;:::i;:::-;;;;;;;;5032:143:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1241:29:9:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1190:45:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4321:576::-;2261:21:4;:19;:21::i;:::-;4398:19:9::1;4420:9;:21;4430:10;4420:21;;;;;;;;;;;4398:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;4472:10;4459:23;;:3;:9;;;:23;;;4451:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;4539:1;4523:3;:13;;;:17;4515:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;4619:9;:21;4629:10;4619:21;;;;;;;;;;;;4612:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4710:44;4730:10;4742:3;:11;;;4710:6;:19;;;;:44;;;;;:::i;:::-;4764;4784:10;4796:3;:11;;;4764:6;:19;;;;:44;;;;;:::i;:::-;4853:10;4824:66;;4841:10;4824:66;4865:3;:11;;;4878:3;:11;;;4824:66;;;;;;;:::i;:::-;;;;;;;;4388:509;2303:20:4::0;:18;:20::i;:::-;4321:576:9;:::o;739:30::-;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3094:1006:9:-;3253:18;2261:21:4;:19;:21::i;:::-;3303:9:9::1;3291:21;;:9;:21;;;3283:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3363:1;3353:7;:11;:26;;;;;3378:1;3368:7;:11;3353:26;3345:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3477:59;3501:10;3521:4;3528:7;3477:6;:23;;;;:59;;;;;;:::i;:::-;3546;3570:10;3590:4;3597:7;3546:6;:23;;;;:59;;;;;;:::i;:::-;3616:17;3636:37;3656:7;3665;3636:19;:37::i;:::-;3616:57;;3697:14;;:16;;;;;;;;;:::i;:::-;;;;;3684:29;;3747:241;;;;;;;;3774:10;3747:241;;;;3805:10;3747:241;;;;;;3840:9;3747:241;;;;;;3874:9;3747:241;;;;;;3906:7;3747:241;;;;3936:7;3747:241;;;;3968:9;3747:241;;::::0;3723:9:::1;:21;3733:10;3723:21;;;;;;;;;;;:265;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4031:10;4004:89;;4019:10;4004:89;4043:9;4054;4065:7;4074;4083:9;4004:89;;;;;;;;;;:::i;:::-;;;;;;;;3273:827;2303:20:4::0;:18;:20::i;:::-;3094:1006:9;;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;2472:156:9:-;2558:7;2594;2584;:17;:37;;2614:7;2584:37;;;2604:7;2584:37;2577:44;;2472:156;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;7686:720:6:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:60::-;602:3;623:5;616:12;;574:60;;;:::o;640:142::-;690:9;723:53;741:34;750:24;768:5;750:24;:::i;:::-;741:34;:::i;:::-;723:53;:::i;:::-;710:66;;640:142;;;:::o;788:126::-;838:9;871:37;902:5;871:37;:::i;:::-;858:50;;788:126;;;:::o;920:140::-;984:9;1017:37;1048:5;1017:37;:::i;:::-;1004:50;;920:140;;;:::o;1066:159::-;1167:51;1212:5;1167:51;:::i;:::-;1162:3;1155:64;1066:159;;:::o;1231:250::-;1338:4;1376:2;1365:9;1361:18;1353:26;;1389:85;1471:1;1460:9;1456:17;1447:6;1389:85;:::i;:::-;1231:250;;;;:::o;1568:117::-;1677:1;1674;1667:12;1814:122;1887:24;1905:5;1887:24;:::i;:::-;1880:5;1877:35;1867:63;;1926:1;1923;1916:12;1867:63;1814:122;:::o;1942:139::-;1988:5;2026:6;2013:20;2004:29;;2042:33;2069:5;2042:33;:::i;:::-;1942:139;;;;:::o;2087:329::-;2146:6;2195:2;2183:9;2174:7;2170:23;2166:32;2163:119;;;2201:79;;:::i;:::-;2163:119;2321:1;2346:53;2391:7;2382:6;2371:9;2367:22;2346:53;:::i;:::-;2336:63;;2292:117;2087:329;;;;:::o;2422:96::-;2459:7;2488:24;2506:5;2488:24;:::i;:::-;2477:35;;2422:96;;;:::o;2524:118::-;2611:24;2629:5;2611:24;:::i;:::-;2606:3;2599:37;2524:118;;:::o;2648:222::-;2741:4;2779:2;2768:9;2764:18;2756:26;;2792:71;2860:1;2849:9;2845:17;2836:6;2792:71;:::i;:::-;2648:222;;;;:::o;2876:90::-;2911:7;2954:5;2951:1;2940:20;2929:31;;2876:90;;;:::o;2972:112::-;3055:22;3071:5;3055:22;:::i;:::-;3050:3;3043:35;2972:112;;:::o;3090:870::-;3343:4;3381:3;3370:9;3366:19;3358:27;;3395:71;3463:1;3452:9;3448:17;3439:6;3395:71;:::i;:::-;3476:72;3544:2;3533:9;3529:18;3520:6;3476:72;:::i;:::-;3558:68;3622:2;3611:9;3607:18;3598:6;3558:68;:::i;:::-;3636;3700:2;3689:9;3685:18;3676:6;3636:68;:::i;:::-;3714:73;3782:3;3771:9;3767:19;3758:6;3714:73;:::i;:::-;3797;3865:3;3854:9;3850:19;3841:6;3797:73;:::i;:::-;3880;3948:3;3937:9;3933:19;3924:6;3880:73;:::i;:::-;3090:870;;;;;;;;;;:::o;3966:122::-;4039:24;4057:5;4039:24;:::i;:::-;4032:5;4029:35;4019:63;;4078:1;4075;4068:12;4019:63;3966:122;:::o;4094:139::-;4140:5;4178:6;4165:20;4156:29;;4194:33;4221:5;4194:33;:::i;:::-;4094:139;;;;:::o;4239:329::-;4298:6;4347:2;4335:9;4326:7;4322:23;4318:32;4315:119;;;4353:79;;:::i;:::-;4315:119;4473:1;4498:53;4543:7;4534:6;4523:9;4519:22;4498:53;:::i;:::-;4488:63;;4444:117;4239:329;;;;:::o;4574:118::-;4645:22;4661:5;4645:22;:::i;:::-;4638:5;4635:33;4625:61;;4682:1;4679;4672:12;4625:61;4574:118;:::o;4698:135::-;4742:5;4780:6;4767:20;4758:29;;4796:31;4821:5;4796:31;:::i;:::-;4698:135;;;;:::o;4839:757::-;4921:6;4929;4937;4945;4994:3;4982:9;4973:7;4969:23;4965:33;4962:120;;;5001:79;;:::i;:::-;4962:120;5121:1;5146:51;5189:7;5180:6;5169:9;5165:22;5146:51;:::i;:::-;5136:61;;5092:115;5246:2;5272:51;5315:7;5306:6;5295:9;5291:22;5272:51;:::i;:::-;5262:61;;5217:116;5372:2;5398:53;5443:7;5434:6;5423:9;5419:22;5398:53;:::i;:::-;5388:63;;5343:118;5500:2;5526:53;5571:7;5562:6;5551:9;5547:22;5526:53;:::i;:::-;5516:63;;5471:118;4839:757;;;;;;;:::o;5602:169::-;5686:11;5720:6;5715:3;5708:19;5760:4;5755:3;5751:14;5736:29;;5602:169;;;;:::o;5777:168::-;5917:20;5913:1;5905:6;5901:14;5894:44;5777:168;:::o;5951:366::-;6093:3;6114:67;6178:2;6173:3;6114:67;:::i;:::-;6107:74;;6190:93;6279:3;6190:93;:::i;:::-;6308:2;6303:3;6299:12;6292:19;;5951:366;;;:::o;6323:419::-;6489:4;6527:2;6516:9;6512:18;6504:26;;6576:9;6570:4;6566:20;6562:1;6551:9;6547:17;6540:47;6604:131;6730:4;6604:131;:::i;:::-;6596:139;;6323:419;;;:::o;6748:174::-;6888:26;6884:1;6876:6;6872:14;6865:50;6748:174;:::o;6928:366::-;7070:3;7091:67;7155:2;7150:3;7091:67;:::i;:::-;7084:74;;7167:93;7256:3;7167:93;:::i;:::-;7285:2;7280:3;7276:12;7269:19;;6928:366;;;:::o;7300:419::-;7466:4;7504:2;7493:9;7489:18;7481:26;;7553:9;7547:4;7543:20;7539:1;7528:9;7524:17;7517:47;7581:131;7707:4;7581:131;:::i;:::-;7573:139;;7300:419;;;:::o;7725:332::-;7846:4;7884:2;7873:9;7869:18;7861:26;;7897:71;7965:1;7954:9;7950:17;7941:6;7897:71;:::i;:::-;7978:72;8046:2;8035:9;8031:18;8022:6;7978:72;:::i;:::-;7725:332;;;;;:::o;8063:168::-;8203:20;8199:1;8191:6;8187:14;8180:44;8063:168;:::o;8237:366::-;8379:3;8400:67;8464:2;8459:3;8400:67;:::i;:::-;8393:74;;8476:93;8565:3;8476:93;:::i;:::-;8594:2;8589:3;8585:12;8578:19;;8237:366;;;:::o;8609:419::-;8775:4;8813:2;8802:9;8798:18;8790:26;;8862:9;8856:4;8852:20;8848:1;8837:9;8833:17;8826:47;8890:131;9016:4;8890:131;:::i;:::-;8882:139;;8609:419;;;:::o;9034:169::-;9174:21;9170:1;9162:6;9158:14;9151:45;9034:169;:::o;9209:366::-;9351:3;9372:67;9436:2;9431:3;9372:67;:::i;:::-;9365:74;;9448:93;9537:3;9448:93;:::i;:::-;9566:2;9561:3;9557:12;9550:19;;9209:366;;;:::o;9581:419::-;9747:4;9785:2;9774:9;9770:18;9762:26;;9834:9;9828:4;9824:20;9820:1;9809:9;9805:17;9798:47;9862:131;9988:4;9862:131;:::i;:::-;9854:139;;9581:419;;;:::o;10006:180::-;10054:77;10051:1;10044:88;10151:4;10148:1;10141:15;10175:4;10172:1;10165:15;10192:233;10231:3;10254:24;10272:5;10254:24;:::i;:::-;10245:33;;10300:66;10293:5;10290:77;10287:103;;10370:18;;:::i;:::-;10287:103;10417:1;10410:5;10406:13;10399:20;;10192:233;;;:::o;10431:648::-;10628:4;10666:3;10655:9;10651:19;10643:27;;10680:67;10744:1;10733:9;10729:17;10720:6;10680:67;:::i;:::-;10757:68;10821:2;10810:9;10806:18;10797:6;10757:68;:::i;:::-;10835:72;10903:2;10892:9;10888:18;10879:6;10835:72;:::i;:::-;10917;10985:2;10974:9;10970:18;10961:6;10917:72;:::i;:::-;10999:73;11067:3;11056:9;11052:19;11043:6;10999:73;:::i;:::-;10431:648;;;;;;;;:::o;11085:181::-;11225:33;11221:1;11213:6;11209:14;11202:57;11085:181;:::o;11272:366::-;11414:3;11435:67;11499:2;11494:3;11435:67;:::i;:::-;11428:74;;11511:93;11600:3;11511:93;:::i;:::-;11629:2;11624:3;11620:12;11613:19;;11272:366;;;:::o;11644:419::-;11810:4;11848:2;11837:9;11833:18;11825:26;;11897:9;11891:4;11887:20;11883:1;11872:9;11868:17;11861:47;11925:131;12051:4;11925:131;:::i;:::-;11917:139;;11644:419;;;:::o;12069:332::-;12190:4;12228:2;12217:9;12213:18;12205:26;;12241:71;12309:1;12298:9;12294:17;12285:6;12241:71;:::i;:::-;12322:72;12390:2;12379:9;12375:18;12366:6;12322:72;:::i;:::-;12069:332;;;;;:::o;12407:442::-;12556:4;12594:2;12583:9;12579:18;12571:26;;12607:71;12675:1;12664:9;12660:17;12651:6;12607:71;:::i;:::-;12688:72;12756:2;12745:9;12741:18;12732:6;12688:72;:::i;:::-;12770;12838:2;12827:9;12823:18;12814:6;12770:72;:::i;:::-;12407:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "999600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(int24,int24,uint256,uint256)": "infinite",
								"currentTick()": "2426",
								"nextPositionId()": "2514",
								"owner()": "2514",
								"positions(uint256)": "infinite",
								"removeLiquidity(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"token0()": "infinite",
								"token1()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateCurrentTick(uint256)": "infinite"
							},
							"internal": {
								"_calculateLiquidity(uint256,uint256)": "63"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 601,
									"end": 5177,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1947,
									"end": 2323,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2031,
									"end": 2041,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2131,
									"end": 2132,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2112,
									"end": 2133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2112,
									"end": 2133,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2112,
									"end": 2119,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2112,
									"end": 2133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2112,
									"end": 2133,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2112,
									"end": 2133,
									"modifierDepth": 1,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2112,
									"end": 2133,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2112,
									"end": 2158,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2112,
									"end": 2158,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2112,
									"end": 2158,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2112,
									"end": 2158,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2112,
									"end": 2158,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2156,
									"end": 2157,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2137,
									"end": 2158,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2137,
									"end": 2158,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2137,
									"end": 2144,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2137,
									"end": 2158,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2137,
									"end": 2158,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2137,
									"end": 2158,
									"modifierDepth": 1,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2137,
									"end": 2158,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2112,
									"end": 2158,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2112,
									"end": 2158,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 2104,
									"end": 2184,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 2104,
									"end": 2184,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2210,
									"end": 2217,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2194,
									"end": 2218,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2194,
									"end": 2218,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2194,
									"end": 2218,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2194,
									"end": 2218,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2194,
									"end": 2218,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2194,
									"end": 2218,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2194,
									"end": 2218,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2194,
									"end": 2218,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2194,
									"end": 2218,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2194,
									"end": 2218,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2244,
									"end": 2251,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2228,
									"end": 2252,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2228,
									"end": 2252,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2228,
									"end": 2252,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 2228,
									"end": 2252,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2228,
									"end": 2252,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2228,
									"end": 2252,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2228,
									"end": 2252,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2228,
									"end": 2252,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2228,
									"end": 2252,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2228,
									"end": 2252,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2276,
									"end": 2288,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2262,
									"end": 2273,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2262,
									"end": 2288,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2262,
									"end": 2288,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2262,
									"end": 2288,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2262,
									"end": 2288,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2316,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2298,
									"end": 2312,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2298,
									"end": 2316,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2298,
									"end": 2316,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2298,
									"end": 2316,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2298,
									"end": 2316,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1947,
									"end": 2323,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1979,
									"end": 1984,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1961,
									"end": 1985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1956,
									"end": 1959,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1949,
									"end": 1986,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1874,
									"end": 1992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2091,
									"end": 2095,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2129,
									"end": 2131,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2118,
									"end": 2127,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2114,
									"end": 2132,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2210,
									"end": 2211,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2199,
									"end": 2208,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2195,
									"end": 2212,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2186,
									"end": 2192,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2142,
									"end": 2213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2220,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2310,
									"end": 2321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2344,
									"end": 2350,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2339,
									"end": 2342,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2332,
									"end": 2351,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2384,
									"end": 2388,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2379,
									"end": 2382,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2375,
									"end": 2389,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2360,
									"end": 2389,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2360,
									"end": 2389,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2226,
									"end": 2395,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2401,
									"end": 2572,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 2401,
									"end": 2572,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2541,
									"end": 2564,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 2537,
									"end": 2538,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2529,
									"end": 2535,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2525,
									"end": 2539,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2518,
									"end": 2565,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2401,
									"end": 2572,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2401,
									"end": 2572,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2578,
									"end": 2944,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 2578,
									"end": 2944,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2720,
									"end": 2723,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2741,
									"end": 2808,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 2805,
									"end": 2807,
									"name": "PUSH",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2800,
									"end": 2803,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2741,
									"end": 2808,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2741,
									"end": 2808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2741,
									"end": 2808,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 2741,
									"end": 2808,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2734,
									"end": 2808,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2734,
									"end": 2808,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2817,
									"end": 2910,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2909,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2817,
									"end": 2910,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 2817,
									"end": 2910,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2817,
									"end": 2910,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2817,
									"end": 2910,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2935,
									"end": 2937,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2933,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2926,
									"end": 2938,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2938,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2938,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2578,
									"end": 2944,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2578,
									"end": 2944,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2578,
									"end": 2944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2578,
									"end": 2944,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2950,
									"end": 3369,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 2950,
									"end": 3369,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3116,
									"end": 3120,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3154,
									"end": 3156,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3143,
									"end": 3152,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3139,
									"end": 3157,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3131,
									"end": 3157,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3131,
									"end": 3157,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3203,
									"end": 3212,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3197,
									"end": 3201,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3193,
									"end": 3213,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3190,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3178,
									"end": 3187,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3174,
									"end": 3191,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3167,
									"end": 3214,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3231,
									"end": 3362,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 3357,
									"end": 3361,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3231,
									"end": 3362,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 3231,
									"end": 3362,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3231,
									"end": 3362,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 3231,
									"end": 3362,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3223,
									"end": 3362,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3223,
									"end": 3362,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2950,
									"end": 3369,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2950,
									"end": 3369,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2950,
									"end": 3369,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2950,
									"end": 3369,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "852"
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "849"
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 601,
									"end": 5177,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220233403ce7f6fc1abff3174073dd40fad6449221ddba9d611bc6a5f50a6673da964736f6c634300081d0033",
									".code": [
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "99FBAB88"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "9C8F9F23"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "D21220A7"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "FD87F9AA"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "65E5360"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "DFE1681"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "291DF278"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "899346C7"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 5177,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 843,
											"end": 869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 843,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 843,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 843,
											"end": 869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 869,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 843,
											"end": 869,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 843,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 843,
											"end": 869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 869,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 703,
											"end": 733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 703,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 703,
											"end": 733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 703,
											"end": 733,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 703,
											"end": 733,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 703,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 703,
											"end": 733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 703,
											"end": 733,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 5032,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5032,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1241,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1241,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1190,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1190,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4321,
											"end": 4897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4321,
											"end": 4897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 739,
											"end": 769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 739,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 739,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 739,
											"end": 769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 769,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 739,
											"end": 769,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 739,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 739,
											"end": 769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 769,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 3094,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 3094,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 3094,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 843,
											"end": 869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 843,
											"end": 869,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 843,
											"end": 869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "849"
										},
										{
											"begin": 703,
											"end": 733,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 703,
											"end": 733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5119,
											"end": 5126,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5105,
											"end": 5116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5105,
											"end": 5126,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5105,
											"end": 5126,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5105,
											"end": 5126,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5105,
											"end": 5126,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "CA2410361DF736E1AF5D81999E916CEC0B435BF16BC69B5A209BE194F88BEC4D"
										},
										{
											"begin": 5160,
											"end": 5167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 5141,
											"end": 5168,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5141,
											"end": 5168,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4420,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4430,
											"end": 4440,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4441,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4420,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4441,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4420,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4441,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4441,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4482,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4459,
											"end": 4482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4462,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4459,
											"end": 4468,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4468,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4459,
											"end": 4482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4482,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 4451,
											"end": 4505,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 4451,
											"end": 4505,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4539,
											"end": 4540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4526,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4523,
											"end": 4536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 4523,
											"end": 4536,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4523,
											"end": 4536,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4523,
											"end": 4540,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 4515,
											"end": 4569,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 4515,
											"end": 4569,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4639,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4640,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4710,
											"end": 4754,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 4730,
											"end": 4740,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4742,
											"end": 4745,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4742,
											"end": 4753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4742,
											"end": 4753,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4742,
											"end": 4753,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4710,
											"end": 4716,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "849"
										},
										{
											"begin": 4710,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4710,
											"end": 4729,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4710,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 4710,
											"end": 4729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4710,
											"end": 4754,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4710,
											"end": 4754,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4710,
											"end": 4754,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4710,
											"end": 4754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4710,
											"end": 4754,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4710,
											"end": 4754,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4710,
											"end": 4754,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 4710,
											"end": 4754,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4764,
											"end": 4808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 4784,
											"end": 4794,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4796,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4796,
											"end": 4807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4796,
											"end": 4807,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4796,
											"end": 4807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4764,
											"end": 4770,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "852"
										},
										{
											"begin": 4764,
											"end": 4783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4764,
											"end": 4783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4764,
											"end": 4783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 4764,
											"end": 4783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4764,
											"end": 4808,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4764,
											"end": 4808,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4764,
											"end": 4808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4764,
											"end": 4808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4764,
											"end": 4808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4764,
											"end": 4808,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4764,
											"end": 4808,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 4764,
											"end": 4808,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4863,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4841,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "196A4BF617B45641F176C4E6D288CCF7498F1699F68B1CC1E4DAADF92779703B"
										},
										{
											"begin": 4865,
											"end": 4868,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4865,
											"end": 4876,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4876,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 4881,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 4889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4878,
											"end": 4889,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 4889,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 4824,
											"end": 4890,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4890,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4897,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4321,
											"end": 4897,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 739,
											"end": 769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "852"
										},
										{
											"begin": 739,
											"end": 769,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 739,
											"end": 769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3312,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3291,
											"end": 3312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3291,
											"end": 3312,
											"modifierDepth": 1,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 3291,
											"end": 3300,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3291,
											"end": 3312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3291,
											"end": 3312,
											"modifierDepth": 1,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 3291,
											"end": 3312,
											"modifierDepth": 1,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3283,
											"end": 3335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3283,
											"end": 3335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3363,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3353,
											"end": 3360,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3364,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3379,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3379,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 3353,
											"end": 3379,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3378,
											"end": 3379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3375,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3379,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3379,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 3353,
											"end": 3379,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 3345,
											"end": 3403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3345,
											"end": 3403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3536,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3501,
											"end": 3511,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3521,
											"end": 3525,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3528,
											"end": 3535,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "849"
										},
										{
											"begin": 3477,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3477,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3477,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3536,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3536,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3536,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3477,
											"end": 3536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3536,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3536,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3477,
											"end": 3536,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3570,
											"end": 3580,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3590,
											"end": 3594,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3597,
											"end": 3604,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3552,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "852"
										},
										{
											"begin": 3546,
											"end": 3569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3546,
											"end": 3569,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3546,
											"end": 3569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3605,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3605,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3605,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3605,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3546,
											"end": 3605,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3605,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3605,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3546,
											"end": 3605,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3673,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 3656,
											"end": 3663,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 3672,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3636,
											"end": 3655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 3636,
											"end": 3673,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3636,
											"end": 3673,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 3636,
											"end": 3673,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3673,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3697,
											"end": 3711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3713,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3713,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3713,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3713,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3713,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3713,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 3697,
											"end": 3713,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 3697,
											"end": 3713,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3713,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 3697,
											"end": 3713,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3713,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3713,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3713,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3713,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3684,
											"end": 3713,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3684,
											"end": 3713,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3774,
											"end": 3784,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3815,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3840,
											"end": 3849,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3883,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 3913,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3936,
											"end": 3943,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 3977,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 3988,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3723,
											"end": 3744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3743,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3744,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3744,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3723,
											"end": 3744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3744,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3744,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3744,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3723,
											"end": 3744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3744,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4041,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4029,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "19C7FD3F52FF46F3DAB96FF8AC8BE59679992761324C4E0907C78CB7A4B8865C"
										},
										{
											"begin": 4043,
											"end": 4052,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4054,
											"end": 4063,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4065,
											"end": 4072,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4074,
											"end": 4081,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4092,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4004,
											"end": 4093,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4093,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 4100,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 4100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2628,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2472,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2601,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2591,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2601,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 2584,
											"end": 2621,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2614,
											"end": 2621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 2584,
											"end": 2621,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2621,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 2584,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2604,
											"end": 2611,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2621,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 2584,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2577,
											"end": 2621,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2577,
											"end": 2621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2628,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 574,
											"end": 634,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 574,
											"end": 634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 602,
											"end": 605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 616,
											"end": 628,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 616,
											"end": 628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 574,
											"end": 634,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 574,
											"end": 634,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 574,
											"end": 634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 574,
											"end": 634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 640,
											"end": 782,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 640,
											"end": 782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 690,
											"end": 699,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 750,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 750,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 750,
											"end": 774,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 750,
											"end": 774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 741,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 741,
											"end": 775,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 723,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 723,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 723,
											"end": 776,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 723,
											"end": 776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 710,
											"end": 776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 710,
											"end": 776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 640,
											"end": 782,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 640,
											"end": 782,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 640,
											"end": 782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 640,
											"end": 782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 788,
											"end": 914,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 788,
											"end": 914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 902,
											"end": 907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 871,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 871,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 871,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 871,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 858,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 858,
											"end": 908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 788,
											"end": 914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 788,
											"end": 914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 788,
											"end": 914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 788,
											"end": 914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 984,
											"end": 993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1017,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1017,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1004,
											"end": 1054,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1004,
											"end": 1054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 920,
											"end": 1060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 920,
											"end": 1060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 1212,
											"end": 1217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 1167,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 1167,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1165,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1155,
											"end": 1219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1378,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1379,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1389,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 1389,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 1568,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1936,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1814,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 1905,
											"end": 1910,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 1887,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 1885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1877,
											"end": 1912,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1927,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1928,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 1993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2033,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2033,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2069,
											"end": 2074,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 2042,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 2042,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 2081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2197,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2192,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2170,
											"end": 2193,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2201,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 2201,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 2163,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2391,
											"end": 2398,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2389,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2346,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 2346,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2399,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2292,
											"end": 2409,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 2506,
											"end": 2511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 2488,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2611,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2606,
											"end": 2609,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2636,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2741,
											"end": 2745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2792,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2966,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2876,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2911,
											"end": 2918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2951,
											"end": 2952,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2940,
											"end": 2960,
											"name": "SIGNEXTEND",
											"source": 10
										},
										{
											"begin": 2929,
											"end": 2960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2929,
											"end": 2960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2966,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2966,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2966,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3084,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 2972,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3055,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 3071,
											"end": 3076,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3055,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3055,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3055,
											"end": 3077,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 3055,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3053,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3043,
											"end": 3078,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3960,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3343,
											"end": 3347,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3384,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3370,
											"end": 3379,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3366,
											"end": 3385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3358,
											"end": 3385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3358,
											"end": 3385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 3463,
											"end": 3464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3461,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3445,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 3395,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3466,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 3395,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 3544,
											"end": 3546,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3533,
											"end": 3542,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3529,
											"end": 3547,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3520,
											"end": 3526,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3476,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3558,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 3622,
											"end": 3624,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3611,
											"end": 3620,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3598,
											"end": 3604,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3558,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3558,
											"end": 3626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3558,
											"end": 3626,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 3558,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3700,
											"end": 3702,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3689,
											"end": 3698,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3685,
											"end": 3703,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3676,
											"end": 3682,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3636,
											"end": 3704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3704,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 3636,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3782,
											"end": 3785,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 3714,
											"end": 3787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3787,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3714,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 3865,
											"end": 3868,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3854,
											"end": 3863,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3841,
											"end": 3847,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 3797,
											"end": 3870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3870,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 3797,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 3948,
											"end": 3951,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 3937,
											"end": 3946,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 3952,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3924,
											"end": 3930,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 3880,
											"end": 3953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3953,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 3880,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3960,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3960,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3966,
											"end": 4088,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 3966,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4039,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4057,
											"end": 4062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4039,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 4039,
											"end": 4063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4039,
											"end": 4063,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4039,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4032,
											"end": 4037,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4064,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4019,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4019,
											"end": 4082,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4078,
											"end": 4079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4076,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4080,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4019,
											"end": 4082,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4019,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3966,
											"end": 4088,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3966,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4094,
											"end": 4233,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 4094,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4145,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4178,
											"end": 4184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4185,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4156,
											"end": 4185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4156,
											"end": 4185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 4221,
											"end": 4226,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4194,
											"end": 4227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4094,
											"end": 4233,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4094,
											"end": 4233,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4094,
											"end": 4233,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4094,
											"end": 4233,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4094,
											"end": 4233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4568,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4239,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4304,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4349,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4335,
											"end": 4344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4326,
											"end": 4333,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4322,
											"end": 4345,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4350,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4315,
											"end": 4434,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4315,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 4315,
											"end": 4434,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 4353,
											"end": 4432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 4353,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4315,
											"end": 4434,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 4315,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 4543,
											"end": 4550,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4519,
											"end": 4541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4498,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 4498,
											"end": 4551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4498,
											"end": 4551,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 4498,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4551,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4444,
											"end": 4561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4568,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4692,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 4574,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4645,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 4661,
											"end": 4666,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4645,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4645,
											"end": 4667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4645,
											"end": 4667,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 4645,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4638,
											"end": 4643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4668,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4625,
											"end": 4686,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4682,
											"end": 4683,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4679,
											"end": 4680,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4672,
											"end": 4684,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 4686,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4625,
											"end": 4686,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4692,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4574,
											"end": 4692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4833,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 4698,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4742,
											"end": 4747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4787,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4758,
											"end": 4787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 4821,
											"end": 4826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 4796,
											"end": 4827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4827,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 4796,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4833,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4833,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 5596,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 4839,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4927,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4929,
											"end": 4935,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4937,
											"end": 4943,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4945,
											"end": 4951,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 4997,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4982,
											"end": 4991,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4973,
											"end": 4980,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 4992,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4965,
											"end": 4998,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4962,
											"end": 5082,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4962,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 4962,
											"end": 5082,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5001,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5001,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 5001,
											"end": 5080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5001,
											"end": 5080,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5001,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4962,
											"end": 5082,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 4962,
											"end": 5082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 5189,
											"end": 5196,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5178,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 5146,
											"end": 5197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5197,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 5146,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5197,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5246,
											"end": 5248,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 5315,
											"end": 5322,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5295,
											"end": 5304,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5291,
											"end": 5313,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5272,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 5272,
											"end": 5323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5272,
											"end": 5323,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 5272,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5262,
											"end": 5323,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5262,
											"end": 5323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5217,
											"end": 5333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5372,
											"end": 5374,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5398,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 5443,
											"end": 5450,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5434,
											"end": 5440,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5419,
											"end": 5441,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5398,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5398,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5398,
											"end": 5451,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 5398,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5388,
											"end": 5451,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5388,
											"end": 5451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5343,
											"end": 5461,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5502,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5526,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 5571,
											"end": 5578,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5562,
											"end": 5568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5551,
											"end": 5560,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5547,
											"end": 5569,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5526,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5526,
											"end": 5579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5526,
											"end": 5579,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 5526,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 5579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 5579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5471,
											"end": 5589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 5596,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 5596,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 5596,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 5596,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 5596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 5596,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 5596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 5596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5602,
											"end": 5771,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 5602,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5686,
											"end": 5697,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5726,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5715,
											"end": 5718,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5708,
											"end": 5727,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5760,
											"end": 5764,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5755,
											"end": 5758,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5751,
											"end": 5765,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5602,
											"end": 5771,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5602,
											"end": 5771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5602,
											"end": 5771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5602,
											"end": 5771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5602,
											"end": 5771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5945,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 5777,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5937,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420706F736974696F6E206F776E65720000000000000000000000000000"
										},
										{
											"begin": 5913,
											"end": 5914,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5905,
											"end": 5911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5901,
											"end": 5915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5894,
											"end": 5938,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5951,
											"end": 6317,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 5951,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6093,
											"end": 6096,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 6178,
											"end": 6180,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6173,
											"end": 6176,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6114,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 6114,
											"end": 6181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6114,
											"end": 6181,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 6114,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6107,
											"end": 6181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6107,
											"end": 6181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 6279,
											"end": 6282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 6190,
											"end": 6283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6283,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 6190,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6308,
											"end": 6310,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6303,
											"end": 6306,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6299,
											"end": 6311,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6311,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5951,
											"end": 6317,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5951,
											"end": 6317,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5951,
											"end": 6317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5951,
											"end": 6317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6742,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 6323,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6489,
											"end": 6493,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6529,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6516,
											"end": 6525,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6512,
											"end": 6530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6504,
											"end": 6530,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6504,
											"end": 6530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6576,
											"end": 6585,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6570,
											"end": 6574,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6566,
											"end": 6586,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6560,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6547,
											"end": 6564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6540,
											"end": 6587,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6604,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 6730,
											"end": 6734,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6604,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 6604,
											"end": 6735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6604,
											"end": 6735,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 6604,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6596,
											"end": 6735,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6596,
											"end": 6735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6742,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6323,
											"end": 6742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6748,
											"end": 6922,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 6748,
											"end": 6922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "PUSH",
											"source": 10,
											"value": "506F736974696F6E20616C72656164792072656D6F7665640000000000000000"
										},
										{
											"begin": 6884,
											"end": 6885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6876,
											"end": 6882,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6872,
											"end": 6886,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6915,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6748,
											"end": 6922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6748,
											"end": 6922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6928,
											"end": 7294,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 6928,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7073,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7091,
											"end": 7158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 7155,
											"end": 7157,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 7150,
											"end": 7153,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 7091,
											"end": 7158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7158,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 7091,
											"end": 7158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7158,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7158,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7167,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 7256,
											"end": 7259,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7167,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 7167,
											"end": 7260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7167,
											"end": 7260,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 7167,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7285,
											"end": 7287,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7280,
											"end": 7283,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7288,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7269,
											"end": 7288,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7269,
											"end": 7288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6928,
											"end": 7294,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6928,
											"end": 7294,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6928,
											"end": 7294,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6928,
											"end": 7294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7300,
											"end": 7719,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 7300,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7466,
											"end": 7470,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7504,
											"end": 7506,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7493,
											"end": 7502,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7489,
											"end": 7507,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7481,
											"end": 7507,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7481,
											"end": 7507,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7547,
											"end": 7551,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7543,
											"end": 7563,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7539,
											"end": 7540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7537,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7524,
											"end": 7541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7517,
											"end": 7564,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 7707,
											"end": 7711,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 7581,
											"end": 7712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7712,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 7581,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7573,
											"end": 7712,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7573,
											"end": 7712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7300,
											"end": 7719,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7300,
											"end": 7719,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7300,
											"end": 7719,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7300,
											"end": 7719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 8057,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 7725,
											"end": 8057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7846,
											"end": 7850,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7884,
											"end": 7886,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7873,
											"end": 7882,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7869,
											"end": 7887,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7861,
											"end": 7887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7861,
											"end": 7887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 7965,
											"end": 7966,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7954,
											"end": 7963,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7950,
											"end": 7967,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7941,
											"end": 7947,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 7897,
											"end": 7968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7968,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 7897,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 8046,
											"end": 8048,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8035,
											"end": 8044,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8031,
											"end": 8049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8022,
											"end": 8028,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 7978,
											"end": 8050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 7978,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 8057,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 8057,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 8057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 8057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 8057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 8057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8063,
											"end": 8231,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 8063,
											"end": 8231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8203,
											"end": 8223,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C6964207469636B2072616E67650000000000000000000000000000"
										},
										{
											"begin": 8199,
											"end": 8200,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8191,
											"end": 8197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8187,
											"end": 8201,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8180,
											"end": 8224,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8063,
											"end": 8231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8063,
											"end": 8231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8603,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 8237,
											"end": 8603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8379,
											"end": 8382,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 8464,
											"end": 8466,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 8459,
											"end": 8462,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8400,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 8400,
											"end": 8467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8400,
											"end": 8467,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 8400,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8393,
											"end": 8467,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8393,
											"end": 8467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 8565,
											"end": 8568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 8476,
											"end": 8569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 8476,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 8596,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8585,
											"end": 8597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8603,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8603,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8603,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8237,
											"end": 8603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8609,
											"end": 9028,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 8609,
											"end": 9028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8775,
											"end": 8779,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8815,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8802,
											"end": 8811,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8798,
											"end": 8816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8862,
											"end": 8871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8860,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8852,
											"end": 8872,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8848,
											"end": 8849,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8837,
											"end": 8846,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8833,
											"end": 8850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8826,
											"end": 8873,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8890,
											"end": 9021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 9016,
											"end": 9020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8890,
											"end": 9021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 8890,
											"end": 9021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8890,
											"end": 9021,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 8890,
											"end": 9021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8882,
											"end": 9021,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8882,
											"end": 9021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8609,
											"end": 9028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8609,
											"end": 9028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8609,
											"end": 9028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8609,
											"end": 9028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9034,
											"end": 9203,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 9034,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9195,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E7473206D757374206265203E203000000000000000000000000000"
										},
										{
											"begin": 9170,
											"end": 9171,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9162,
											"end": 9168,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9158,
											"end": 9172,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9151,
											"end": 9196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9034,
											"end": 9203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9034,
											"end": 9203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9209,
											"end": 9575,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 9209,
											"end": 9575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9372,
											"end": 9439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 9436,
											"end": 9438,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 9431,
											"end": 9434,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9372,
											"end": 9439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 9372,
											"end": 9439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9372,
											"end": 9439,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 9372,
											"end": 9439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9365,
											"end": 9439,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9365,
											"end": 9439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 9537,
											"end": 9540,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 9448,
											"end": 9541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9448,
											"end": 9541,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 9448,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9566,
											"end": 9568,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9561,
											"end": 9564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9569,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9550,
											"end": 9569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9550,
											"end": 9569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9209,
											"end": 9575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9209,
											"end": 9575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9209,
											"end": 9575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9209,
											"end": 9575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9581,
											"end": 10000,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 9581,
											"end": 10000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9747,
											"end": 9751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9785,
											"end": 9787,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9774,
											"end": 9783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9770,
											"end": 9788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9762,
											"end": 9788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9762,
											"end": 9788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9834,
											"end": 9843,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9828,
											"end": 9832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9824,
											"end": 9844,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9820,
											"end": 9821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9809,
											"end": 9818,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9805,
											"end": 9822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9798,
											"end": 9845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 9988,
											"end": 9992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 9862,
											"end": 9993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9993,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 9862,
											"end": 9993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 9993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9581,
											"end": 10000,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9581,
											"end": 10000,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9581,
											"end": 10000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9581,
											"end": 10000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10186,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 10006,
											"end": 10186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10054,
											"end": 10131,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10051,
											"end": 10052,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10044,
											"end": 10132,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10151,
											"end": 10155,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 10148,
											"end": 10149,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10141,
											"end": 10156,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10175,
											"end": 10179,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10172,
											"end": 10173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10165,
											"end": 10180,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10192,
											"end": 10425,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 10192,
											"end": 10425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10231,
											"end": 10234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 10272,
											"end": 10277,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10254,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 10254,
											"end": 10278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10254,
											"end": 10278,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 10254,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10245,
											"end": 10278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10300,
											"end": 10366,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10293,
											"end": 10298,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10290,
											"end": 10367,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10287,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10287,
											"end": 10390,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10370,
											"end": 10388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 10370,
											"end": 10388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 10370,
											"end": 10388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10370,
											"end": 10388,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 10370,
											"end": 10388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10287,
											"end": 10390,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10287,
											"end": 10390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10417,
											"end": 10418,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10410,
											"end": 10415,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10406,
											"end": 10419,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10399,
											"end": 10419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10399,
											"end": 10419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10192,
											"end": 10425,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10192,
											"end": 10425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10192,
											"end": 10425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10192,
											"end": 10425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 11079,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 10431,
											"end": 11079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10628,
											"end": 10632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10666,
											"end": 10669,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 10655,
											"end": 10664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10643,
											"end": 10670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10643,
											"end": 10670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10680,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 10744,
											"end": 10745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10733,
											"end": 10742,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10729,
											"end": 10746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10720,
											"end": 10726,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 10680,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 10680,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10680,
											"end": 10747,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 10680,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10757,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 10821,
											"end": 10823,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10810,
											"end": 10819,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10797,
											"end": 10803,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10757,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 10757,
											"end": 10825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10757,
											"end": 10825,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 10757,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10835,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 10903,
											"end": 10905,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10892,
											"end": 10901,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10888,
											"end": 10906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10879,
											"end": 10885,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10835,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 10835,
											"end": 10907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10835,
											"end": 10907,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 10835,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 10989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 10985,
											"end": 10987,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10974,
											"end": 10983,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10970,
											"end": 10988,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10961,
											"end": 10967,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 10989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 10917,
											"end": 10989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 10989,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 10917,
											"end": 10989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10999,
											"end": 11072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11056,
											"end": 11065,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11052,
											"end": 11071,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11043,
											"end": 11049,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10999,
											"end": 11072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 10999,
											"end": 11072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10999,
											"end": 11072,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 10999,
											"end": 11072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 11079,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 11079,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 11079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 11079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 11079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 11079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 11079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 11079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 11079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11085,
											"end": 11266,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 11085,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11225,
											"end": 11258,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11221,
											"end": 11222,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11213,
											"end": 11219,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11223,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11202,
											"end": 11259,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11085,
											"end": 11266,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11085,
											"end": 11266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11272,
											"end": 11638,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 11272,
											"end": 11638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11414,
											"end": 11417,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11435,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 11499,
											"end": 11501,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 11494,
											"end": 11497,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11435,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 11435,
											"end": 11502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11435,
											"end": 11502,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 11435,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11428,
											"end": 11502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11428,
											"end": 11502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11511,
											"end": 11604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 11600,
											"end": 11603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11511,
											"end": 11604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 11511,
											"end": 11604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11511,
											"end": 11604,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 11511,
											"end": 11604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11629,
											"end": 11631,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11624,
											"end": 11627,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11620,
											"end": 11632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11272,
											"end": 11638,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11272,
											"end": 11638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11272,
											"end": 11638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11272,
											"end": 11638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 12063,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 11644,
											"end": 12063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11810,
											"end": 11814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11848,
											"end": 11850,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11837,
											"end": 11846,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11833,
											"end": 11851,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11825,
											"end": 11851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11825,
											"end": 11851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11897,
											"end": 11906,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11891,
											"end": 11895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11887,
											"end": 11907,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11883,
											"end": 11884,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11872,
											"end": 11881,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11868,
											"end": 11885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11861,
											"end": 11908,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11925,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 12051,
											"end": 12055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11925,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 11925,
											"end": 12056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11925,
											"end": 12056,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 11925,
											"end": 12056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11917,
											"end": 12056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11917,
											"end": 12056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 12063,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 12063,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 12063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 12063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12069,
											"end": 12401,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 12069,
											"end": 12401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12228,
											"end": 12230,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12217,
											"end": 12226,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12213,
											"end": 12231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12205,
											"end": 12231,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12205,
											"end": 12231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12241,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 12309,
											"end": 12310,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12298,
											"end": 12307,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12294,
											"end": 12311,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 12291,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12241,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 12241,
											"end": 12312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12241,
											"end": 12312,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 12241,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12322,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 12390,
											"end": 12392,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12379,
											"end": 12388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12375,
											"end": 12393,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12372,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12322,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 12322,
											"end": 12394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12322,
											"end": 12394,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 12322,
											"end": 12394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12069,
											"end": 12401,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12069,
											"end": 12401,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12069,
											"end": 12401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12069,
											"end": 12401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12069,
											"end": 12401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12069,
											"end": 12401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12407,
											"end": 12849,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 12407,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12556,
											"end": 12560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12594,
											"end": 12596,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12583,
											"end": 12592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12579,
											"end": 12597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12571,
											"end": 12597,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12571,
											"end": 12597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12607,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 12675,
											"end": 12676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12664,
											"end": 12673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12660,
											"end": 12677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12651,
											"end": 12657,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12607,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 12607,
											"end": 12678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12607,
											"end": 12678,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 12607,
											"end": 12678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 12756,
											"end": 12758,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12745,
											"end": 12754,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12741,
											"end": 12759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12732,
											"end": 12738,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 12688,
											"end": 12760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12760,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 12688,
											"end": 12760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12770,
											"end": 12842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 12838,
											"end": 12840,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12827,
											"end": 12836,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12814,
											"end": 12820,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12770,
											"end": 12842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 12770,
											"end": 12842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12770,
											"end": 12842,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 12770,
											"end": 12842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12407,
											"end": 12849,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 12407,
											"end": 12849,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12407,
											"end": 12849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12407,
											"end": 12849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12407,
											"end": 12849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12407,
											"end": 12849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12407,
											"end": 12849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"C/concentrated liquidity .sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(int24,int24,uint256,uint256)": "fd87f9aa",
							"currentTick()": "065e5360",
							"nextPositionId()": "899346c7",
							"owner()": "8da5cb5b",
							"positions(uint256)": "99fbab88",
							"removeLiquidity(uint256)": "9c8f9f23",
							"renounceOwnership()": "715018a6",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"transferOwnership(address)": "f2fde38b",
							"updateCurrentTick(uint256)": "291df278"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initialTick\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTick\",\"type\":\"uint256\"}],\"name\":\"CurrentTickUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"lowerTick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"upperTick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"lowerTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"upperTick\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPositionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"lowerTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"upperTick\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTick\",\"type\":\"uint256\"}],\"name\":\"updateCurrentTick\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"addLiquidity(int24,int24,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 to deposit.\",\"amount1\":\"The amount of token1 to deposit.\",\"lowerTick\":\"The lower bound of the tick range.\",\"upperTick\":\"The upper bound of the tick range.\"},\"returns\":{\"positionId\":\"The unique ID of the created liquidity position.\"}},\"constructor\":{\"params\":{\"_initialTick\":\"The initial price tick.\",\"_token0\":\"Address of the first token.\",\"_token1\":\"Address of the second token.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeLiquidity(uint256)\":{\"params\":{\"positionId\":\"The ID of the position to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateCurrentTick(uint256)\":{\"params\":{\"newTick\":\"The new tick value.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(int24,int24,uint256,uint256)\":{\"notice\":\"Allows a user to add liquidity within a specified tick range. The user must have approved this contract to transfer the tokens.\"},\"constructor\":{\"notice\":\"Constructor sets the addresses for token0 and token1 and an initial tick.\"},\"removeLiquidity(uint256)\":{\"notice\":\"Allows the owner of a liquidity position to remove their liquidity. The position is deleted and the deposited tokens are returned.\"},\"updateCurrentTick(uint256)\":{\"notice\":\"Updates the current tick (price). Only the owner can update the tick.\"}},\"notice\":\"ConcentratedLiquidityPool allows liquidity providers to deposit token0 and token1 and concentrate their liquidity in a specified tick range (price range). This example calculates liquidity in a simplified manner (using the minimum of the provided amounts).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"C/concentrated liquidity .sol\":\"ConcentratedLiquidityPool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"C/concentrated liquidity .sol\":{\"keccak256\":\"0x485de47500a506eb1244740849b4ac8cf972972c002eaba822f404f3edf964cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6281381850edeab4ff64245674d58c2f1056e870ff196aa776a882d801d8c57e\",\"dweb:/ipfs/QmaZzJ5xU11mQDhBkE4PoDhSYo4zX1y18Q79SzFUUtehNR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "C/concentrated liquidity .sol:ConcentratedLiquidityPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "C/concentrated liquidity .sol:ConcentratedLiquidityPool",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 854,
								"contract": "C/concentrated liquidity .sol:ConcentratedLiquidityPool",
								"label": "currentTick",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 874,
								"contract": "C/concentrated liquidity .sol:ConcentratedLiquidityPool",
								"label": "positions",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(Position)869_storage)"
							},
							{
								"astId": 876,
								"contract": "C/concentrated liquidity .sol:ConcentratedLiquidityPool",
								"label": "nextPositionId",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_int24": {
								"encoding": "inplace",
								"label": "int24",
								"numberOfBytes": "3"
							},
							"t_mapping(t_uint256,t_struct(Position)869_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ConcentratedLiquidityPool.Position)",
								"numberOfBytes": "32",
								"value": "t_struct(Position)869_storage"
							},
							"t_struct(Position)869_storage": {
								"encoding": "inplace",
								"label": "struct ConcentratedLiquidityPool.Position",
								"members": [
									{
										"astId": 856,
										"contract": "C/concentrated liquidity .sol:ConcentratedLiquidityPool",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 858,
										"contract": "C/concentrated liquidity .sol:ConcentratedLiquidityPool",
										"label": "owner",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 860,
										"contract": "C/concentrated liquidity .sol:ConcentratedLiquidityPool",
										"label": "lowerTick",
										"offset": 20,
										"slot": "1",
										"type": "t_int24"
									},
									{
										"astId": 862,
										"contract": "C/concentrated liquidity .sol:ConcentratedLiquidityPool",
										"label": "upperTick",
										"offset": 23,
										"slot": "1",
										"type": "t_int24"
									},
									{
										"astId": 864,
										"contract": "C/concentrated liquidity .sol:ConcentratedLiquidityPool",
										"label": "amount0",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 866,
										"contract": "C/concentrated liquidity .sol:ConcentratedLiquidityPool",
										"label": "amount1",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 868,
										"contract": "C/concentrated liquidity .sol:ConcentratedLiquidityPool",
										"label": "liquidity",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addLiquidity(int24,int24,uint256,uint256)": {
								"notice": "Allows a user to add liquidity within a specified tick range. The user must have approved this contract to transfer the tokens."
							},
							"constructor": {
								"notice": "Constructor sets the addresses for token0 and token1 and an initial tick."
							},
							"removeLiquidity(uint256)": {
								"notice": "Allows the owner of a liquidity position to remove their liquidity. The position is deleted and the deposited tokens are returned."
							},
							"updateCurrentTick(uint256)": {
								"notice": "Updates the current tick (price). Only the owner can update the tick."
							}
						},
						"notice": "ConcentratedLiquidityPool allows liquidity providers to deposit token0 and token1 and concentrate their liquidity in a specified tick range (price range). This example calculates liquidity in a simplified manner (using the minimum of the provided amounts).",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							819
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 820,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 819,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 819,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								819
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 801,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							831
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 831,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								831,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							831
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 832,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 831,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							789
						]
					},
					"id": 790,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 790,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 790,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 789,
							"linearizedBaseContracts": [
								789
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 789,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 789,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "2548:139:6",
										"statements": [
											{
												"assignments": [
													464
												],
												"declarations": [
													{
														"constant": false,
														"id": 464,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "2558:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 463,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 469,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$789",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$789",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2612:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2581:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "2581:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 475,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2643:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 476,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2650:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 477,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "2659:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 478,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2674:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 474,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "2630:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2493:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2493:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2493:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2507:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2524:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:6"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:6"
									},
									"scope": 789,
									"src": "2462:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "3453:370:6",
										"statements": [
											{
												"id": 524,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:6",
												"statements": [
													{
														"assignments": [
															495
														],
														"declarations": [
															{
																"constant": false,
																"id": 495,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 524,
																"src": "3487:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 504,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 500,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$789",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$789",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 498,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 502,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3545:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 496,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3514:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "3514:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 505,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "3571:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 506,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "3590:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 515,
														"nodeType": "IfStatement",
														"src": "3567:160:6",
														"trueBody": {
															"id": 514,
															"nodeType": "Block",
															"src": "3609:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 509,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 489,
																				"src": "3667:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 510,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "3676:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 511,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "3694:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 508,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "3634:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 513,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 517,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3753:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 518,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3760:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 519,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "3769:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 520,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "3788:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 516,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "3740:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 523,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3386:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 485,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3386:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3386:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3400:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3417:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:6"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:6"
									},
									"scope": 789,
									"src": "3355:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "4477:303:6",
										"statements": [
											{
												"assignments": [
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "4487:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 537,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 541,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "4530:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "4530:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 543,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "4546:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 544,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4555:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 545,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 539,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:6"
											},
											{
												"condition": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 549,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "4602:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 550,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "4609:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 548,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "4578:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "4573:201:6",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "4624:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 554,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "4658:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 557,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "4680:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "4680:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 559,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 532,
																						"src": "4696:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 555,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 553,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4638:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 564,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 566,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "4743:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 567,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "4750:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 565,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4723:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 569,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4422:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 529,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 528,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4422:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4422:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4436:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4453:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:6"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:6"
									},
									"scope": 789,
									"src": "4400:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "5227:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 586,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "5241:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 600,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "5350:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 601,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5354:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 602,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5361:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 598,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "5328:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5328:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 613,
													"nodeType": "IfStatement",
													"src": "5323:117:6",
													"trueBody": {
														"id": 612,
														"nodeType": "Block",
														"src": "5368:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 608,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 577,
																					"src": "5422:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 606,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 605,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5389:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 611,
																"nodeType": "RevertStatement",
																"src": "5382:47:6"
															}
														]
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "5237:203:6",
												"trueBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "5262:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "5289:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 593,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "5296:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "5300:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 591,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5276:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 596,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5156:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 576,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 575,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5156:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5156:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5172:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5184:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5199:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:6"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:6"
									},
									"scope": 789,
									"src": "5124:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "5965:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 631,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "5979:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 646,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6102:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 647,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "6108:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 648,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6112:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 649,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6119:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 644,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "6076:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6076:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 660,
													"nodeType": "IfStatement",
													"src": "6071:127:6",
													"trueBody": {
														"id": 659,
														"nodeType": "Block",
														"src": "6126:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 655,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 620,
																					"src": "6180:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 654,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 653,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 652,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6147:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 658,
																"nodeType": "RevertStatement",
																"src": "6140:47:6"
															}
														]
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "5975:223:6",
												"trueBody": {
													"id": 643,
													"nodeType": "Block",
													"src": "6000:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "6031:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 638,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "6038:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "6044:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 640,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6048:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6014:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 642,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5843:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 619,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 618,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5843:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5843:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5867:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5889:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5909:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5932:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:6"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:6"
									},
									"scope": 789,
									"src": "5798:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "6971:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 676,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "6985:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 690,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "7093:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 691,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "7097:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 692,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "7104:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 688,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "7072:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7072:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 703,
													"nodeType": "IfStatement",
													"src": "7067:116:6",
													"trueBody": {
														"id": 702,
														"nodeType": "Block",
														"src": "7111:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 698,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 667,
																					"src": "7165:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 696,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 695,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7132:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 701,
																"nodeType": "RevertStatement",
																"src": "7125:47:6"
															}
														]
													}
												},
												"id": 704,
												"nodeType": "IfStatement",
												"src": "6981:202:6",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "7006:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 682,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "7033:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 683,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "7040:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 684,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "7044:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 681,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "7020:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6900:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 665,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6900:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6900:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6916:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6928:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6943:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 672,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:6"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:6"
									},
									"scope": 789,
									"src": "6869:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7756:650:6",
										"statements": [
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "7766:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 717,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:6"
											},
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "7794:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:6"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:6",
													"nodeType": "YulBlock",
													"src": "7848:396:6",
													"statements": [
														{
															"nativeSrc": "7862:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:6"
																		},
																		"nativeSrc": "7882:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:6",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:6"
																		},
																		"nativeSrc": "7899:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:6"
																		},
																		"nativeSrc": "7916:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:6"
																},
																"nativeSrc": "7877:60:6",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:6",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:6",
																"nodeType": "YulBlock",
																"src": "7998:157:6",
																"statements": [
																	{
																		"nativeSrc": "8016:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:6"
																			},
																			"nativeSrc": "8027:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:6"
																					},
																					"nativeSrc": "8078:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:6"
																			},
																			"nativeSrc": "8055:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:6"
																		},
																		"nativeSrc": "8055:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:6"
																					},
																					"nativeSrc": "8124:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:6"
																			},
																			"nativeSrc": "8112:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:6"
																		},
																		"nativeSrc": "8112:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:6"
																},
																"nativeSrc": "7982:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:6"
															},
															"nativeSrc": "7979:176:6",
															"nodeType": "YulIf",
															"src": "7979:176:6"
														},
														{
															"nativeSrc": "8168:30:6",
															"nodeType": "YulAssignment",
															"src": "8168:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:6"
																},
																"nativeSrc": "8182:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:6"
																}
															]
														},
														{
															"nativeSrc": "8211:23:6",
															"nodeType": "YulAssignment",
															"src": "8211:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:6"
																},
																"nativeSrc": "8226:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:6",
														"valueSize": 1
													},
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:6",
														"valueSize": 1
													},
													{
														"declaration": 716,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:6",
														"valueSize": 1
													},
													{
														"declaration": 719,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:6",
														"valueSize": 1
													},
													{
														"declaration": 710,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 721,
												"nodeType": "InlineAssembly",
												"src": "7823:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 722,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "8258:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 733,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "8310:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 727,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "8284:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 725,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "IfStatement",
												"src": "8254:146:6",
												"trueBody": {
													"id": 744,
													"nodeType": "Block",
													"src": "8328:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 740,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "8382:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 738,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 737,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "8349:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 743,
															"nodeType": "RevertStatement",
															"src": "8342:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7715:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 709,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 708,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "7715:6:6"
													},
													"referencedDeclaration": 380,
													"src": "7715:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7729:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:6"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:6"
									},
									"scope": 789,
									"src": "7686:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "8997:391:6",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9007:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 758,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 760,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:6"
											},
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9029:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:6"
											},
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9057:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 764,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:6",
													"nodeType": "YulBlock",
													"src": "9111:174:6",
													"statements": [
														{
															"nativeSrc": "9125:71:6",
															"nodeType": "YulAssignment",
															"src": "9125:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:6"
																		},
																		"nativeSrc": "9141:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:6"
																		},
																		"nativeSrc": "9158:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:6"
																		},
																		"nativeSrc": "9175:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:6"
																},
																"nativeSrc": "9136:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:6"
																}
															]
														},
														{
															"nativeSrc": "9209:30:6",
															"nodeType": "YulAssignment",
															"src": "9209:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:6"
																},
																"nativeSrc": "9223:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:6"
																}
															]
														},
														{
															"nativeSrc": "9252:23:6",
															"nodeType": "YulAssignment",
															"src": "9252:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:6"
																},
																"nativeSrc": "9267:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:6",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:6",
														"valueSize": 1
													},
													{
														"declaration": 762,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:6",
														"valueSize": 1
													},
													{
														"declaration": 759,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:6",
														"valueSize": 1
													},
													{
														"declaration": 751,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 767,
												"nodeType": "InlineAssembly",
												"src": "9086:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 768,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "9301:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 769,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "9313:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 780,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9364:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 774,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 751,
																						"src": "9339:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 773,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 772,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 784,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 757,
												"id": 786,
												"nodeType": "Return",
												"src": "9294:87:6"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8941:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 750,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 749,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8941:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8941:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8955:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:6"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8991:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:6"
									},
									"scope": 789,
									"src": "8908:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 790,
							"src": "698:8692:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							819
						]
					},
					"id": 820,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 791,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 792,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 819,
							"linearizedBaseContracts": [
								819
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 797,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 796,
												"id": 799,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 819,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 806,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 805,
												"id": 808,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 803,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 819,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 814,
												"id": 816,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 819,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 820,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							831
						]
					},
					"id": 832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 821,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 822,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 831,
							"linearizedBaseContracts": [
								831
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 824,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 831,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 832,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"C/concentrated liquidity .sol": {
				"ast": {
					"absolutePath": "C/concentrated liquidity .sol",
					"exportedSymbols": {
						"ConcentratedLiquidityPool": [
							1157
						],
						"Context": [
							819
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							789
						]
					},
					"id": 1158,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 833,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 834,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1158,
							"sourceUnit": 381,
							"src": "57:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 835,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1158,
							"sourceUnit": 790,
							"src": "141:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 836,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1158,
							"sourceUnit": 303,
							"src": "207:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 837,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1158,
							"sourceUnit": 148,
							"src": "270:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 839,
										"name": "Ownable",
										"nameLocations": [
											"639:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "639:7:9"
									},
									"id": 840,
									"nodeType": "InheritanceSpecifier",
									"src": "639:7:9"
								},
								{
									"baseName": {
										"id": 841,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"648:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "648:15:9"
									},
									"id": 842,
									"nodeType": "InheritanceSpecifier",
									"src": "648:15:9"
								}
							],
							"canonicalName": "ConcentratedLiquidityPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 838,
								"nodeType": "StructuredDocumentation",
								"src": "324:277:9",
								"text": "@notice ConcentratedLiquidityPool allows liquidity providers to deposit token0 and token1\n and concentrate their liquidity in a specified tick range (price range). This example\n calculates liquidity in a simplified manner (using the minimum of the provided amounts)."
							},
							"fullyImplemented": true,
							"id": 1157,
							"linearizedBaseContracts": [
								1157,
								302,
								147,
								819
							],
							"name": "ConcentratedLiquidityPool",
							"nameLocation": "610:25:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 846,
									"libraryName": {
										"id": 843,
										"name": "SafeERC20",
										"nameLocations": [
											"676:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 789,
										"src": "676:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "670:27:9",
									"typeName": {
										"id": 845,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 844,
											"name": "IERC20",
											"nameLocations": [
												"690:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "690:6:9"
										},
										"referencedDeclaration": 380,
										"src": "690:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 849,
									"mutability": "immutable",
									"name": "token0",
									"nameLocation": "727:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1157,
									"src": "703:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 848,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 847,
											"name": "IERC20",
											"nameLocations": [
												"703:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "703:6:9"
										},
										"referencedDeclaration": 380,
										"src": "703:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 852,
									"mutability": "immutable",
									"name": "token1",
									"nameLocation": "763:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1157,
									"src": "739:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 851,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 850,
											"name": "IERC20",
											"nameLocations": [
												"739:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "739:6:9"
										},
										"referencedDeclaration": 380,
										"src": "739:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "065e5360",
									"id": 854,
									"mutability": "mutable",
									"name": "currentTick",
									"nameLocation": "858:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1157,
									"src": "843:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 853,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "843:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "ConcentratedLiquidityPool.Position",
									"id": 869,
									"members": [
										{
											"constant": false,
											"id": 856,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "972:2:9",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "964:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 855,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "964:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 858,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "992:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "984:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 857,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "984:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 860,
											"mutability": "mutable",
											"name": "lowerTick",
											"nameLocation": "1013:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "1007:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 859,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "1007:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 862,
											"mutability": "mutable",
											"name": "upperTick",
											"nameLocation": "1038:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "1032:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 861,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "1032:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 864,
											"mutability": "mutable",
											"name": "amount0",
											"nameLocation": "1065:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "1057:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 863,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1057:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 866,
											"mutability": "mutable",
											"name": "amount1",
											"nameLocation": "1090:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "1082:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 865,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1082:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 868,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "1115:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "1107:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 867,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1107:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Position",
									"nameLocation": "945:8:9",
									"nodeType": "StructDefinition",
									"scope": 1157,
									"src": "938:193:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "99fbab88",
									"id": 874,
									"mutability": "mutable",
									"name": "positions",
									"nameLocation": "1226:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1157,
									"src": "1190:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Position_$869_storage_$",
										"typeString": "mapping(uint256 => struct ConcentratedLiquidityPool.Position)"
									},
									"typeName": {
										"id": 873,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 870,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1198:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1190:28:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Position_$869_storage_$",
											"typeString": "mapping(uint256 => struct ConcentratedLiquidityPool.Position)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 872,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 871,
												"name": "Position",
												"nameLocations": [
													"1209:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 869,
												"src": "1209:8:9"
											},
											"referencedDeclaration": 869,
											"src": "1209:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Position_$869_storage_ptr",
												"typeString": "struct ConcentratedLiquidityPool.Position"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "899346c7",
									"id": 876,
									"mutability": "mutable",
									"name": "nextPositionId",
									"nameLocation": "1256:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1157,
									"src": "1241:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 875,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1241:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "19c7fd3f52ff46f3dab96ff8ac8be59679992761324c4e0907c78cb7a4b8865c",
									"id": 892,
									"name": "LiquidityAdded",
									"nameLocation": "1283:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"indexed": true,
												"mutability": "mutable",
												"name": "positionId",
												"nameLocation": "1323:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1307:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1359:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1343:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1343:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"indexed": false,
												"mutability": "mutable",
												"name": "lowerTick",
												"nameLocation": "1380:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1374:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 881,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1374:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"indexed": false,
												"mutability": "mutable",
												"name": "upperTick",
												"nameLocation": "1405:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1399:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 883,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1399:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1432:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1424:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1457:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1449:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1482:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1474:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:200:9"
									},
									"src": "1277:221:9"
								},
								{
									"anonymous": false,
									"eventSelector": "196a4bf617b45641f176c4e6d288ccf7498f1699f68b1cc1e4daadf92779703b",
									"id": 902,
									"name": "LiquidityRemoved",
									"nameLocation": "1509:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"indexed": true,
												"mutability": "mutable",
												"name": "positionId",
												"nameLocation": "1551:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1535:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1535:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1587:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1571:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1610:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1602:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1635:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1627:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1525:123:9"
									},
									"src": "1503:146:9"
								},
								{
									"anonymous": false,
									"eventSelector": "ca2410361df736e1af5d81999e916cec0b435bf16bc69b5a209be194f88bec4d",
									"id": 906,
									"name": "CurrentTickUpdated",
									"nameLocation": "1660:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTick",
												"nameLocation": "1687:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "1679:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1678:17:9"
									},
									"src": "1654:42:9"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "2094:229:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 921,
																	"name": "_token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "2112:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2131:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2123:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 922,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2123:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2123:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2112:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 927,
																	"name": "_token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "2137:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2156:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2148:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 928,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2148:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2148:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2137:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2112:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2160:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 920,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2104:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2104:80:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "2104:80:9"
											},
											{
												"expression": {
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 937,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "2194:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 939,
																"name": "_token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "2210:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 938,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2203:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2203:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "2194:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "2194:24:9"
											},
											{
												"expression": {
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 943,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "2228:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 945,
																"name": "_token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "2244:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 944,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2237:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2237:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "2228:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "2228:24:9"
											},
											{
												"expression": {
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 949,
														"name": "currentTick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2262:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 950,
														"name": "_initialTick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "2276:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2262:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "2262:26:9"
											},
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 953,
														"name": "nextPositionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "2298:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2315:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2298:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "2298:18:9"
											}
										]
									},
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "1702:240:9",
										"text": "@notice Constructor sets the addresses for token0 and token1 and an initial tick.\n @param _token0 Address of the first token.\n @param _token1 Address of the second token.\n @param _initialTick The initial price tick."
									},
									"id": 958,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 916,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2031:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2035:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2031:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 918,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 915,
												"name": "Ownable",
												"nameLocations": [
													"2023:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2023:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2023:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "1967:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "1959:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "1984:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "1976:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "_initialTick",
												"nameLocation": "2001:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "1993:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1993:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:56:9"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2094:0:9"
									},
									"scope": 1157,
									"src": "1947:376:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "2567:61:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 968,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "2584:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 969,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "2594:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2584:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 972,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "2614:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2584:37:9",
													"trueExpression": {
														"id": 971,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "2604:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 967,
												"id": 974,
												"nodeType": "Return",
												"src": "2577:44:9"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "2329:138:9",
										"text": "@notice Internal helper to compute liquidity in a simplified manner.\n For example, we use the minimum of the two token amounts."
									},
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateLiquidity",
									"nameLocation": "2481:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2509:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2501:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2501:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2526:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2518:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2500:34:9"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2558:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2557:9:9"
									},
									"scope": 1157,
									"src": "2472:156:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "3273:827:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 993,
																"name": "lowerTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "3291:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 994,
																"name": "upperTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "3303:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "3291:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207469636b2072616e6765",
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3314:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5fb447cb8a73099b715c4ab92ff6f271e9605295d15c8841bc0b730a60ec7abf",
																"typeString": "literal_string \"Invalid tick range\""
															},
															"value": "Invalid tick range"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5fb447cb8a73099b715c4ab92ff6f271e9605295d15c8841bc0b730a60ec7abf",
																"typeString": "literal_string \"Invalid tick range\""
															}
														],
														"id": 992,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3283:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3283:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "3283:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1000,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "3353:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3363:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3353:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1003,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "3368:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3378:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3368:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3353:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e7473206d757374206265203e2030",
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3381:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0",
																"typeString": "literal_string \"Amounts must be > 0\""
															},
															"value": "Amounts must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9cea036fdd92b3b9742c72dd455096d886f3217fe32388a15f4fd01b92e549e0",
																"typeString": "literal_string \"Amounts must be > 0\""
															}
														],
														"id": 999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3345:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "3345:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1013,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3501:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3505:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3501:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1017,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3521:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ConcentratedLiquidityPool_$1157",
																		"typeString": "contract ConcentratedLiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ConcentratedLiquidityPool_$1157",
																		"typeString": "contract ConcentratedLiquidityPool"
																	}
																],
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3513:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1015,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3513:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3513:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "3528:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1010,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "3477:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3484:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "3477:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3477:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "3477:59:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1025,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3570:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3574:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3570:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1029,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3590:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ConcentratedLiquidityPool_$1157",
																		"typeString": "contract ConcentratedLiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ConcentratedLiquidityPool_$1157",
																		"typeString": "contract ConcentratedLiquidityPool"
																	}
																],
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3582:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1027,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3582:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3582:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1031,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "3597:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1022,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "3546:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3553:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "3546:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3546:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "3546:59:9"
											},
											{
												"assignments": [
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "3624:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1072,
														"src": "3616:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1034,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3616:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1040,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "3656:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1038,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "3665:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1036,
														"name": "_calculateLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "3636:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3636:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3616:57:9"
											},
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1041,
														"name": "positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "3684:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3697:16:9",
														"subExpression": {
															"id": 1042,
															"name": "nextPositionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "3697:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3684:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "3684:29:9"
											},
											{
												"expression": {
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1046,
															"name": "positions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "3723:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Position_$869_storage_$",
																"typeString": "mapping(uint256 => struct ConcentratedLiquidityPool.Position storage ref)"
															}
														},
														"id": 1048,
														"indexExpression": {
															"id": 1047,
															"name": "positionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "3733:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3723:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Position_$869_storage",
															"typeString": "struct ConcentratedLiquidityPool.Position storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1050,
																"name": "positionId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "3774:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1051,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3805:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3809:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3805:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1053,
																"name": "lowerTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "3840:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"id": 1054,
																"name": "upperTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "3874:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"id": 1055,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "3906:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1056,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "3936:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1057,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "3968:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1049,
															"name": "Position",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "3747:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Position_$869_storage_ptr_$",
																"typeString": "type(struct ConcentratedLiquidityPool.Position storage pointer)"
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3770:2:9",
															"3798:5:9",
															"3829:9:9",
															"3863:9:9",
															"3897:7:9",
															"3927:7:9",
															"3957:9:9"
														],
														"names": [
															"id",
															"owner",
															"lowerTick",
															"upperTick",
															"amount0",
															"amount1",
															"liquidity"
														],
														"nodeType": "FunctionCall",
														"src": "3747:241:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Position_$869_memory_ptr",
															"typeString": "struct ConcentratedLiquidityPool.Position memory"
														}
													},
													"src": "3723:265:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Position_$869_storage",
														"typeString": "struct ConcentratedLiquidityPool.Position storage ref"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "3723:265:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1062,
															"name": "positionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "4019:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1063,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4031:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4035:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4031:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1065,
															"name": "lowerTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "4043:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 1066,
															"name": "upperTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "4054:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 1067,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "4065:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1068,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "4074:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1069,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "4083:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "4004:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,int24,int24,uint256,uint256,uint256)"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4004:89:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "EmitStatement",
												"src": "3999:94:9"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "2634:455:9",
										"text": "@notice Allows a user to add liquidity within a specified tick range.\n The user must have approved this contract to transfer the tokens.\n @param lowerTick The lower bound of the tick range.\n @param upperTick The upper bound of the tick range.\n @param amount0 The amount of token0 to deposit.\n @param amount1 The amount of token1 to deposit.\n @return positionId The unique ID of the created liquidity position."
									},
									"functionSelector": "fd87f9aa",
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 988,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 987,
												"name": "nonReentrant",
												"nameLocations": [
													"3231:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3231:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3231:12:9"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "3103:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "lowerTick",
												"nameLocation": "3131:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "3125:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 978,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3125:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "upperTick",
												"nameLocation": "3156:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "3150:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 980,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3150:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3183:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "3175:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3208:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "3200:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3200:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3115:106:9"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "positionId",
												"nameLocation": "3261:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "3253:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3253:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3252:20:9"
									},
									"scope": 1157,
									"src": "3094:1006:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "4388:509:9",
										"statements": [
											{
												"assignments": [
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "pos",
														"nameLocation": "4414:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1138,
														"src": "4398:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Position_$869_memory_ptr",
															"typeString": "struct ConcentratedLiquidityPool.Position"
														},
														"typeName": {
															"id": 1082,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1081,
																"name": "Position",
																"nameLocations": [
																	"4398:8:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 869,
																"src": "4398:8:9"
															},
															"referencedDeclaration": 869,
															"src": "4398:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Position_$869_storage_ptr",
																"typeString": "struct ConcentratedLiquidityPool.Position"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1087,
												"initialValue": {
													"baseExpression": {
														"id": 1084,
														"name": "positions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "4420:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Position_$869_storage_$",
															"typeString": "mapping(uint256 => struct ConcentratedLiquidityPool.Position storage ref)"
														}
													},
													"id": 1086,
													"indexExpression": {
														"id": 1085,
														"name": "positionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "4430:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4420:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Position_$869_storage",
														"typeString": "struct ConcentratedLiquidityPool.Position storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4398:43:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1089,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "4459:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Position_$869_memory_ptr",
																		"typeString": "struct ConcentratedLiquidityPool.Position memory"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4463:5:9",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 858,
																"src": "4459:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1091,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4472:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4476:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4472:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4459:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420706f736974696f6e206f776e6572",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4484:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_afa3981e1a0c56edb4debd947302e8fcdc7b068aa2aa8d78a386d11182ad9c1d",
																"typeString": "literal_string \"Not position owner\""
															},
															"value": "Not position owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_afa3981e1a0c56edb4debd947302e8fcdc7b068aa2aa8d78a386d11182ad9c1d",
																"typeString": "literal_string \"Not position owner\""
															}
														],
														"id": 1088,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4451:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4451:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "4451:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1098,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "4523:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Position_$869_memory_ptr",
																		"typeString": "struct ConcentratedLiquidityPool.Position memory"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4527:9:9",
																"memberName": "liquidity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 868,
																"src": "4523:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4539:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4523:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f736974696f6e20616c72656164792072656d6f766564",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4542:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c362a44df75753905b6b47e5d73e6167c82251760df47c64d9e543e834ba0c90",
																"typeString": "literal_string \"Position already removed\""
															},
															"value": "Position already removed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c362a44df75753905b6b47e5d73e6167c82251760df47c64d9e543e834ba0c90",
																"typeString": "literal_string \"Position already removed\""
															}
														],
														"id": 1097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4515:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "4515:54:9"
											},
											{
												"expression": {
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4612:28:9",
													"subExpression": {
														"baseExpression": {
															"id": 1105,
															"name": "positions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "4619:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Position_$869_storage_$",
																"typeString": "mapping(uint256 => struct ConcentratedLiquidityPool.Position storage ref)"
															}
														},
														"id": 1107,
														"indexExpression": {
															"id": 1106,
															"name": "positionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "4629:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4619:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Position_$869_storage",
															"typeString": "struct ConcentratedLiquidityPool.Position storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "4612:28:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1113,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4730:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4734:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4730:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1115,
																"name": "pos",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "4742:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Position_$869_memory_ptr",
																	"typeString": "struct ConcentratedLiquidityPool.Position memory"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4746:7:9",
															"memberName": "amount0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "4742:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1110,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "4710:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4717:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "4710:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4710:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "4710:44:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1122,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4784:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4788:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4784:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1124,
																"name": "pos",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "4796:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Position_$869_memory_ptr",
																	"typeString": "struct ConcentratedLiquidityPool.Position memory"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4800:7:9",
															"memberName": "amount1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 866,
															"src": "4796:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1119,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "4764:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4771:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "4764:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4764:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "4764:44:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1129,
															"name": "positionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "4841:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1130,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4853:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4857:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4853:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1132,
																"name": "pos",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "4865:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Position_$869_memory_ptr",
																	"typeString": "struct ConcentratedLiquidityPool.Position memory"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4869:7:9",
															"memberName": "amount0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "4865:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1134,
																"name": "pos",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "4878:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Position_$869_memory_ptr",
																	"typeString": "struct ConcentratedLiquidityPool.Position memory"
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4882:7:9",
															"memberName": "amount1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 866,
															"src": "4878:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1128,
														"name": "LiquidityRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "4824:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256)"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4824:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1137,
												"nodeType": "EmitStatement",
												"src": "4819:71:9"
											}
										]
									},
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "4106:210:9",
										"text": "@notice Allows the owner of a liquidity position to remove their liquidity.\n The position is deleted and the deposited tokens are returned.\n @param positionId The ID of the position to remove."
									},
									"functionSelector": "9c8f9f23",
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1079,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1078,
												"name": "nonReentrant",
												"nameLocations": [
													"4375:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "4375:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4375:12:9"
										}
									],
									"name": "removeLiquidity",
									"nameLocation": "4330:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "positionId",
												"nameLocation": "4354:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "4346:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4346:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4345:20:9"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4388:0:9"
									},
									"scope": 1157,
									"src": "4321:576:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "5095:80:9",
										"statements": [
											{
												"expression": {
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1147,
														"name": "currentTick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "5105:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1148,
														"name": "newTick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "5119:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5105:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "5105:21:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1152,
															"name": "newTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "5160:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1151,
														"name": "CurrentTickUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "5141:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5141:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "EmitStatement",
												"src": "5136:32:9"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "4903:124:9",
										"text": "@notice Updates the current tick (price). Only the owner can update the tick.\n @param newTick The new tick value."
									},
									"functionSelector": "291df278",
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1145,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1144,
												"name": "onlyOwner",
												"nameLocations": [
													"5085:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5085:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5085:9:9"
										}
									],
									"name": "updateCurrentTick",
									"nameLocation": "5041:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "newTick",
												"nameLocation": "5067:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "5059:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5059:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5058:17:9"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5095:0:9"
									},
									"scope": 1157,
									"src": "5032:143:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1158,
							"src": "601:4576:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								892,
								902,
								906
							]
						}
					],
					"src": "32:5146:9"
				},
				"id": 9
			}
		}
	}
}